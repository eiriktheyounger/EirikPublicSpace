{
  "swagger": "2.0",
  "info": {
    "description": "VOS Public APIs Schema from Build 1.28.0.0.62",
    "version": "1.28.0.0",
    "title": "VOS",
    "contact": {
      "name": "moore.macauley@harmonicinc.com"
    },
    "license": {
      "name": "Harmonic Inc.",
      "url": "http://harmonicinc.com/"
    }
  },
  "host": "10.21.68.191:443",
  "basePath": "/cluster1/vos-api",
  "tags": [
    {
      "name": "asset-creation-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "notification-controller",
      "description": "System Notification Operation"
    },
    {
      "name": "web-uploader-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "log-view-controller",
      "description": "Log viewing and management API"
    },
    {
      "name": "rest-controller",
      "description": "The Rest interface to manage external asset storage app configuration"
    },
    {
      "name": "decision-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "settings-controller",
      "description": "A configuration resource for settings"
    },
    {
      "name": "graphic-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "rest-region-controller",
      "description": "Rest Region Controller"
    },
    {
      "name": "default-pool-controller",
      "description": "A configuration resource for a collection of divitrack pools"
    },
    {
      "name": "dolby-vision-file-controller",
      "description": "Dolby-Vision file download REST protocol."
    },
    {
      "name": "rest-cloud-source-controller",
      "description": "Rest Cloud Source Controller"
    },
    {
      "name": "atm-setting-controller",
      "description": "Atm Setting Controller"
    },
    {
      "name": "default-full-service-controller",
      "description": "A configuration resource for a collection of fullService"
    },
    {
      "name": "live-event-state-controller",
      "description": "Live Event State Controller"
    },
    {
      "name": "service-controller",
      "description": "Monitoring the Services defined in VOS"
    },
    {
      "name": "rest-cloud-edge-controller",
      "description": "Rest Cloud Edge Controller"
    },
    {
      "name": "default-graphics-template-controller",
      "description": "A configuration resource for a graphics template"
    },
    {
      "name": "vcm-variant-channel-rest-controller",
      "description": "Vcm Variant Channel Rest Controller"
    },
    {
      "name": "default-destination-controller",
      "description": "A configuration resource for a collection of outputs"
    },
    {
      "name": "playout-control-backend-controller",
      "description": "The VOS application that allows to control the playout"
    },
    {
      "name": "lut-file-controller",
      "description": "LUT file download REST protocol."
    },
    {
      "name": "image-file-sync-controller",
      "description": "Configure image file (logo, graphics template) synchronizer"
    },
    {
      "name": "drm-controller",
      "description": "Configures DRM"
    },
    {
      "name": "default-source-controller",
      "description": "A configuration resource for a collection of inputs"
    },
    {
      "name": "default-image-controller",
      "description": "A configuration resource for an image"
    },
    {
      "name": "atm-rest-controller",
      "description": "REST APIs of ATM"
    },
    {
      "name": "pmm-variant-channels-filter-rest-controller",
      "description": "Pmm Variant Channels Filter Rest Controller"
    },
    {
      "name": "mux-monitor-controller",
      "description": "Mux Monitor Controller"
    },
    {
      "name": "unified-origin-engine-ami-json-rest-controller",
      "description": "The Rest interface of the unified origin engine based on JSON"
    },
    {
      "name": "live-ingest-origin-rest-controller",
      "description": "The Rest interface of Live Ingest Origin App"
    },
    {
      "name": "asset-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "default-lsm-controller",
      "description": "A configuration resource for a collection of LSM endpoints"
    },
    {
      "name": "ahdr-sl-hdr-1-config-file-controller",
      "description": "AHDR SL-HDR1 CONFIG file download REST protocol."
    },
    {
      "name": "file-server-asset-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "default-descrambling-keys-controller",
      "description": "Default Descrambling Keys Controller"
    },
    {
      "name": "logo-templates-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "backup-restore-rest-controller",
      "description": "Configure backup to the cloud"
    },
    {
      "name": "unified-origin-engine-rest-controller",
      "description": "The Rest interface of the unified origin engine"
    },
    {
      "name": "default-service-provision-controller",
      "description": "An Adapter for NMS to configure serivce in VOS."
    },
    {
      "name": "mux-controller",
      "description": "Mux Controller"
    },
    {
      "name": "recording-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "source-grooming-controller",
      "description": "A configuration resource for a collection of inputs"
    },
    {
      "name": "rest-cloud-subscription-account-location-mapping-controller",
      "description": "Rest Cloud Subscription Account Location Mapping Controller"
    },
    {
      "name": "grooming-profiles-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "system-controller",
      "description": "System Controller"
    },
    {
      "name": "rest-cloud-release-version-controller",
      "description": "Rest Cloud Release Version Controller"
    },
    {
      "name": "job-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "live-event-controller",
      "description": "Live Event Controller"
    },
    {
      "name": "network-controller",
      "description": "Network Controller"
    },
    {
      "name": "file-server-controller",
      "description": "The Rest interface of Asset Acquisition VOS App"
    },
    {
      "name": "client-controller",
      "description": "Client Controller"
    },
    {
      "name": "test-receiver-controller",
      "description": "A configuration resource for a collection of CloudLinks"
    },
    {
      "name": "default-font-file-controller",
      "description": "Font file download REST protocol."
    },
    {
      "name": "graph-ql-controller",
      "description": "The GraphQL interface of Asset Acquisition VOS App"
    },
    {
      "name": "source-monitor-controller",
      "description": "The VOS application that allows users to discover source and to groom audio."
    },
    {
      "name": "table-generator-controller",
      "description": "Table Generator Controller"
    },
    {
      "name": "rf-controller",
      "description": "The Rest interface of Flex plateform VOS App"
    },
    {
      "name": "pois-app-controller",
      "description": "The Rest interface of ESAM POIS VOS App"
    },
    {
      "name": "bxf-controller",
      "description": "The Rest interface of BxfControlAdaptor"
    },
    {
      "name": "default-service-controller",
      "description": "A configuration resource for a collection of inputs"
    },
    {
      "name": "uplink-controller",
      "description": "A configuration resource for a collection of CloudLinks"
    }
  ],
  "paths": {
    "/asset-acquisition/v1/asset": {
      "put": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Update existing asset. Considered to be used only by engineers with advanced knowledge of AA",
        "operationId": "updateAssetUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "asset",
            "description": "asset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/external": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get status of external assets",
        "operationId": "getExternalAssetStatusUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of asset to get status for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestExternalAssetStatus"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/external/dash": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Create external assets in DASH",
        "operationId": "createExternalDashAssetUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "asset_url",
            "in": "query",
            "description": "URL of external asset",
            "required": true,
            "type": "string"
          },
          {
            "name": "asset_title",
            "in": "query",
            "description": "Asset title",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/external/hls": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Create external assets in HLS",
        "operationId": "createExternalHlsAssetUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "asset_url",
            "in": "query",
            "description": "URL of external asset",
            "required": true,
            "type": "string"
          },
          {
            "name": "asset_title",
            "in": "query",
            "description": "Asset title",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/fileserver": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Download asset from file server to local storage",
        "operationId": "createFileServerAssetUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileServerAsset",
            "description": "fileServerAsset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerAsset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing, but the processing has not been started",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/llcu": {
      "post": {
        "tags": [
          "Asset Acquisition Recordings"
        ],
        "summary": "Create asset from LLCU",
        "operationId": "createLlcuAssetUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restAsset",
            "description": "restAsset",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.LlcuAssetBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/record": {
      "post": {
        "tags": [
          "Asset Acquisition Recordings"
        ],
        "summary": "Create record from channel",
        "operationId": "createRecordUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RecordCreationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/s3": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Create asset from S3 storage",
        "operationId": "createAssetFromS3UsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "description": "file_path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/segments": {
      "put": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Update segments by asset id",
        "operationId": "updateAssetSegmentsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restSegmentation",
            "description": "restSegmentation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/source-file/{assetId}": {
      "delete": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Delete source file asset",
        "operationId": "deleteSourceFileUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "assetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/url": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get status of input assets",
        "operationId": "getAssetDownloadingStatusUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of asset to get status for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSourceDownloadStatus"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Download asset to local storage",
        "operationId": "downloadAssetUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "asset_urls",
            "in": "query",
            "description": "URL of external asset. (File servers with self-signed certificate are accepted)",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "url_paths_encoded",
            "in": "query",
            "description": "Are special symbols (spaces, %, +, etc.) replaced with corresponding percent codes in path part of URL.",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "asset_id",
            "in": "query",
            "description": "Asset id",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_title",
            "in": "query",
            "description": "Asset title",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Labels",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "username",
            "in": "query",
            "description": "username while authentication",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "password while authentication",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip_ssl_certificate_validation",
            "in": "query",
            "description": "All SSL certificates are accepted under the client responsibility. Pass `true` to accept all.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{assetId}/segments": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get segments by asset id",
        "operationId": "getAssetSegmentsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "assetId",
            "in": "path",
            "description": "ID of asset whose segments to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentation"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get Asset by id",
        "operationId": "getAssetByIdUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of asset to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Delete asset",
        "description": "Delete asset, output files and information on transcoding jobs.",
        "operationId": "deleteAssetUsingDELETE_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of asset to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/action": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Action on asset",
        "operationId": "actionOnAssetUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "params",
            "description": "params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.ActionParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.ActionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing, but the processing has not been started",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.ActionResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/cue-point-info": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get Asset cue point info",
        "operationId": "getCuePointsInfoUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestCuePointsInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Update asset cue point info",
        "description": "Update asset cue point info.",
        "operationId": "updateCuePointsInfoUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "cuePointsInfo",
            "description": "cuePointsInfo",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestCuePointsInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/destination-profile": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Returns asset destination profile details",
        "operationId": "getAssetDestinationProfileDetailsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an asset",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Asset destination profile id returned",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.AssetDestinationProfileDetails"
            }
          },
          "401": {
            "description": "Requester not authorized for this operation"
          },
          "500": {
            "description": "Internal server error occurred"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Asset with given id not found"
          }
        }
      },
      "put": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Updates asset destination profile id",
        "operationId": "updateDestinationProfileIdUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an asset",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateRequest",
            "description": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.DestinationProfileUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successfully processed"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Provided destination profile is invalid"
          },
          "401": {
            "description": "Requester not authorized for this operation"
          },
          "500": {
            "description": "Internal server error occurred"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Asset with given id not found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/drm": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get asset encryption settings",
        "description": "Get asset encryption settings",
        "operationId": "getAssetDrmPropertiesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an asset",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.DrmProperties"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Set asset encryption settings",
        "description": "Set asset encryption settings",
        "operationId": "setAssetDrmPropertiesUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an asset",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "drmProperties",
            "description": "drmProperties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.DrmProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/metadata": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get asset metadata",
        "operationId": "getAssetMetadataUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.AssetMetadata"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/subtitle": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Upload asset subtitle",
        "description": "Upload subtitle for asset",
        "operationId": "uploadAssetSubtitleUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subtitle_file",
            "in": "formData",
            "description": "File to be uploaded as asset subtitle",
            "required": true,
            "type": "file"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an asset",
            "required": true,
            "type": "string"
          },
          {
            "name": "pac_code_page",
            "in": "query",
            "description": "Code page (only PAC subtitles)",
            "required": false,
            "type": "string",
            "enum": [
              "LATIN",
              "TURKISH",
              "JAPANESE",
              "KOREAN",
              "CHS",
              "CHT",
              "CYRILLIC",
              "THAI",
              "HEBREW",
              "ARABIC",
              "CZECH",
              "GREEK"
            ]
          },
          {
            "name": "pac_offset",
            "in": "query",
            "description": "Offset (only PAC and VTT subtitles)",
            "required": false,
            "type": "string"
          },
          {
            "name": "subtitle_language",
            "in": "query",
            "description": "Language of subtitle",
            "required": true,
            "type": "string"
          },
          {
            "name": "subtitle_type",
            "in": "query",
            "description": "Type of subtitle",
            "required": false,
            "type": "string",
            "default": "NORMAL",
            "enum": [
              "NORMAL",
              "HARD_OF_HEARING",
              "FORCED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/asset/{id}/thumbnail": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get asset thumbnail",
        "description": "Get the thumbnail of asset by specifying an asset ID.",
        "operationId": "getAssetThumbnailUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an asset",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/assets": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get all assets",
        "description": "List all existing assets and their output files. Use the limit parameter if there are more than 300 assets were ingested to system",
        "operationId": "getAssetsUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Query assets by titles, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Query assets by labels, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "uriRegex",
            "in": "query",
            "description": "Query assets by uri regex (works with creationDate, skip and limit only)",
            "required": false,
            "type": "string"
          },
          {
            "name": "creationDate",
            "in": "query",
            "description": "Query assets by creation date (UNIX epoch timestamp in milliseconds)",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this many first results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Show at most this many results",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/assets/library": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get assets Library",
        "description": "List all existing assets in Library. Use the limit parameter if there are more than 300 assets in Library",
        "operationId": "getLibraryAssetsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Query assets by titles, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Query assets by labels, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this many first results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Show at most this many results",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/assets/need_decision": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get assets pending decision",
        "operationId": "getAssetsWithoutOutputAssetAndNotGroomedUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "trimmed",
            "in": "query",
            "description": "Trim asset info of non-essential info to make response shorter",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "title",
            "in": "query",
            "description": "Query assets by titles, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this many first results",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Show at most this many results",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/decision": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Submit decision",
        "description": "Submit transcoding decision to be applied for assets. Job will be created for every listed asset, each job will have a task for each listed transcoding profile.",
        "operationId": "submitDecisionUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "decision",
            "description": "Decision to be applied",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Decision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing, but the processing has not been started",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/export": {
      "post": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Export packaged asset",
        "operationId": "exportAssetUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileServerAssetExport",
            "description": "fileServerAssetExport",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerAssetExport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/export/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Get status of asset exporting",
        "operationId": "getExportStatusUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of asset",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.ExportLog"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/file/upload": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Chunk upload of file",
        "description": "Create an asset or graphic by uploading a file",
        "operationId": "uploadFileUsingPOST_5",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "asset_file",
            "in": "formData",
            "description": "File chunk to be uploaded",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/fileserver": {
      "post": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Register a new file server",
        "operationId": "createFileServerUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restFileServerSetup",
            "description": "restFileServerSetup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestFileServerSetup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestFileServerSetup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Update existing file server",
        "operationId": "updateFileServerUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restFileServerSetup",
            "description": "restFileServerSetup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestFileServerSetup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/fileserver/asset/status": {
      "get": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Get status of input asset",
        "operationId": "getFileServerAssetStatusUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of asset to get status for",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerAssetDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/fileserver/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Get file server by id",
        "operationId": "getByIdUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestFileServerSetup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Delete file server",
        "operationId": "deleteByIdUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/asset-acquisition/v1/fileservers": {
      "get": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Get all file servers",
        "operationId": "getAllUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestFileServerSetup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphic": {
      "put": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Update graphic",
        "description": "Update existing graphic",
        "operationId": "updateGraphicUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "graphic",
            "description": "graphic",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Graphic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphic/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get graphic by id",
        "operationId": "getGraphicByIdUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Graphic"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Delete graphic",
        "operationId": "deleteGraphicUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphics": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get all graphics",
        "description": "List all existing graphics.",
        "operationId": "getGraphicsUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Graphic"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphics/fileserver": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Create graphics from file server storage",
        "operationId": "createGraphicFromFileServerUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileServerGraphic",
            "description": "Graphics to create from file server",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerGraphic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Graphic"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphics/library": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "getLibraryGraphics",
        "operationId": "getLibraryGraphicsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Query graphics by titles, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Query graphics by labels, separated by space",
            "required": false,
            "type": "string"
          },
          {
            "name": "uriRegex",
            "in": "query",
            "description": "Query graphics by uri regex (works with creationDate, skip and limit only)",
            "required": false,
            "type": "string"
          },
          {
            "name": "creationDate",
            "in": "query",
            "description": "Query graphics by creation date (UNIX epoch timestamp in milliseconds)",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this many first results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Show at most this many results",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "graphicType",
            "in": "query",
            "description": "Type of graphic",
            "required": false,
            "type": "string",
            "enum": [
              "GRAPHIC",
              "LOGO",
              "AUDIO",
              "HTML_GRAPHIC"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Graphic"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphics/s3": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Create graphics from S3 storage",
        "operationId": "createGraphicFromS3UsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "description": "file_path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Graphic"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/graphql": {
      "post": {
        "tags": [
          "Asset Acquisition GraphQL API"
        ],
        "summary": "GraphQL API endpoint",
        "operationId": "graphqlUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/grooming-profile": {
      "post": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Create grooming profile",
        "description": "Create or update grooming profile",
        "operationId": "createGroomingProfileUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "profile",
            "description": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/grooming-profile/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Get grooming profile",
        "description": "Get grooming profile",
        "operationId": "getGroomingProfileUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Update grooming profile",
        "description": "Update grooming profile",
        "operationId": "updateGroomingProfileUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile id to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "profile",
            "description": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Delete grooming profile",
        "description": "Delete grooming profile",
        "operationId": "deleteGroomingProfileUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Profile id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/asset-acquisition/v1/grooming-profiles": {
      "get": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Get list of grooming profiles",
        "description": "Get the list of available grooming profiles",
        "operationId": "getGroomingProfilesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/job/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get job",
        "description": "Get job",
        "operationId": "getJobByIdUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of job to find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Job"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/job/{id}/cancel": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Cancel job",
        "operationId": "cancelJobByIdUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of job to cancel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/jobs": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get all jobs",
        "description": "Get information on transcoding jobs: scheduled, ongoing and finished. Use the limit parameter if there are more than 300 jobs were processed",
        "operationId": "getJobsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sourceFileName",
            "in": "query",
            "description": "Filter by source file name",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "Filter by assetId (vodTitleId)",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter jobs by transcoding status list (QUEUED, PROCESSING, FINISHED)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "Filter jobs by task status list (QUEUED, SUBMITTED, PROCESSING, FINISHED, FAILED, CANCELED, REJECTED)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fileTranscoder",
            "in": "query",
            "description": "Filter jobs by file transcoder (INTERNAL, HARMONIC_CLOUD)",
            "required": false,
            "type": "string",
            "enum": [
              "INTERNAL",
              "HARMONIC_CLOUD"
            ]
          },
          {
            "name": "jobTypes",
            "in": "query",
            "description": "Filter jobs by job type (TRANSCODING, VQ, PACKAGING, REINDEXING)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "submittedDate",
            "in": "query",
            "description": "Filter jobs by submitting date (UNIX epoch timestamp in milliseconds)",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "startedDate",
            "in": "query",
            "description": "Filter jobs by starting date (UNIX epoch timestamp in milliseconds)",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "completedDate",
            "in": "query",
            "description": "Filter jobs by completing date (UNIX epoch timestamp in milliseconds)",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip this many first results",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Show at most this many results",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Job"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/jobs/statistics": {
      "get": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Get jobs statistics",
        "operationId": "getJobsStatisticsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.JobStatistics"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/logo-template": {
      "post": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Save new logo template",
        "operationId": "postLogoUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "restLogo",
            "description": "restLogo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Logo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Logo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/logo-template/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Get logo template by ID",
        "operationId": "getLogoByIdUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Logo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Delete logo template",
        "operationId": "deleteLogoUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/asset-acquisition/v1/logo-templates": {
      "get": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Get all logo templates",
        "operationId": "getAllLogosUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Logo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/servicesInfo": {
      "get": {
        "tags": [
          "Asset Acquisition Recordings"
        ],
        "summary": "Get active service info",
        "operationId": "getServicesInfoUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.ConfigureServiceInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/servicesInfo/{id}": {
      "get": {
        "tags": [
          "Asset Acquisition Recordings"
        ],
        "summary": "Get active service info",
        "operationId": "getServicesInfoUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.ConfigureServiceInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/settings": {
      "get": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Get settings",
        "description": "Get general application settings: default decision to be applied for assets, created from S3-originated files.",
        "operationId": "getGeneralSettingsUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.GeneralSettings"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Asset Acquisition General"
        ],
        "summary": "Set settings",
        "description": "Set general application settings.",
        "operationId": "setGeneralSettingsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "generalSettings",
            "description": "Default decision",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.GeneralSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/subtitle/fileserver": {
      "post": {
        "tags": [
          "Asset Acquisition File Servers"
        ],
        "summary": "Attach subtitle from file server to an existing asset",
        "description": "Upload subtitle from file server",
        "operationId": "uploadAssetSubtitleFromFileServerUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fileServerSubtitle",
            "description": "fileServerSubtitle",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerSubtitle"
            }
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "assetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Asset"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/subtitle/s3": {
      "post": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Attach subtitle from S3 storage to an existing asset",
        "operationId": "postSubtitleFromS3UsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subtitles",
            "description": "subtitles",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitle"
              }
            }
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "assetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/asset-acquisition/v1/subtitle/{id}": {
      "delete": {
        "tags": [
          "Asset Acquisition"
        ],
        "summary": "Delete subtitle",
        "description": "Delete subtitle",
        "operationId": "deleteSubtitleByIdUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of subtitle to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/atm/v1/manifest-filtering/profiles": {
      "get": {
        "tags": [
          "ATM"
        ],
        "summary": "Get all manifest filtering profiles",
        "description": "Get all manifest filtering profiles",
        "operationId": "getProfilesUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.Profiles"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "ATM"
        ],
        "summary": "Set manifest filtering profile",
        "description": "set manifest filtering profile",
        "operationId": "setProfileUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "profile",
            "description": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/manifest-filtering/profiles/{id}": {
      "get": {
        "tags": [
          "ATM"
        ],
        "summary": "Get manifest filtering profile",
        "description": "Get manifest filtering profile",
        "operationId": "getProfileUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.Profile"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "ATM"
        ],
        "summary": "Update manifest filtering profile",
        "description": "Update manifest filtering profile",
        "operationId": "updateProfileUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "profile",
            "description": "profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.Profile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.Profile"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "ATM"
        ],
        "summary": "Delete manifest filtering profile",
        "description": "Delete manifest filtering profile",
        "operationId": "deleteProfileUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/atm/v1/settings": {
      "get": {
        "tags": [
          "ATM Setting"
        ],
        "summary": "Get ATM Setting.",
        "description": "Get ATM Setting.",
        "operationId": "getSettingUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmSettingConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "ATM Setting"
        ],
        "summary": "Set ATM Setting.",
        "description": "Set ATM Setting.",
        "operationId": "setSettingUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "atmSettingConfig",
            "description": "atmSettingConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmSettingConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmSettingConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/variant-channels-filter": {
      "get": {
        "tags": [
          "VCM Variant Channels Filter"
        ],
        "summary": "Get all variant channels filters.",
        "description": "Get all variant channels filters.",
        "operationId": "getAllUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start_at",
            "in": "query",
            "description": "Skip vcfilter profile name alphabetically smaller than this",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Show at most this many results",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VCM Variant Channels Filter"
        ],
        "summary": "Create a variant channels filter",
        "description": "Create a variant channels filter. The number of filters is limited to 20000. Error code 500 will be returned if you try to add more.",
        "operationId": "createUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "vcfilter",
            "description": "vcfilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/variant-channels-filter-status": {
      "get": {
        "tags": [
          "VCM Variant Channels Filter"
        ],
        "summary": "Get the status of the database that stores variant channels filters.",
        "description": "Get the status of the database that stores variant channels filters.",
        "operationId": "getStatusUsingGET_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilterStatus"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/variant-channels-filter/{profile-name}": {
      "get": {
        "tags": [
          "VCM Variant Channels Filter"
        ],
        "summary": "Get a variant channels filter.",
        "description": "Get a variant channels filter.",
        "operationId": "getOneUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "profile-name",
            "in": "path",
            "description": "The name of variant channels filter.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VCM Variant Channels Filter"
        ],
        "summary": "Create or update a variant channels filter.",
        "description": "Create or update a variant channels filter. The number of filters is limited to 20000. Error code 500 will be returned if you try to add more.",
        "operationId": "updateUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "profile-name",
            "in": "path",
            "description": "The name of variant channels filter",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "vcfilter",
            "description": "vcfilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VCM Variant Channels Filter"
        ],
        "summary": "Delete a variant channels filter.",
        "description": "Delete a variant channels filter.",
        "operationId": "deleteUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "profile-name",
            "in": "path",
            "description": "The name of the variant channels filter",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/vcm/content-generation-channels": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get all content generation channels.",
        "description": "Get all content generation channels.",
        "operationId": "getAllContentGenerationChannelsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create a content generation channel",
        "description": "Create a content generation channel.",
        "operationId": "createContentGenerationChannelUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/vcm/content-generation-channels/{channel-name}": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get a content generation channel.",
        "description": "Get a content generation channel.",
        "operationId": "getOneContentGenerationChannelUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the content generation channel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create or update a content generation channel",
        "description": "Create or update a content generation channel.",
        "operationId": "updateContentGenerationChannelUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of content generation channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Delete a content generation channel.",
        "description": "Delete a content generation channel.",
        "operationId": "deleteContentGenerationChannelUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the content Generation channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/atm/v1/vcm/content-replacement-channels": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get all content replacement channels.",
        "description": "Get all content replacement channels.",
        "operationId": "getAllContentReplacementChannelsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create a content replacement channel",
        "description": "Create a content replacement channel.",
        "operationId": "createContentReplacementChannelUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/vcm/content-replacement-channels/{channel-name}": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get a content replacement channel.",
        "description": "Get a content replacement channel.",
        "operationId": "getOneContentReplacementChannelUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the content replacement channel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create or update a content replacement channel",
        "description": "Create or update a content replacement channel.",
        "operationId": "updateContentReplacementChannelUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of content replacement channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Delete a content replacement channel.",
        "description": "Delete a content replacement channel.",
        "operationId": "deleteContentReplacementChannelUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the content replacement channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/atm/v1/vcm/live-event-clipping-channels": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get all live event clipping channels.",
        "description": "Get all live event clipping channels.",
        "operationId": "getAllLiveEventClippingChannelsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create a live event clipping channel",
        "description": "Create a live event clipping channel.",
        "operationId": "createLiveEventClippingChannelUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/vcm/live-event-clipping-channels/{channel-name}": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get a live event clipping channel.",
        "description": "Get a live event clipping channel.",
        "operationId": "getOneLiveEventClippingChannelUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the live event clipping channel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create or update a live event clipping channel",
        "description": "Create or update a live event clipping channel.",
        "operationId": "updateLiveEventClippingChannelUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of live event clipping channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Delete a live event clipping channel.",
        "description": "Delete a live event clipping channel.",
        "operationId": "deleteLiveEventClippingChannelUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the live event clipping channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/atm/v1/vcm/regional-ads-channels": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get all regional ads channels.",
        "description": "Get all regional ads channels.",
        "operationId": "getAllRegionalAdsChannelsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create a regional ads channel",
        "description": "Create a regional ads channel.",
        "operationId": "createRegionalAdsChannelUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/vcm/regional-ads-channels/{channel-name}": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get a regional ads channel.",
        "description": "Get a regional ads channel.",
        "operationId": "getOneRegionalAdsChannelUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the regional ads channel.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create or update a regional ads channel",
        "description": "Create or update a regional ads channel.",
        "operationId": "updateRegionalAdsChannelUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of content generation channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "channel",
            "description": "channel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Delete a regional ads channel.",
        "description": "Delete a regional ads channel.",
        "operationId": "deleteRegionalAdsChannelUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channel-name",
            "in": "path",
            "description": "The name of the content Generation channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/atm/v1/vcm/variant-channels-sourceid-mapping": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get all sourceID mappings.",
        "description": "Get all sourceID mappings.",
        "operationId": "getAllSourceIDMappingUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelSourceIDMapping"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Create or update a sourceID mapping.",
        "description": "Create or update a sourceID mapping.",
        "operationId": "createSourceIDMappingUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mapping",
            "description": "mapping",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelSourceIDMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelSourceIDMapping"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/atm/v1/vcm/variant-channels-sourceid-mapping/{sourceid}": {
      "get": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Get a sourceID mapping.",
        "description": "Get a sourceID mapping.",
        "operationId": "getOneSourceIDMappingUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sourceid",
            "in": "path",
            "description": "The ID of the sourceID mapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelSourceIDMapping"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "VCM Variant Channels"
        ],
        "summary": "Delete a sourceID mapping.",
        "description": "Delete a sourceID mapping.",
        "operationId": "deleteSourceIDMappingUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sourceid",
            "in": "path",
            "description": "The ID of the sourceID mapping.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/backup-restore/v1/backup/download/{backupId}": {
      "get": {
        "tags": [
          "BackupRestore"
        ],
        "summary": "Download local backup",
        "description": "Download local backup (XOS only)",
        "operationId": "downloadLocalBackupUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "backupId",
            "in": "path",
            "description": "The backupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "File Not Found"
          }
        }
      }
    },
    "/backup-restore/v1/backup/local/{backupId}": {
      "delete": {
        "tags": [
          "BackupRestore"
        ],
        "summary": "Delete local backup",
        "description": "Delete local backup (XOS only)",
        "operationId": "deleteLocalBackupUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "backupId",
            "in": "path",
            "description": "The backupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.backuprestore.DeleteStatus"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/backup-restore/v1/backup/start": {
      "post": {
        "tags": [
          "BackupRestore"
        ],
        "summary": "Start manual backup",
        "description": "Start manual backup",
        "operationId": "runManualBackupUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.backuprestore.rest.BackupInfo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/backup-restore/v1/backup_schedule/start": {
      "post": {
        "tags": [
          "BackupRestore"
        ],
        "summary": "Start scheduled backup",
        "description": "Start scheduled backup",
        "operationId": "startScheduledBackupUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "Schedule backup parameter",
            "required": false,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.backuprestore.rest.StartScheduledBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.backuprestore.rest.ScheduledBackupStatus"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/bxf-control-adaptor/v1/asrun": {
      "get": {
        "tags": [
          "BxfControlAdaptor"
        ],
        "summary": "Get AsRun list",
        "description": "Gets list of AsRun files",
        "operationId": "getAsRunListUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/bxf-control-adaptor/v1/asrun/{asrun_file}": {
      "get": {
        "tags": [
          "BxfControlAdaptor"
        ],
        "summary": "Download existing AsRun file",
        "description": "Download existing AsRun file from AsRun folder",
        "operationId": "getAsRunUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "asrun_file",
            "in": "path",
            "description": "BXF file name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "AsRun File"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/bxf-control-adaptor/v1/opc/{playlist_file}": {
      "post": {
        "tags": [
          "BxfControlAdaptor"
        ],
        "summary": "Upload OPC Schedule",
        "description": "Uploads OPC schedule",
        "operationId": "uploadOpcAndSendEventsUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "playlist_file",
            "in": "path",
            "description": "Playlist file name",
            "required": true,
            "type": "string"
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "Channel id",
            "required": false,
            "type": "string"
          },
          {
            "name": "schedule",
            "in": "formData",
            "description": "OPC schedule",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OPC schedule uploaded",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request or all events are past"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/client-apps/v1/apps": {
      "get": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Get client apps",
        "description": "Get client apps in the system.",
        "operationId": "getClientsUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Register client app",
        "description": "Register new client app to the system.",
        "operationId": "addClientUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clientDetailsConfig",
            "description": "clientDetailsConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse"
            }
          },
          "201": {
            "description": "Client app registered",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse"
            }
          },
          "400": {
            "description": "Client app registration Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/client-apps/v1/apps/client-app-checker/config": {
      "get": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Get the configuration of disused client app checking process",
        "description": "Get the configuration of disused client app checking process",
        "operationId": "getClientCheckerConfigUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientAppCheckerConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Update the configuration of disused client app checking process",
        "description": "Update the configuration of disused client app checking process",
        "operationId": "updateClientCheckerConfigUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "config",
            "description": "config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientAppCheckerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/client-apps/v1/apps/{clientId}": {
      "get": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Get client app",
        "description": "Get client app in the system.",
        "operationId": "getClientUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Unique identifier of a client app",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse"
            }
          },
          "400": {
            "description": "client_id can't be empty"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Client app Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Update client app",
        "description": "Update client app",
        "operationId": "updateClientUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Unique identifier of a client app",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "clientDetailsConfig",
            "description": "clientDetailsConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse"
            }
          },
          "201": {
            "description": "Client app updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse"
            }
          },
          "400": {
            "description": "Client app failed to update"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Remove client app",
        "description": "Remove client app",
        "operationId": "removeClientUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Unique identifier of a client app",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Client app Not Found"
          }
        }
      }
    },
    "/client-apps/v1/apps/{clientId}/update_secret": {
      "post": {
        "tags": [
          "Client Apps"
        ],
        "summary": "Reset client app secret",
        "description": "Reset client app secret.",
        "operationId": "updateClientSecretUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Unique identifier of a client app",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Client app secret updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Client app secret resetting failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/AHDR_SL_HDR1_CONFIG": {
      "get": {
        "tags": [
          "Configure AHDR SL-HDR1 Metadata"
        ],
        "summary": "Get AHDR SL-HDR1 CONFIG file records",
        "description": "List all AHDR SL-HDR1 CONFIG file records in the system.",
        "operationId": "getAhdrSlHdr1ConfigUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query value undergoes substring matching of image URLs or labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure AHDR SL-HDR1 Metadata"
        ],
        "summary": "Create AHDR SL-HDR1 CONFIG file records",
        "description": "Establish new AHDR SL-HDR1 CONFIG file record to the system.",
        "operationId": "addAhdrSlHdr1ConfigUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "AHDR_SL_HDR1_CONFIG file configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "AHDR SL-HDR1 CONFIG File Record Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "400": {
            "description": "Failed to create AHDR SL-HDR1 CONFIG file record"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find AHDR SL-HDR1 CONFIG record"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/AHDR_SL_HDR1_CONFIG/{id}": {
      "get": {
        "tags": [
          "Configure AHDR SL-HDR1 Metadata"
        ],
        "summary": "Get AHDR SL-HDR1 configuration",
        "description": "Get AHDR SL-HDR1 configuration.",
        "operationId": "getAhdrSlHdr1ConfigFileUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure AHDR SL-HDR1 Metadata"
        ],
        "summary": "Delete AHDR SL-HDR1 CONFIG file record",
        "description": "Delete AHDR SL-HDR1 CONFIG file record and AHDR_SL_HDR1_CONFIG file by specifying its ID.",
        "operationId": "deleteAhdrSlHdr1ConfigUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "AHDR SL-HDR1 CONFIG Deleted"
          },
          "400": {
            "description": "AHDR SL-HDR1 CONFIG Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find AHDR SL-HDR1 CONFIG record"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "AHDR SL-HDR1 CONFIG Not Found"
          }
        }
      }
    },
    "/configure/v1/DOLBY_VISION_CONFIG": {
      "get": {
        "tags": [
          "Configure Dolby Vision"
        ],
        "summary": "Get Dolby-Vision file records",
        "description": "List all Dolby-Vision file records in the system.",
        "operationId": "getDolbyVisionFileRecordUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query value undergoes substring matching of image URLs or labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Dolby Vision"
        ],
        "summary": "Create Dolby-Vision file records",
        "description": "Establish new Dolby-Vision file record to the system.",
        "operationId": "addDolbyVisionFileUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "Dolby-Vision file configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "Dolby-Vision File Record Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "400": {
            "description": "Failed to create Dolby-Vision file record"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find Dolby-Vision record"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/DOLBY_VISION_CONFIG/{id}": {
      "get": {
        "tags": [
          "Configure Dolby Vision"
        ],
        "summary": "Get Dolby-Vision file",
        "description": "Get Dolby-Vision file.",
        "operationId": "getDolbyVisionFileUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "File not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Dolby Vision"
        ],
        "summary": "Delete Dolby-Vision file record",
        "description": "Delete Dolby-Vision file record by specifying its ID.",
        "operationId": "deleteDolbyVisionFileUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Dolby-Vision file record Deleted"
          },
          "400": {
            "description": "Dolby-Vision file record Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find Dolby-Vision file record"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Dolby-Vision file record Not Found"
          }
        }
      }
    },
    "/configure/v1/LUT": {
      "get": {
        "tags": [
          "Configure LUT"
        ],
        "summary": "Get LUT file records",
        "description": "List all LUT file records in the system.",
        "operationId": "getLutUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query value undergoes substring matching of image URLs or labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure LUT"
        ],
        "summary": "Create LUT file records",
        "description": "Establish new LUT file record to the system.",
        "operationId": "addLutUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "LUT file configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "LUT File Record Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "400": {
            "description": "Failed to create LUT file record"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find LUT record"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/LUT/{id}": {
      "delete": {
        "tags": [
          "Configure LUT"
        ],
        "summary": "Delete LUT file record",
        "description": "Delete LUT file record and LUT file by specifying its ID.",
        "operationId": "deleteLutUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "LUT Deleted"
          },
          "400": {
            "description": "LUT Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find LUT record"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "LUT Not Found"
          }
        }
      }
    },
    "/configure/v1/descrambling-keys": {
      "get": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Get Descrambling Keys",
        "description": "Get the list of defined descrambling keys (critical fields are hidden)",
        "operationId": "getDescramblingKeysUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeys"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Create Descrambling Keys",
        "description": "Create a new set of descrambling keys",
        "operationId": "createDescramblingKeysUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeys"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeys"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/configure/v1/descrambling-keys/{id}": {
      "put": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Update Descrambling Keys",
        "description": "Update an existing set of descrambling keys",
        "operationId": "updateDescramblingKeysUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeys"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeys"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Bad request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Delete Descrambling Keys",
        "description": "Delete an existing set of descrambling keys",
        "operationId": "deleteDescramblingKeysUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/destinations": {
      "get": {
        "tags": [
          "Configure Destination"
        ],
        "summary": "Get destinations",
        "description": "List destinations in the system. Destination is configuration resource for a collection of outputs with ranking.",
        "operationId": "getDestinationsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "Filter by label",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Top first M records",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inUse",
            "in": "query",
            "description": "Filter by inUse flag",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Destination"
        ],
        "summary": "Create destination",
        "description": "Create new destination to the system.",
        "operationId": "addDestinationUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "destination",
            "description": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
            }
          },
          "201": {
            "description": "Destination Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
            }
          },
          "400": {
            "description": "Destination Not Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/destinations/{id}": {
      "get": {
        "tags": [
          "Configure Destination"
        ],
        "summary": "Get destination",
        "description": "Get destination by {id}.",
        "operationId": "getDestinationUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Destination not found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Destination"
        ],
        "summary": "Update destination",
        "description": "Update destination by {id}.",
        "operationId": "updateDestinationForNoPermissionUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "destination",
            "description": "destination",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a destination",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Destination updated failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Destination not found"
          },
          "409": {
            "description": "Destination configuration conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Destination"
        ],
        "summary": "Delete destination",
        "description": "Delete destination by {id}.",
        "operationId": "deleteDestinationUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a destination",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination Deleted"
          },
          "400": {
            "description": "Destination Not Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/destinations/{id}/poolBinding": {
      "put": {
        "tags": [
          "Configure Destination"
        ],
        "summary": "Update destination pool ID",
        "description": "Update pool destination by {id}.",
        "operationId": "updateDestinationPoolBindingUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "poolBinding",
            "description": "newPool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.PoolBinding"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a destination",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Destination Pool Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.PoolBinding"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Destination updated failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Destination not found"
          },
          "409": {
            "description": "Destination configuration conflict"
          }
        }
      }
    },
    "/configure/v1/fonts": {
      "get": {
        "tags": [
          "Configure Font"
        ],
        "summary": "Get font file records",
        "description": "List all font file records in the system.",
        "operationId": "getFontsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query value undergoes substring matching of image URLs or labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Font"
        ],
        "summary": "Create font file records",
        "description": "Establish new font file record to the system.",
        "operationId": "addFontUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "Font file configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "Font File Record Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "400": {
            "description": "Failed to create font file record"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find default font record"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/fonts/{id}": {
      "delete": {
        "tags": [
          "Configure Font"
        ],
        "summary": "Delete font file record",
        "description": "Delete font file record and font file by specifying its ID.",
        "operationId": "deleteFontUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Font Deleted"
          },
          "400": {
            "description": "Font Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Can't find default font record"
          },
          "412": {
            "description": "Font is used by active service(s)"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Font Not Found"
          }
        }
      }
    },
    "/configure/v1/fonts/{id}/services": {
      "get": {
        "tags": [
          "Configure Font"
        ],
        "summary": "Get list of service(s) where font is used",
        "description": "Get the service that used the specified font ID",
        "operationId": "getLinkedServicesUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the font",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Font found in service(s)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Font does not exist."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/fullService": {
      "post": {
        "tags": [
          "Configure FullService"
        ],
        "summary": "Create fullService",
        "description": "Create new fullService to the system.",
        "operationId": "addFullServiceForXosIrdUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fullService",
            "description": "fullService",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
            }
          },
          "201": {
            "description": "FullService Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
            }
          },
          "400": {
            "description": "FullService Not Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure FullService"
        ],
        "summary": "Delete fullService",
        "description": "Delete FullService and associated sources and destination following pattern: {serviceId, [List of sourcesIds], [List of destinationsIds]}.",
        "operationId": "deleteFullServiceForXosIrdUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fullServiceIds",
            "description": "fullServiceIds",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullServiceIds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FullService Deleted"
          },
          "400": {
            "description": "FullService Not Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/configure/v1/fullService/{id}": {
      "get": {
        "tags": [
          "Configure FullService"
        ],
        "summary": "Get fullService",
        "description": "Get fullService by {id}.",
        "operationId": "getFullServiceUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure FullService"
        ],
        "summary": "Update fullService",
        "description": "Update fullService by {id}.",
        "operationId": "updateFullServiceUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "fullService",
            "description": "fullService",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a FullService",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourcesToDelete",
            "in": "query",
            "description": "sourcesToDelete",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "destinationsToDelete",
            "in": "query",
            "description": "destinationsToDelete",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "FullService Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "FullService Not Updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "FullService Not Updated"
          },
          "409": {
            "description": "FullService configuration conflict"
          }
        }
      }
    },
    "/configure/v1/fullServices": {
      "get": {
        "tags": [
          "Configure FullService"
        ],
        "summary": "Get fullServices",
        "description": "Get all fullService services",
        "operationId": "getFullServicesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "query",
            "description": "Query value undergoes substring matching of service name",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceId",
            "in": "query",
            "description": "Get the services using the sourceId",
            "required": false,
            "type": "string"
          },
          {
            "name": "destinationId",
            "in": "query",
            "description": "Get the services using the destinationId",
            "required": false,
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "Get the services using the profileId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.fullService.FullService"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/graphics-templates": {
      "get": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Get graphics templates",
        "description": "List all graphics templates in the system.",
        "operationId": "getImagesUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query value undergoes substring matching of graphics template URLs or labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Create graphics template",
        "description": "Create new graphics template to the system.",
        "operationId": "addImageUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "Image configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "Graphics template created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "400": {
            "description": "Failed to create graphics template"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/graphics-templates/{id}": {
      "get": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Get graphics template by ID",
        "description": "Get graphics template by specifying an graphics template ID",
        "operationId": "getImageUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a graphics template",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Update graphics template",
        "description": "Update graphics template by specifying an graphics template ID.",
        "operationId": "updateImageUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "Image configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an graphics template",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Graphics template Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Graphics template Update Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Delete graphics template",
        "description": "Delete graphics template by specifying an graphics template ID.",
        "operationId": "deleteImageUsingDELETE_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an graphics template",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Graphics template Deleted"
          },
          "400": {
            "description": "Graphics template Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Graphics template is used by active services."
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/graphics-templates/{id}/services": {
      "get": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Get list of services where graphics template is used",
        "description": "Get services with special graphics template by specifying an graphics template ID.",
        "operationId": "getLinkedServicesUsingGET_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an graphics template",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Graphics template Deleted",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Graphics template does not exist."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/imageSync/config": {
      "get": {
        "tags": [
          "Configure ImageSync"
        ],
        "summary": "Get config of image sync",
        "description": "Get config of image(logo,graphics) sync",
        "operationId": "getConfigUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.image.sync.ImageFileSyncConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure ImageSync"
        ],
        "summary": "Set config of image sync",
        "description": "Set config of image(logo,graphics) sync",
        "operationId": "setConfigUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "config",
            "description": "config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.image.sync.ImageFileSyncConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/images": {
      "get": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Get images",
        "description": "List all images in the system.",
        "operationId": "getImagesUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query value undergoes substring matching of image URLs or labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Create image",
        "description": "Create new image to the system.",
        "operationId": "addImageUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "Image configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "Image Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "400": {
            "description": "Failed to create image"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/images/{id}": {
      "get": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Get image by ID",
        "description": "Get image by specifying an image ID",
        "operationId": "getImageUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Update image",
        "description": "Update image by specifying an image ID.",
        "operationId": "updateImageUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "image",
            "description": "Image configuration",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Image Update Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Delete image",
        "description": "Delete image by specifying an image ID.",
        "operationId": "deleteImageUsingDELETE_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image Deleted"
          },
          "400": {
            "description": "Image Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Image is used by active services."
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/images/{id}/services": {
      "get": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Get list of services where image is used",
        "description": "Get services with special image by specifying an image ID.",
        "operationId": "getLinkedServicesUsingGET_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image Deleted",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Image does not exist."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/images/{id}/sources": {
      "get": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Get list sources where image is used",
        "description": "Get sources with special image by specifying an image ID.",
        "operationId": "getLinkedSourcesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of an image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Image Deleted",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Image does not exist."
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/key-pairs": {
      "get": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Get list of key pairs",
        "description": "Get the list of defined key pairs",
        "operationId": "getBissCaRsaKeysUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeyPair"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Store a private key",
        "description": "Store private key from a file. Only 2048 byte long RSA private key in PEM format is supported. The key length shall be not encrypted.",
        "operationId": "storeBissCaRsaKeyUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.DescramblingKeyPair"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/key-pairs/{id}": {
      "get": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Download a public Key",
        "description": "Download a public key by its id",
        "operationId": "downloadBissCaRsaKeyUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Descrambling Keys"
        ],
        "summary": "Delete a stored key pair",
        "description": "Delete a stored key pair by its id",
        "operationId": "deleteBissCaRsaKeyUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/lsms": {
      "get": {
        "tags": [
          "Configure LSM"
        ],
        "summary": "Get LSMs",
        "description": "List LSM endpoint in the system.",
        "operationId": "getLSMsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "Filter by label",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Top first M records",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure LSM"
        ],
        "summary": "Create LSM endpoint",
        "description": "Create new LSM endpoint to the system.",
        "operationId": "addLSMUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lsm",
            "description": "lsm",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
            }
          },
          "201": {
            "description": "LSM Endpoint Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
            }
          },
          "400": {
            "description": "LSM Endpoint Not Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/lsms/{id}": {
      "get": {
        "tags": [
          "Configure LSM"
        ],
        "summary": "Get LSM endpoint",
        "description": "Get LSM endpoint by {id}.",
        "operationId": "getLSMUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "LSM endpoint not found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure LSM"
        ],
        "summary": " Update LSM endpoint",
        "description": "Update LSM endpoint by {id}.",
        "operationId": "updateLSMUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lsm",
            "description": "lsm",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a LSM endpoint",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "LSM endpoint Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.lsm.LSM"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "LSM endpoint updated failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "LSM endpoint not found"
          },
          "409": {
            "description": "LSM endpoint configuration conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure LSM"
        ],
        "summary": "Delete LSM endpoint",
        "description": "Delete LSM endpoint by {id}.",
        "operationId": "deleteLSMUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a LSM endpoint",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "LSM Endpoint Deleted"
          },
          "400": {
            "description": "LSM Endpoint Not Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/pools": {
      "get": {
        "tags": [
          "Configure Pool"
        ],
        "summary": "Get pools",
        "description": "List divitrack pools in the system.",
        "operationId": "getPoolsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "Filter by label",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Top first M records",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Pool"
        ],
        "summary": "Create divitrack pool",
        "description": "Create new divitrack pool to the system.",
        "operationId": "addPoolUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pool",
            "description": "pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
            }
          },
          "201": {
            "description": "Pool Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
            }
          },
          "400": {
            "description": "Pool Not Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/pools/{id}": {
      "get": {
        "tags": [
          "Configure Pool"
        ],
        "summary": "Get divitrack pool",
        "description": "Get divitrack pool by {id}.",
        "operationId": "getPoolUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Divitrack pool not found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Pool"
        ],
        "summary": "Update divitrack pool",
        "description": "Update divitrack pool by {id}.",
        "operationId": "updatePoolUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pool",
            "description": "pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a divitrack pool",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Divitrack pool Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Divitrack pool updated failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Divitrack pool not found"
          },
          "409": {
            "description": "Divitrack pool configuration conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Pool"
        ],
        "summary": "Delete divitrack pool",
        "description": "Delete divitrack pool by {id}.",
        "operationId": "deletePoolUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a divitrack pool",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Divitrack Pool Deleted"
          },
          "400": {
            "description": "Divitrack Pool Not Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/saved_graphics_templates/{id}/templates.swf": {
      "get": {
        "tags": [
          "Configure Graphics Template"
        ],
        "summary": "Get saved graphics templates",
        "description": "Get saved graphics templates with {id}.",
        "operationId": "getSavedImageUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/configure/v1/saved_images/{id}": {
      "get": {
        "tags": [
          "Configure Image"
        ],
        "summary": "Get saved image",
        "description": "Get saved image with {id}.",
        "operationId": "getSavedImageUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/configure/v1/services": {
      "get": {
        "tags": [
          "Configure Service"
        ],
        "summary": "Get services",
        "description": "Get services in the system.",
        "operationId": "getServicesUsingGET_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "query",
            "description": "Query value undergoes substring matching of service name",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceId",
            "in": "query",
            "description": "Get the services using the sourceId",
            "required": false,
            "type": "string"
          },
          {
            "name": "destinationId",
            "in": "query",
            "description": "Get the services using the destinationId",
            "required": false,
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "Get the services using the profileId",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Service"
        ],
        "summary": "Create service",
        "description": "Create new service to the system.",
        "operationId": "addServiceUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
            }
          },
          {
            "name": "rollingUpgrade",
            "in": "query",
            "description": "rollingUpgrade",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
            }
          },
          "201": {
            "description": "Service Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
            }
          },
          "400": {
            "description": "Service Creation Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/services/2110-out/{id}.sdp": {
      "get": {
        "tags": [
          "Configure Service"
        ],
        "summary": "Get service sdp",
        "description": "Get service sdp file for st2110 output.",
        "operationId": "getServiceSdpUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service sdp file not found"
          }
        }
      }
    },
    "/configure/v1/services/{id}": {
      "get": {
        "tags": [
          "Configure Service"
        ],
        "summary": "Get service",
        "description": "Get service.",
        "operationId": "getServiceUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Service"
        ],
        "summary": "Update service",
        "description": "Update service with {id}.",
        "operationId": "updateServiceWithNoPermissionsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "service",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          },
          {
            "name": "upgradeToLatestEngine",
            "in": "query",
            "description": "upgradeToLatestEngine",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "targetEngine",
            "in": "query",
            "description": "targetEngine",
            "required": false,
            "type": "string"
          },
          {
            "name": "rollingUpgrade",
            "in": "query",
            "description": "rollingUpgrade",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "forceUpgrade",
            "in": "query",
            "description": "forceUpgrade",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Service update failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          },
          "409": {
            "description": "Service configuration conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Service"
        ],
        "summary": "Delete service",
        "description": "Delete service with {id}.",
        "operationId": "deleteServiceUsingDELETE_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Deleted"
          },
          "400": {
            "description": "Service Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/configure/v1/settings/general": {
      "get": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Get app general setting",
        "description": "Get app general setting.",
        "operationId": "getGeneralSettingsUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Set app general setting",
        "description": "Set app general setting.",
        "operationId": "updateGeneralSettingsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "setting",
            "description": "setting",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Setting Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Setting Update Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/settings/irdeto": {
      "get": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Get Irdeto license configuration.",
        "description": "Get Irdeto license configuration.",
        "operationId": "getIrdetoLicenseFileUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.IrdetoLicense"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "License not found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Register new Irdeto license configuration.",
        "description": "Register new Irdeto license configuration.",
        "operationId": "addIrdetoLicenseUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "license",
            "description": "license",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.IrdetoLicense"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Irdeto license registered",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.IrdetoLicense"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Irdeto license registration failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Delete Irdeto license configuration.",
        "description": "Delete Irdeto license configuration.",
        "operationId": "deleteIrdetoLicenseUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Irdeto license configuration Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Irdeto license configuration Not Found"
          }
        }
      }
    },
    "/configure/v1/settings/kantarSnap": {
      "get": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Get registered Kantar SNAP Watermarking licenses",
        "description": "Get registered Kantar SNAP Watermarking licenses",
        "operationId": "getKantarSnapLicensesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.KantarSnapWatermarkLicenseFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Register new Kantar SNAP Watermarking license",
        "description": "Register new Kantar SNAP Watermarking license",
        "operationId": "addKantarSnapLicenseUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "license",
            "description": "license",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.KantarSnapWatermarkLicenseFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "License registered",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.KantarSnapWatermarkLicenseFile"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "License registration failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/settings/kantarSnap/{id}": {
      "delete": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Delete registered Kantar SNAP Watermarking license",
        "description": "Delete registered Kantar SNAP Watermarking license",
        "operationId": "deleteKantarSnapLicenseUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "License identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "License deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "License not found"
          }
        }
      }
    },
    "/configure/v1/settings/service": {
      "get": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Get service global setting",
        "description": "Get service global setting.",
        "operationId": "getServiceSettingsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalServiceSetting"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Settings"
        ],
        "summary": "Set service global setting",
        "description": "Set service global setting.",
        "operationId": "updateServiceSettingsForXosIrdUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "globalServiceSetting",
            "description": "globalServiceSetting",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalServiceSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Setting Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalServiceSetting"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Setting Update Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/sources": {
      "get": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Get sources",
        "description": "Get sources in the system.",
        "operationId": "getSourcesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by name",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "Filter by label",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Top first M records",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Create source",
        "description": "Create new source to the system.",
        "operationId": "addSourceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "source",
            "description": "source",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          "201": {
            "description": "Source Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          "400": {
            "description": "Source Not Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/sources/{id}": {
      "get": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Get source",
        "description": "Get source by {id}.",
        "operationId": "getSourceUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Source Not Updated"
          }
        }
      },
      "put": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Update source",
        "description": "Update source by {id}.",
        "operationId": "updateSourceUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "source",
            "description": "source",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a source",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Source Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Source Not Updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Source Not Updated"
          },
          "409": {
            "description": "Source configuration conflict"
          }
        }
      },
      "delete": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Delete source",
        "description": "Delete source by {id}.",
        "operationId": "deleteSourceUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a source",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Source Deleted"
          },
          "400": {
            "description": "Source Not Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/configure/v1/sources_ext/{id}": {
      "put": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Update source",
        "description": "Update source by {id}.",
        "operationId": "updateSourceUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "source",
            "description": "source",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a source",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerServiceUpdate",
            "in": "query",
            "description": "Need to trigger service update",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Source Updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Source Not Updated"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Source Not Updated"
          },
          "409": {
            "description": "Source configuration conflict"
          }
        }
      }
    },
    "/configure/v1/validate_all_metadata": {
      "post": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Check all meta data",
        "description": "Check if missing meta data in source.",
        "operationId": "validateAllMetaDataUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inputGrooming",
            "description": "inputGrooming",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Missing grooming info"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/validate_audio_metadata": {
      "post": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Check audio meta data",
        "description": "Check if missing audio meta data in source.",
        "operationId": "validateAudioMetaDataUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "audioGrooming",
            "description": "audioGrooming",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.AudioGrooming"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Missing grooming info"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/configure/v1/validate_data_metadata": {
      "post": {
        "tags": [
          "Configure Source"
        ],
        "summary": "Check data meta data",
        "description": "Check if missing data meta data in source.",
        "operationId": "validateDataMetaDataUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dataGrooming",
            "description": "dataGrooming",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DataGrooming"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Missing grooming info"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/esam-pois/v1/esamGoConfig": {
      "get": {
        "tags": [
          "ESAM POIS App"
        ],
        "summary": "Get esam go config",
        "description": "Get esam go config",
        "operationId": "getEsamGoConfigUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Server has been started already"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "ESAM POIS App"
        ],
        "summary": "update esam go config",
        "description": "update esam go config",
        "operationId": "updateEsamGoConfigUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "config",
            "description": "config",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.esam.pois.config.EsamConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Server has been started already"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/external-asset-potf/v1/settings": {
      "get": {
        "tags": [
          "External Asset Storage"
        ],
        "summary": "Get settings",
        "description": "Get settings",
        "operationId": "getSettingsUsingGET_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.externalassetpotf.model.rest.settings.ExternalAssetPotfSettings"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "External Asset Storage"
        ],
        "summary": "Update settings",
        "description": "Update settings",
        "operationId": "setSettingsUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "settings",
            "description": "Settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.externalassetpotf.model.rest.settings.ExternalAssetPotfSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/live-ingest-origin/v1/settings": {
      "get": {
        "tags": [
          "LiveIngestOrigin"
        ],
        "summary": "Get live ingest origin settings",
        "description": "Get live ingest origin settings",
        "operationId": "getSettingsUsingGET_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.liveingestorigin.settings.LiveIngestOriginSetting"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "LiveIngestOrigin"
        ],
        "summary": "Update live ingest origin settings",
        "description": "Update live ingest origin settings",
        "operationId": "updateSettingsUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "setting",
            "description": "setting",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.liveingestorigin.settings.LiveIngestOriginSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/logs/v1/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get logs",
        "description": "List logs in the system.",
        "operationId": "getLogsUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "severity",
            "in": "query",
            "description": "Filter by severity",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "CRITICAL",
              "WARNING",
              "IMPORTANT"
            ]
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by Lucene query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Filter by start time; Up to the earliest logs if not specified",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "Filter by end time; Up to the the latest logs if not specified",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "result_after",
            "in": "query",
            "description": "Return logs sorted behind a specific log ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "result_count",
            "in": "query",
            "description": "Number of logs to be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Format that logs are represented in",
            "required": false,
            "type": "string",
            "enum": [
              "JSON",
              "PLAIN",
              "XML"
            ]
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Set to true to show extra fields",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/logs/v1/logs/download": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Download logs",
        "description": "Download logs as archive file.",
        "operationId": "downloadLogsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "Index Pattern",
            "in": "query",
            "description": "Filter by index",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileNameSuffix",
            "in": "query",
            "description": "File Name Suffix",
            "required": false,
            "type": "string"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Filter by severity",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "CRITICAL",
              "WARNING",
              "IMPORTANT"
            ]
          },
          {
            "name": "search",
            "in": "query",
            "description": "Filter by Lucene query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "Filter by start time; Up to the earliest logs if not specified",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "Filter by end time; Up to the the latest logs if not specified",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Format that logs are represented in",
            "required": false,
            "type": "string",
            "enum": [
              "JSON",
              "PLAIN",
              "XML"
            ]
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Set to true to show extra fields",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/v1/activeActiveServiceRole/{id}": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get Active-Active service role",
        "description": "Get Active-Active service role.",
        "operationId": "getActiveActiveServiceRoleUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ServiceRole"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/v1/live-events/{id}": {
      "put": {
        "tags": [
          "Monitor Event"
        ],
        "summary": "Update a live Event",
        "description": "update a live Event",
        "operationId": "updateLiveEventUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateRequest",
            "description": "updateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.liveevent.model.LiveEventUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.liveevent.model.LiveEventResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/v1/live-events/{id}/end": {
      "put": {
        "tags": [
          "Monitor Event"
        ],
        "summary": "End live event with service id",
        "description": "Action to end the live event with service id",
        "operationId": "endUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "End live event successful"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to end live event"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No live event with specified service Id"
          }
        }
      }
    },
    "/monitor/v1/live-events/{id}/live": {
      "put": {
        "tags": [
          "Monitor Event"
        ],
        "summary": "Go live event with service id",
        "description": "Action to goLive the live event with service id",
        "operationId": "goLiveUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Go live event successful"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to go live event"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No live event with specified service Id"
          }
        }
      }
    },
    "/monitor/v1/live-events/{id}/offline": {
      "put": {
        "tags": [
          "Monitor Event"
        ],
        "summary": "Offline live event with service id",
        "description": "Action to offline the live event with service id",
        "operationId": "offlineUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Offline live event successful"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to offline live event"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No live event with specified service Id"
          }
        }
      }
    },
    "/monitor/v1/live-events/{id}/online": {
      "put": {
        "tags": [
          "Monitor Event"
        ],
        "summary": "Preview live event with service id",
        "description": "Action to preview the live event with service id",
        "operationId": "previewUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Service id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Preview live event successful"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to preview live event"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No live event with specified service Id"
          }
        }
      }
    },
    "/monitor/v1/services": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get activated services",
        "description": "Get activated services in the system.",
        "operationId": "getInstancesUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ServiceName",
            "in": "query",
            "description": "Query value undergoes substring matching of instance name",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Skip N records to be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "First M records to be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "skipStats",
            "in": "query",
            "description": "Skip statistics",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.Service"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/v1/services-status": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get activated services status",
        "description": "Get services status in the system.",
        "operationId": "getInstancesStatusUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "label",
            "in": "query",
            "description": "Return services-status with specific label",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ServiceStatus"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/v1/services-status/{id}": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get activated service's status by service Id",
        "description": "Get service status in the system by service Id.",
        "operationId": "getServiceStatusUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ServiceStatus"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/scte-104": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get current SCTE-104 client connections",
        "description": "Get current SCTE-104 client connections",
        "operationId": "getScte104ConnectionsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.Scte104ConnectionStatus"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get activated service",
        "description": "Get activated service.",
        "operationId": "getServiceUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.Service"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/graphics": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get graphics status",
        "description": "Get graphics status of service {id}.",
        "operationId": "getGraphicsStateUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.GraphicsState"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Turn ON/OFF graphics",
        "description": "Turn ON/OFF graphics with {id}.",
        "operationId": "switchGraphicsUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "graphicsRequestConfig",
            "description": "graphicsRequestConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.GraphicsRequestConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.GraphicsRequestConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/logo": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get logo status",
        "description": "Get logo status of service {id}.",
        "operationId": "getLogoStateUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogoState"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Turn ON/OFF logo",
        "description": "Turn ON/OFF logo with {id}.",
        "operationId": "switchLogoUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "logoRequestConfig",
            "description": "logoRequestConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogoRequestConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogoRequestConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/muteOutput": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get mute/unmute service output state",
        "description": "Get mute/unmute service {id} output state",
        "operationId": "isMuteOutputUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "mute/unmute service output",
        "description": "mute/unmute service {id} output.",
        "operationId": "muteOutputUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "isMute",
            "in": "query",
            "description": "Mute service output",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/redundancy_group": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get redundancy group status",
        "description": "Get redundancy group with {id}.",
        "operationId": "getRedundancyGroupStateUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "Instance ID",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.RedundancyGroupState"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Join/Quite redundancy group",
        "description": "Join/Quit redundancy group with {id}.",
        "operationId": "switchRedundancyGroupUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "redundanyGroupRequestConfig",
            "description": "redundanyGroupRequestConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.RedundanyGroupRequestConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.RedundanyGroupRequestConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/remove_retained_program_chapter_start": {
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Remove retained program/chapter start from manifest for HLS DATERANGE",
        "description": "Remove retained program/chapter start from manifest for HLS DATERANG.",
        "operationId": "removeRetainedProgramChapterStartUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "removeRetainedProgramChapterStartState",
            "description": "removeRetainedProgramChapterStartState",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.RemoveRetainedProgramChapterStartState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Illegal parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/resetStatistics": {
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "reset the input status statistics",
        "description": "reset the input status statistics including the FEC 2022-1 counters of service $id",
        "operationId": "postResetStatisticsUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/slate": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get slate status",
        "description": "Get slate status with {id}.",
        "operationId": "getSlateUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "slateType",
            "in": "query",
            "description": "Slate Type (ManualSlate)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SlateStatus"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Turn ON/OFF slate",
        "description": "Turn ON/OFF slate with {id}.",
        "operationId": "switchSlateUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "slateRequestConfig",
            "description": "slateRequestConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SlateRequestConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SlateStatus"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/switch_active_instance": {
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Switching the active instance of activated service",
        "description": "Switching the active instance of activated service.",
        "operationId": "switchActiveInstanceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/thumbnail": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get thumbnail",
        "description": "Get thumbnail with {id}.",
        "operationId": "getThumbnailUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/toggle_drm": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get DRM control status",
        "description": "Get DRM control status of service {id}.",
        "operationId": "getToggleDrmStateUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ToggleDrmState"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Force unencrypted / Default following existing DRM settings",
        "description": "Force unencrypted / Default following existing DRM settings.",
        "operationId": "toggleDrmUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "toggleDrmState",
            "description": "toggleDrmState",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ToggleDrmState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Illegal parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/monitor/v1/services/{id}/unmuteOutputStartEndTime": {
      "get": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Get unmute service output start and end time",
        "description": "Set unmute service {id} output start and end time.",
        "operationId": "getUnmuteOutputStartEndTimeUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.spi.operation.ServiceOutputUnmuteStartEndTime"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Service"
        ],
        "summary": "Set unmute service output start time",
        "description": "Set unmute service {id} output start time.",
        "operationId": "setUnmuteOutputStartEndTimeUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "serviceOutputUnmuteStartEndTime",
            "description": "serviceOutputUnmuteStartEndTime",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.spi.operation.ServiceOutputUnmuteStartEndTime"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorized"
          },
          "501": {
            "description": "Not supported"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/mux/v1/create-full-service": {
      "post": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Create a full transcoding service and add it to the mux with associated program parameters",
        "description": "Create a full transcoding service including sources and destination and add the service to the mux with associated program parameters. The destination pool shall match with an existing mux",
        "operationId": "createFullServiceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "serviceWithParameters",
            "description": "serviceWithParameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxFullService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxFullService"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized operation"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mux/v1/monitor/sdi-ports": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get monitoring for all SDI ports",
        "operationId": "getMonitorSdiPortsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.sdi.MonitorSdiPort"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mux/v1/monitor/ts-inputs": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get monitoring for all ts inputs connected to a mux/demux",
        "operationId": "getMonitorInputMuxDemuxUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputTS"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mux/v1/monitor/{muxServiceId}/blackout": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get blackout state for all output programs of a specific MPTS (muxServiceId)",
        "operationId": "getProgramBlackoutStateListUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.blackout.BlackoutOutputProgramState"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Mux service not found"
          }
        }
      },
      "post": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Enable blackout for some output programs of a specific MPTS (muxServiceId)",
        "operationId": "setProgramBlackoutStateListUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "blackoutOutputProgramStateList",
            "description": "blackoutOutputProgramStateList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.blackout.BlackoutOutputProgramState"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Mux service not found"
          }
        }
      }
    },
    "/mux/v1/monitor/{muxServiceId}/eas": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get eas status for all output programs for which eas is enabled (muxServiceId)",
        "operationId": "getProgramEasStatusListUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.eas.EasOutputProgramState"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Mux service not found"
          }
        }
      }
    },
    "/mux/v1/monitor/{muxServiceId}/eas/switch": {
      "post": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Send manual switch command to one or several programs (muxServiceId)",
        "operationId": "switchEasUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "easSwitchRequestCommand",
            "description": "easSwitchRequestCommand",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.eas.EasSwitchRequestCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Mux service not found"
          }
        }
      }
    },
    "/mux/v1/monitor/{muxServiceId}/triveni": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get current triveni tables for a specific MPTS (muxServiceId)",
        "operationId": "getTriveniTableListUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.triveni.TriveniTable"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Mux service not found"
          }
        }
      }
    },
    "/mux/v1/monitor/{muxServiceId}/ts-inputs": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get monitoring for all ts inputs connected to a specific MPTS (muxServiceId)",
        "operationId": "getMonitorInputTSListUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputTS"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mux/v1/monitor/{muxServiceId}/ts-inputs/{inputObjectId}": {
      "get": {
        "tags": [
          "Mux App Monitor"
        ],
        "summary": "Get monitoring for one ts input connected to a specific MPTS (muxServiceId)",
        "operationId": "getMonitorInputTSUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputObjectId",
            "in": "path",
            "description": "inputObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "TS input not found"
          }
        }
      }
    },
    "/mux/v1/networks": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get all network(s) assigned to the platform",
        "operationId": "listNetworksUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Network"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Assign a new network to the platform",
        "operationId": "addNetworkUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Network",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Network"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Network added",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Network"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/mux/v1/networks/{networkId}": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get a network known by its unique identifier",
        "operationId": "getNetworkByIdUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Unique identifier of network to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Network"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Network not found"
          }
        }
      },
      "put": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Update an existing network",
        "operationId": "updateNetworkUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Unique identifier of network to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "network",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Network"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated network",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Network"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Network not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Delete a network",
        "operationId": "deleteNetworkUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "description": "Unique identifier of network to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted network"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Network not found"
          }
        }
      }
    },
    "/mux/v1/services": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get all Mux Service Configurations",
        "description": "with attached pools and destinations",
        "operationId": "getMuxServicesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxService"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Create a complete Mux Service",
        "description": "includes pools and destinations",
        "operationId": "addMuxServiceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "muxService",
            "description": "muxService",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxService"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid configuration"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized operation"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mux/v1/services/{id}": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get Mux Service Configuration",
        "description": "with attached pools and destinations",
        "operationId": "getMuxServiceUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxService"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "put": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Update Mux Service Configuration",
        "description": "with attached pools and destinations",
        "operationId": "updateMuxServiceWithNoPermissionsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pool",
            "description": "muxService",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxService"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.MuxService"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Configuration Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Unauthorized operation"
          },
          "404": {
            "description": "Service not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Delete a complete Mux Service",
        "description": "delete attached unused pools and destinations",
        "operationId": "deleteMuxServiceUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Unauthorized operation"
          },
          "404": {
            "description": "Service not found"
          }
        }
      }
    },
    "/mux/v1/table-generators": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get all table generator(s) assigned to the platform",
        "operationId": "listTableGeneratorsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.TableGenerator"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Assign a new table generator to the platform",
        "operationId": "addTableGeneratorUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "PSIP Generator (Triveni)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.TableGenerator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Table generator added",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.TableGenerator"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/mux/v1/table-generators/{generatorId}": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get a table generator known by its unique identifier",
        "operationId": "getTableGeneratorByIdUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generatorId",
            "in": "path",
            "description": "Unique identifier of table generator to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.TableGenerator"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Table generator not found"
          }
        }
      },
      "put": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Update an existing table generator",
        "operationId": "updateTableGeneratorUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generatorId",
            "in": "path",
            "description": "Unique identifier of table generator to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "PSIP Generator (Triveni)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.TableGenerator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Table generator",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.TableGenerator"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Table generator not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Delete a table generator",
        "operationId": "deleteTableGeneratorUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "generatorId",
            "in": "path",
            "description": "Unique identifier of table generator to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted Table generator"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Table generator not found"
          }
        }
      }
    },
    "/mux/v1/transport-streams": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get list of transport streams",
        "operationId": "getTransportStreamsListUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.mux.model.ts.OutputTS"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mux/v1/transport-streams/{muxServiceId}": {
      "get": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Get transport stream ",
        "operationId": "getTransportStreamUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.ts.OutputTS"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "TS not found"
          }
        }
      },
      "put": {
        "tags": [
          "Mux App Configure"
        ],
        "summary": "Update an existing transport stream ",
        "description": "should refer to a mux-service object",
        "operationId": "updateTsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "muxServiceId",
            "in": "path",
            "description": "muxServiceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updatedTs",
            "description": "updatedTs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.mux.model.ts.OutputTS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "invalid configuration"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "TS not found"
          }
        }
      }
    },
    "/nmsapiadapter/v1/services": {
      "get": {
        "tags": [
          "NMS API Adapter"
        ],
        "summary": "Get services",
        "description": "List all services.",
        "operationId": "getServicesUsingGET_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "description": "serviceId",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceId",
            "in": "query",
            "description": "sourceId",
            "required": false,
            "type": "string"
          },
          {
            "name": "destinationId",
            "in": "query",
            "description": "destinationId",
            "required": false,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Return channels after the first N result",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "top",
            "in": "query",
            "description": "The maximum number of channel to be return in the request",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "NMS API Adapter"
        ],
        "summary": "Create a service",
        "description": "Create a new service.",
        "operationId": "addServiceUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "Service model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
            }
          },
          "201": {
            "description": "Service Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
            }
          },
          "400": {
            "description": "Failed to create a service"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/nmsapiadapter/v1/services/{id}": {
      "get": {
        "tags": [
          "NMS API Adapter"
        ],
        "summary": "Get a service by ID",
        "description": "Get a service by specifying a Id.",
        "operationId": "getServicesUsingGET_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "NMS API Adapter"
        ],
        "summary": "Update a service",
        "description": "Update the service by specifying a service ID.",
        "operationId": "updateServiceUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "service",
            "description": "Service Model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update a service"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "NMS API Adapter"
        ],
        "summary": "Delete a service",
        "description": "Delete a service by specifying a service ID.",
        "operationId": "deleteServiceUsingDELETE_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a service",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service deleted"
          },
          "400": {
            "description": "Failed to detele service"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/notification/v1/notifications": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Query notifications",
        "description": "Query notifications by its properties, results are sorted by notification id (in the same order as the time of notification created ).",
        "operationId": "queryNotificationsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Notification State",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "ACTIVE",
              "RESOLVED",
              "TRANSIENT"
            ]
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Severity values that need to be considered for filter",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "CRITICAL",
              "WARNING",
              "IMPORTANT"
            ]
          },
          {
            "name": "objectType",
            "in": "query",
            "description": "Notification object type",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_scheduled",
            "in": "query",
            "description": "Scheduled fix set",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "title_search",
            "in": "query",
            "description": "Title name",
            "required": false,
            "type": "string"
          },
          {
            "name": "result_after",
            "in": "query",
            "description": "result_after",
            "required": false,
            "type": "string"
          },
          {
            "name": "result_count",
            "in": "query",
            "description": "result_count",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "NotificationQueryMode",
            "in": "query",
            "description": "Notification Query Mode",
            "required": false,
            "type": "string",
            "default": "GET_NON_MASKED",
            "enum": [
              "GET_NON_MASKED",
              "GET_MASKED",
              "GET_ALL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notification/v1/notifications/schedule_fix": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Schedule fix for notifications",
        "description": "Schedule a fix time for all active notification to user. When schedule fix is set, the notification will be hidden from all users' notification feeds, unless it is overdue.",
        "operationId": "scheduleFixAllNotificationUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "scheduleFixParam",
            "description": "The details of the schedule fix",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.notification.rest.model.NotificationScheduleFixParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule fix successfully"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Illegal parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notification Not Found"
          }
        }
      }
    },
    "/notification/v1/notifications/{id}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get notification details",
        "description": "Get detail info of a notification, including suggested solution and additional info.",
        "operationId": "getNotificationUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of notification",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification Found",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notification Not Found"
          }
        }
      }
    },
    "/notification/v1/notifications/{id}/schedule_fix": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Schedule fix for notifications",
        "description": "Schedule a fix time for a notification to user. When schedule fix is set, the notification will be hidden from all users' notification feeds, unless it is overdue.",
        "operationId": "scheduleFixNotificationUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of notification",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "scheduleFixParam",
            "description": "The details of the schedule fix",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.notification.rest.model.NotificationScheduleFixParam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule fix successfully"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Illegal parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notification Not Found"
          }
        }
      }
    },
    "/notification/v1/typeSeverity": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Update notification type severity",
        "description": "Update notification type severity",
        "operationId": "setNotificationTypeSeveritiesUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "notificationTypeSeverityUpdateParams",
            "description": "notificationTypeSeverityUpdateParams",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.notification.rest.model.NotificationTypeSeverityUpdateItem"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification Type Severities Updated"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Notification Type Severities Update Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/channels": {
      "get": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Get info of live/nPVR channels being served",
        "description": "Get info of live/nPVR channels being served",
        "operationId": "getChannelsUsingGET_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/channels/{id}": {
      "get": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Get info of a live/nPVR channel",
        "description": "Get info of a live/nPVR channel",
        "operationId": "getChannelUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The server id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/llcu/assets": {
      "get": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "List all LLCU assets",
        "description": "List all LLCU assets",
        "operationId": "listLlcuAssetsUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "opState",
            "in": "query",
            "description": "operation state to be listed",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryId",
            "in": "query",
            "description": "query ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxItemsPerRequest",
            "in": "query",
            "description": "max items per request",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAssetList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "Create a LLCU asset",
        "description": "Create a LLCU asset, extract from fromlive",
        "operationId": "createLlcuAssetUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "llcuAssetBase",
            "description": "The content about the job",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAssetBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/llcu/assets/{id}": {
      "get": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "Get a LLCU asset",
        "description": "Get a LLCU asset",
        "operationId": "getLlcuAssetUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "LLCU asset name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAsset"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "Update an existing LLCU asset",
        "description": "Update an existing LLCU asset",
        "operationId": "updateLlcuAssetUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "LLCU asset name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "llcuAssetBase",
            "description": "The content about the job",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAssetBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "Delete a LLCU asset",
        "description": "Delete a LLCU asset",
        "operationId": "deleteLlcuAssetUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "LLCU asset name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/origin-engine/v1/llcu/assets/{id}/drm_setting": {
      "get": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "Get LLCU asset DRM settings",
        "description": "Get LLCU asset DRM settings",
        "operationId": "getLlcuAssetDrmSettingUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "LLCU asset name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.DrmSetting"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "OriginEngine AssetManagement (JSON)"
        ],
        "summary": "Update LLCU asset DRM settings",
        "description": "Update LLCU asset DRM settings",
        "operationId": "setLlcuAssetDrmSettingUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "LLCU asset name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "drmSetting",
            "description": "DRM settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.DrmSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/schedule": {
      "get": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Get pre-warming schedule",
        "description": "Get pre-warming schedule.",
        "operationId": "getPreWarmScheduleUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "event_name",
            "in": "query",
            "description": "Event name",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_status",
            "in": "query",
            "description": "Event status",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "No. of results returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Item offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.PreWarmScheduleResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/schedule/events": {
      "post": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Add pre-warming event",
        "description": "Add pre-warming event",
        "operationId": "addPreWarmEventUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "event",
            "description": "Event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventInternal"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/schedule/events/{id}": {
      "get": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Get pre-warming event",
        "description": "Get pre-warming event by event ID.",
        "operationId": "getPreWarmEventUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventInternal"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Update pre-warming event",
        "description": "Update pre-warming event by event ID.",
        "operationId": "updatePreWarmEventUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "event",
            "description": "Event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventInternal"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Delete pre-warming event",
        "description": "Delete pre-warming event by event ID.",
        "operationId": "deletePreWarmEventUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/origin-engine/v1/settings": {
      "get": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Get origin engine settings",
        "description": "Get origin engine settings.",
        "operationId": "getSettingsUsingGET_39",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Configure origin engine settings",
        "description": "Undefined config will be set to default value. Get settings then overwrite new config if you only want partial update.",
        "operationId": "updateSettingsUsingPUT_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "settings",
            "description": "General origin engine settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/origin-engine/v1/static_resources/test_object": {
      "get": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Get test object information",
        "description": "Get information of the test object",
        "operationId": "getTestObjectUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.TestObjectInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Updates the test object",
        "description": "Updates a ZIP file that contains files of the test object",
        "operationId": "uploadTestObjectUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Zip file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Delete test object",
        "description": "Clear the test object data",
        "operationId": "deleteTestObjectUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/origin-engine/v1/vod/profile_map/{id}": {
      "delete": {
        "tags": [
          "OriginEngine"
        ],
        "summary": "Delete a mapping of VOD profile ID to Labwizard destination",
        "description": "Delete a mapping of VOD profile ID to Labwizard destination",
        "operationId": "deleteVodProfileMapByIdUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "VOD profile id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/platform-config/v1/rfStatistics": {
      "get": {
        "tags": [
          "Platform Config"
        ],
        "summary": "Get RF statistics",
        "description": "Returns rf statistics",
        "operationId": "getRfStatisticsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.flex.platform.config.model.RfStatistics"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/channels": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get list of playout channels",
        "operationId": "getChannelsUsingGET_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.PlayoutService"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/channels/{channelId}/missing-assets": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get missing assets",
        "operationId": "getChannelMissingAssetsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.checker.MissingAssetList"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel not found"
          }
        }
      }
    },
    "/playoutcontrol/v1/channels/{channelId}/settings": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get channel settings",
        "operationId": "getChannelSettingsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.channelmanager.ChannelGetProperties"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel not found"
          }
        }
      },
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update channel settings",
        "operationId": "updateChannelSettingsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Channel properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.channelmanager.ChannelSetProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel not found"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get list of events for a channel",
        "operationId": "getEventsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "RefEventId",
            "in": "query",
            "description": "Default is the Id of the rank #1 event, which is the on-air event (or next event if no on-air event)",
            "required": false,
            "type": "string"
          },
          {
            "name": "EventOffset",
            "in": "query",
            "description": "Signed integer. Applies to the Reference primary event, to identify the first returned event. Default is 0",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "EventsNumber",
            "in": "query",
            "description": "Number of returned events. Default is 0: returns the events until the end of the playlist",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PlaylistEventList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/primaries/{firstPrimaryId}": {
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a range of primary events",
        "operationId": "deletePrimaryEventRangeUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "firstPrimaryId",
            "in": "path",
            "description": "ID of the first primary event to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastPrimaryId",
            "in": "query",
            "description": "ID of the last primary event to delete",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Events deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "First or last event doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/primary": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Insert a primary event",
        "operationId": "insertPrimaryEventUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertPrimaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PrimaryProperties"
            }
          },
          "201": {
            "description": "Event created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PrimaryProperties"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/primary/{primaryId}": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update a primary event",
        "operationId": "updatePrimaryEventUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.UpdatePrimaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a primary event and all of its secondary events",
        "operationId": "deletePrimaryEventUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Event doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/primary/{primaryId}/play": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Play the next event of a channel",
        "operationId": "playNextUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "name": "play_time_tc",
            "in": "query",
            "description": "Play time in timecode",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Play next request done",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Event doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/primary/{primaryId}/secondary": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Insert a secondary event",
        "operationId": "insertSecondaryEventUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "sProps",
            "description": "Event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertSecondaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.SecondaryProperties"
            }
          },
          "201": {
            "description": "Secondary event created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.SecondaryProperties"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/primary/{primaryId}/secondary/{secondaryId}": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update a secondary event",
        "operationId": "updateSecondaryEventUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "name": "secondaryId",
            "in": "path",
            "description": "ID of the secondary event",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertSecondaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a secondary event",
        "operationId": "deleteSecondaryEventUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "name": "secondaryId",
            "in": "path",
            "description": "ID of the secondary event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Event doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Create a new sequence",
        "operationId": "createSequenceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Sequence properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.CreateSequenceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Sequence created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence/{sequenceId}": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update a sequence",
        "operationId": "updateSequenceUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Sequence properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.UpdateSequenceProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Sequence not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a sequence and all its events",
        "operationId": "deleteSequenceUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence/{sequenceId}/play": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Play the sequence for the channel",
        "operationId": "playSequenceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence inserted for playing",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized request. Check if the sequence is allowed to be played"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Sequence or Channel doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence/{sequenceId}/primary": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Add a primary event in a sequence",
        "operationId": "insertSequencePrimaryEventUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Sequence primary event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequenceSinglePrimaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequencePrimaryProperties"
            }
          },
          "201": {
            "description": "Sequence primary event created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequencePrimaryProperties"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence/{sequenceId}/primary/{primaryId}": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update a primary event in a sequence",
        "operationId": "updateSequencePrimaryEventUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Sequence primary event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.UpdateSequencePrimaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence primary event updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence or primary doesn't exist"
          }
        }
      },
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a primary event in a sequence",
        "operationId": "deleteSequencePrimaryEventUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence primary event deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence or primary doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence/{sequenceId}/primary/{primaryId}/secondary": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Add a secondary event in a sequence",
        "operationId": "insertSequenceSecondaryEventUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Sequence secondary event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertSecondaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceSecondaryProperties"
            }
          },
          "201": {
            "description": "Sequence secondary event created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceSecondaryProperties"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence or primary doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequence/{sequenceId}/primary/{primaryId}/secondary/{secondaryId}": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update a secondary event in a sequence",
        "operationId": "updateSequenceSecondaryEventUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "name": "secondaryId",
            "in": "path",
            "description": "ID of the secondary event",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Sequence secondary event properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertSecondaryProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence secondary event updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence or primary or secondary doesn't exist"
          }
        }
      },
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a secondary event in a sequence",
        "operationId": "deleteSequenceSecondaryEventUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "ID of the sequence",
            "required": true,
            "type": "string"
          },
          {
            "name": "primaryId",
            "in": "path",
            "description": "ID of the primary event",
            "required": true,
            "type": "string"
          },
          {
            "name": "secondaryId",
            "in": "path",
            "description": "ID of the secondary event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Sequence secondary event deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Channel or sequence or primary or secondary doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequences": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get all sequences of a channel",
        "operationId": "getSequencesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceElement"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/events/{channelId}/sequences/{sequenceId}": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get sequence of a channel from a given sequence ID",
        "operationId": "getSequenceUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "sequenceId",
            "in": "path",
            "description": "Sequence ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceElement"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/graphics/{channelId}": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get all onair graphics for a channel",
        "operationId": "getGraphicsUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.playout.zookeeper.access.instancestatus.Graphic"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/graphics/{channelId}/layer/{layer}": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Start graphic on a layer for a channel",
        "operationId": "startGraphicUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "layer",
            "in": "path",
            "description": "Layer between 1 and 8",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "sProps",
            "description": "Graphic name and text fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.graphic.StartGraphicProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Start a graphic",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Unexpected issue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Graphic is missing"
          }
        }
      },
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update graphic on a layer for a channel",
        "operationId": "updateGraphicUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "layer",
            "in": "path",
            "description": "Layer between 1 and 8",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "sProps",
            "description": "Text fields",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.graphic.UpdateGraphicProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update a graphic",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Unexpected issue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No graphic found"
          }
        }
      }
    },
    "/playoutcontrol/v1/graphics/{channelId}/layer/{layer}/stop": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Stop graphic on a layer for a channel",
        "operationId": "stopGraphicUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "layer",
            "in": "path",
            "description": "Layer between 1 and 8",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/graphics/{channelId}/layer/{layer}/unload": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Unload graphic on a layer for a channel",
        "operationId": "unloadGraphicUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "layer",
            "in": "path",
            "description": "Layer between 1 and 8",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/graphics/{channelId}/unload": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Unload all graphics on all layers for a channel",
        "operationId": "unloadAllGraphicsUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/livesources/{channelId}": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get live source monitoring",
        "operationId": "getLiveMonitoringUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Current live source monitoring",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.LiveSourceMonitoringProperties"
            }
          },
          "400": {
            "description": "Unexpected issue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Specified channel does not exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/livesources/{channelId}/player/{player}/startmonitoring": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Start live source monitoring",
        "operationId": "startLiveMonitoringUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "player",
            "in": "path",
            "description": "Player",
            "required": true,
            "type": "string",
            "enum": [
              "PLAYER_1",
              "PLAYER_2"
            ]
          },
          {
            "in": "body",
            "name": "sProps",
            "description": "sProps",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.StartLiveSourceMonitoringProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitoring of the specified source started",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Unexpected issue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Specified channel does not exist"
          },
          "503": {
            "description": "The player is used to monitor a higher priority source"
          }
        }
      }
    },
    "/playoutcontrol/v1/livesources/{channelId}/player/{player}/stopmonitoring": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Stop live source monitoring",
        "operationId": "stopLiveMonitoringUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "name": "player",
            "in": "path",
            "description": "Player",
            "required": true,
            "type": "string",
            "enum": [
              "PLAYER_1",
              "PLAYER_2"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Current live source monitoring",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Unexpected issue"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Specified channel does not exist"
          },
          "503": {
            "description": "The player is used to monitor a higher priority source"
          }
        }
      }
    },
    "/playoutcontrol/v1/livesources/{channelId}/switch-default-source": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update default live source to PRIMARY or SECONDARY",
        "operationId": "updateDefaultLiveInputUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Target declaration to trigger default live source update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.DefaultLiveSource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update current default live source command triggered",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "ChannelId doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/livesources/{channelId}/switch_input": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Toggle source input switch for an ON-AIR or OFF-AIR source when input redundancy is used",
        "operationId": "toggleSourceInputUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pProps",
            "description": "Target declaration to trigger a manual source input switch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.ToggleSourceInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Toggle source input command triggered",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "ChannelId, ServiceId or SourceId doesn't exist"
          }
        }
      }
    },
    "/playoutcontrol/v1/scte35/{channelId}": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Send a Scte-35 message",
        "operationId": "sendScte35MessageUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "ID of the channel",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "scte35MessageProperties",
            "description": "scte35MessageProperties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.scte35.SendScte35MessageProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Scte-35 message is sent",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad or mal-formatted argument"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "ChannelId or Label not found"
          }
        }
      }
    },
    "/playoutcontrol/v1/trigger": {
      "post": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Create a playlist trigger",
        "operationId": "createTriggerUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "triggerConfiguration",
            "description": "Trigger properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf"
            }
          },
          "201": {
            "description": "Trigger has been created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf"
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/playoutcontrol/v1/trigger/{triggerId}": {
      "put": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Update a playlist trigger",
        "operationId": "updateTriggerUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "triggerId",
            "in": "path",
            "description": "Trigger ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "triggerConfiguration",
            "description": "Trigger properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been updated",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "TriggerId not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Delete a playlist trigger",
        "operationId": "deleteTriggerUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "triggerId",
            "in": "path",
            "description": "Trigger ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Trigger has been deleted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Error"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "TriggerId not found"
          }
        }
      }
    },
    "/playoutcontrol/v1/triggers": {
      "get": {
        "tags": [
          "Playout Backend"
        ],
        "summary": "Get playlist triggers",
        "operationId": "getTriggersUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/scrambling/v1/drm/clientAuthCertKey": {
      "post": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Update certifcate and private key",
        "description": "Update certificate and private key for client authentication.",
        "operationId": "updateClientAuthCertKeyUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of file containing certificate and private key",
            "required": false,
            "type": "string",
            "default": "pem",
            "enum": [
              "pem"
            ]
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/scrambling/v1/drm/fixedResources": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Get All DRM Fixed Resources",
        "description": "Get all DRM Fixed Resources.",
        "operationId": "getDrmAllFixedResourcesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedResource"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Create DRM Fixed Resource",
        "description": "Create a fixed DRM resource for OTT encryption.",
        "operationId": "createDrmFixedResourceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "drmFixedResource",
            "description": "drmFixedResource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedResource"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/scrambling/v1/drm/fixedResources/{id}": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Get DRM Fixed Resource",
        "description": "Get a DRM Fixed Resource.",
        "operationId": "getDrmFixedResourceUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedResource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm Fixed Key not found"
          }
        }
      },
      "put": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Update DRM Fixed Resource",
        "description": "Update a DRM Fixed Resource.",
        "operationId": "updateDrmFixedResourceUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "drmFixedResource",
            "description": "drmFixedResource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm Fixed Key not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Delete DRM Fixed Resource",
        "description": "Delete a DRM Fixed Resource.",
        "operationId": "deleteDrmFixedResourceUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm System not found"
          }
        }
      }
    },
    "/scrambling/v1/drm/settings": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Get DRM Settings",
        "description": "Get a DRM Settings.",
        "operationId": "getDrmSettingsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSettings"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm Settings not found"
          }
        }
      },
      "put": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Update DRM Settings",
        "description": "Update a DRM Settings.",
        "operationId": "updateDrmSettingsUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "drmSettings",
            "description": "drmSettings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm Settings not found"
          }
        }
      }
    },
    "/scrambling/v1/drm/systems": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Get All DRM Systems",
        "description": "Get all DRM systems.",
        "operationId": "getDrmAllSystemsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Create DRM System",
        "description": "Create a DRM system for OTT encryption.",
        "operationId": "createDrmSystemUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "drmSystem",
            "description": "drmSystem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/scrambling/v1/drm/systems/{id}": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Get DRM System",
        "description": "Get a DRM system.",
        "operationId": "getDrmSystemUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm System not found"
          }
        }
      },
      "put": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Update DRM System",
        "description": "Update a DRM system.",
        "operationId": "updateDrmSystemUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "drmSystem",
            "description": "drmSystem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm System not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Delete DRM System",
        "description": "Delete a DRM system.",
        "operationId": "deleteDrmSystemUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm System not found"
          }
        }
      }
    },
    "/scrambling/v1/drm/systems/{systemId}/certificateManager": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "View certificate",
        "description": "View certificate",
        "operationId": "getCertificateUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of Harmonic CPIX certificate",
            "required": true,
            "type": "string",
            "default": "harmonicCpixSignRequest",
            "enum": [
              "harmonicCpixSignRequest",
              "harmonicCpixCheckResponseSign",
              "harmonicCpixDeliveryKey",
              "harmonicCpixSignRequestEndUser"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Add certificate and private key",
        "description": "Add certificate and private key.",
        "operationId": "addCertificateUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of certificate",
            "required": true,
            "type": "string",
            "default": "harmonicCpixSignRequest",
            "enum": [
              "harmonicCpixSignRequest",
              "harmonicCpixCheckResponseSign",
              "harmonicCpixDeliveryKey",
              "harmonicCpixSignRequestEndUser"
            ]
          },
          {
            "name": "file type",
            "in": "query",
            "description": "Type of file containing certificate and private key",
            "required": false,
            "type": "string",
            "default": "pem",
            "enum": [
              "pem"
            ]
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Delete Harmonic CPIX certificate and private key",
        "description": "Delete Harmonic CPIX certificate and private key.",
        "operationId": "deleteCertificateUsingDELETE_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of Harmonic CPIX certificate",
            "required": true,
            "type": "string",
            "default": "harmonicCpixSignRequest",
            "enum": [
              "harmonicCpixSignRequest",
              "harmonicCpixCheckResponseSign",
              "harmonicCpixDeliveryKey",
              "harmonicCpixSignRequestEndUser"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm System not found"
          }
        }
      }
    },
    "/scrambling/v1/drm/systems/{systemId}/drmResource": {
      "post": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Add Resource Id",
        "description": "Add Resource Id",
        "operationId": "addResourceIdUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "drmResource",
            "description": "drmResource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/scrambling/v1/drm/systems/{systemId}/drmResource/{drmResourceId}": {
      "delete": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Delete Resource Id",
        "description": "Delete Resource Id",
        "operationId": "deleteResourceIdUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "drmResourceId",
            "in": "path",
            "description": "drmResourceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/scrambling/v1/drm/systems/{systemId}/harmonicCpixSignature": {
      "get": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Get Harmonic CPIX certificate and private key",
        "description": "(Deprecated) Get Harmonic CPIX certificate and private key.",
        "operationId": "getClientCertificateUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of Harmonic CPIX certificate",
            "required": true,
            "type": "string",
            "default": "request",
            "enum": [
              "request",
              "response"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Add Harmonic CPIX certificate and private key",
        "description": "(Deprecated) Add Harmonic CPIX certificate and private key.",
        "operationId": "addHarmonicCpixSignatureUsingPOST_3",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of Harmonic CPIX certificate",
            "required": true,
            "type": "string",
            "default": "request",
            "enum": [
              "request",
              "response"
            ]
          },
          {
            "name": "file type",
            "in": "query",
            "description": "Type of file containing certificate and private key",
            "required": false,
            "type": "string",
            "default": "pem",
            "enum": [
              "pem"
            ]
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Scrambling DRM"
        ],
        "summary": "Delete Harmonic CPIX certificate and private key",
        "description": "(Deprecated) Delete Harmonic CPIX certificate and private key.",
        "operationId": "deleteHarmonicCpixSignatureUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "systemId",
            "in": "path",
            "description": "systemId",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of Harmonic CPIX certificate",
            "required": true,
            "type": "string",
            "default": "request",
            "enum": [
              "request",
              "response"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Drm System not found"
          }
        }
      }
    },
    "/source-monitor/v1/discover": {
      "get": {
        "tags": [
          "Monitor Source"
        ],
        "summary": "Get list of discovery",
        "description": "Get list of active source monitors.",
        "operationId": "queryDiscoverUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.DiscoverySource"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Monitor Source"
        ],
        "summary": "Scan stream information",
        "description": "Scan stream information.",
        "operationId": "discoverUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "discoverySource",
            "description": "discoverySource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.DiscoverySource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.DiscoverySource"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/source-monitor/v1/discover/source_input/{discoveryId}/proberesult": {
      "get": {
        "tags": [
          "Monitor Source"
        ],
        "summary": "Obtain source input model converted from discovery probe result",
        "description": "Obtain source input model converted from discovery probe result.\u003Cbr/\u003E\u003Ch1\u003ETHIS IS NOT SOURCE MEDIAINFO\u003C/h1\u003E",
        "operationId": "discoverSourceInputProbeResultUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "discoveryId",
            "in": "path",
            "description": "discoveryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Error in source input model conversion"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Discovery request not found"
          }
        }
      }
    },
    "/source-monitor/v1/discover/{discoveryId}/cancel": {
      "put": {
        "tags": [
          "Monitor Source"
        ],
        "summary": "Cancel discovery",
        "description": "Cancel a discovery request in progress.",
        "operationId": "discoverCancelUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "discoveryId",
            "in": "path",
            "description": "discoveryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Discovery request not found"
          }
        }
      }
    },
    "/source-monitor/v1/discover/{discoveryId}/proberesult": {
      "get": {
        "tags": [
          "Monitor Source"
        ],
        "summary": "Obtain discovery probe result",
        "description": "Obtain discovery probe result.",
        "operationId": "discoverProbeResultUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "discoveryId",
            "in": "path",
            "description": "discoveryId",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeAllTLVDescriptors",
            "in": "query",
            "description": "includeAllTLVDescriptors",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MediaInfoProbeResult"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Discovery request not found"
          }
        }
      }
    },
    "/source-monitor/v1/discover/{discoveryId}/progress": {
      "get": {
        "tags": [
          "Monitor Source"
        ],
        "summary": "Obtain discovery progress",
        "description": "Obtain progress of discovery.",
        "operationId": "discoverProgressUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "discoveryId",
            "in": "path",
            "description": "discoveryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.DiscoveryProgress"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Discovery request not found"
          }
        }
      }
    },
    "/syndicate/v1/availableCloudRegions": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get region details for current instance",
        "operationId": "getAvailableCloudRegionsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "refreshCache",
            "in": "query",
            "description": "refreshCache",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.region.Region"
              }
            }
          },
          "400": {
            "description": "Failed to get available cloud regions caused by unexpected error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get available cloud regions caused by dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/syndicate/v1/availableReleaseVersions": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get available release versions for this account",
        "operationId": "getAvailableReleaseVersionsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Failed to get available release versions by unexpected error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get available release versions by dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/syndicate/v1/cloudEdges": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get list of Cloud Edges",
        "operationId": "getCloudEdgesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string",
            "enum": [
              "ONLINE",
              "RUNNING",
              "OFFLINE",
              "FAILED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint"
              }
            }
          },
          "400": {
            "description": "Failed to return list of Cloud Edges"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to return list of Cloud Edges because of failed dependency"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Create Cloud Edge",
        "operationId": "addCloudEdgeUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lrsEgressPointCreateRequest",
            "description": "lrsEgressPointCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsEgressPointCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint"
            }
          },
          "400": {
            "description": "Failed to create Cloud Edge"
          },
          "422": {
            "description": "Unprocessable entity to create Cloud Edge"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to create Cloud Edge because dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/syndicate/v1/cloudEdges/{egressPointId}": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get Cloud Edge by egressPointId",
        "operationId": "getCloudEdgeUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "egressPointId",
            "in": "path",
            "description": "egressPointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint"
            }
          },
          "400": {
            "description": "Failed to return list of Cloud Edges"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to return list of Cloud Edges because of failed dependency"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No cloud Edge with specified id"
          }
        }
      },
      "put": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Update Cloud Edge",
        "operationId": "updateCloudEdgeUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lrsEgressPointUpdateRequest",
            "description": "lrsEgressPointUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsEgressPointUpdateRequest"
            }
          },
          {
            "name": "egressPointId",
            "in": "path",
            "description": "egressPointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update Cloud Edge"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to update Cloud Edge cause dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud Edge with specified egressPointId"
          }
        }
      },
      "delete": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Delete Cloud Edge",
        "operationId": "deleteCloudEdgeUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "egressPointId",
            "in": "path",
            "description": "egressPointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Failed to delete Cloud Edge"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to delete Cloud Edge because dependency issue"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Cannot find Cloud Edge"
          }
        }
      }
    },
    "/syndicate/v1/cloudEdges/{egressPointId}/muteStates": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get Cloud Edge mute states by egressPointId",
        "operationId": "getLrsEgressMuteStatesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "egressPointId",
            "in": "path",
            "description": "egressPointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates"
            }
          },
          "400": {
            "description": "Failed to return Cloud Edge mute states"
          },
          "422": {
            "description": "Unprocessable entity to get Cloud Edge mute states"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get Cloud Edge mute states because of failed dependency"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud Edge with specified pipeId"
          }
        }
      },
      "put": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Update Cloud Edge mute states by egressPointId",
        "operationId": "updateLrsEgressMuteStatesUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "egressPointId",
            "in": "path",
            "description": "egressPointId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lrsEgressMuteStatesUpdateRequest",
            "description": "lrsEgressMuteStatesUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsEgressMuteStatesUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update Cloud Edge mute states"
          },
          "422": {
            "description": "Unprocessable entity to update Cloud Edge mute states"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to update Cloud Edge mute states because dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud Edge with specified egressPointId"
          }
        }
      }
    },
    "/syndicate/v1/cloudEdges/{egressPointId}/state": {
      "put": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Update Cloud Edge state",
        "operationId": "updateEdgeStateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "egressPointId",
            "in": "path",
            "description": "egressPointId",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string",
            "enum": [
              "ONLINE",
              "OFFLINE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update Cloud Edge state"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to update Cloud Edge state because dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No cloud Edge with specified id"
          }
        }
      }
    },
    "/syndicate/v1/cloudSubscriptionAccountLocationMappings": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get list of cloud subscription account location mappings",
        "operationId": "getCloudSubscriptionAccountLocationMappingsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "refreshCache",
            "in": "query",
            "description": "refreshCache",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.billing.CloudSubscriptionAccountLocationMapping"
              }
            }
          },
          "400": {
            "description": "Failed to get cloud subscription account location mapping caused by unexpected error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get cloud subscription account location mapping caused by dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/syndicate/v1/cloudsources": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get list of Cloud Sources",
        "operationId": "getCloudSourcesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string",
            "enum": [
              "ONLINE",
              "RUNNING",
              "OFFLINE",
              "FAILED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe"
              }
            }
          },
          "400": {
            "description": "Failed to return list of Cloud Sources"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to return list of Cloud Sources because of failed dependency"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Create Cloud Source",
        "operationId": "addCloudSourceUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lrsPipeCreateRequest",
            "description": "lrsPipeCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsPipeCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe"
            }
          },
          "400": {
            "description": "Failed to create Cloud Source"
          },
          "422": {
            "description": "Unprocessable entity to create Cloud Source"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to create Cloud Source because dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/syndicate/v1/cloudsources/{pipeId}": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get Cloud Source by pipeId",
        "operationId": "getCloudSourceUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pipeId",
            "in": "path",
            "description": "pipeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe"
            }
          },
          "400": {
            "description": "Failed to return Cloud Source"
          },
          "422": {
            "description": "Unprocessable entity to get Cloud Source"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get specific cloud source because of failed dependency"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No cloud source with specified pipeId"
          }
        }
      },
      "put": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Update Cloud Source",
        "operationId": "updateCloudSourceUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "lrsPipeUpdateRequest",
            "description": "lrsPipeUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsPipeUpdateRequest"
            }
          },
          {
            "name": "pipeId",
            "in": "path",
            "description": "pipeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update Cloud Source"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to update Cloud Source cause dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud Source with specified pipeId"
          }
        }
      },
      "delete": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Delete Cloud Source",
        "operationId": "deleteCloudSourceUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pipeId",
            "in": "path",
            "description": "pipeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Failed to delete Cloud Source"
          },
          "422": {
            "description": "Unprocessable entity to delete Cloud Source"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to delete Cloud Source because dependency issue"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Cannot find Cloud Source"
          }
        }
      }
    },
    "/syndicate/v1/cloudsources/{pipeId}/muteStates": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get Cloud Source mute states by pipeId",
        "operationId": "getLrsPipeMuteStatesUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pipeId",
            "in": "path",
            "description": "pipeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates"
            }
          },
          "400": {
            "description": "Failed to return Cloud Source mute states"
          },
          "422": {
            "description": "Unprocessable entity to get Cloud Source mute states"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get Cloud source mute states because of failed dependency"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud source with specified pipeId"
          }
        }
      },
      "put": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Update Cloud Source mute states by pipeId",
        "operationId": "updateLrsPipeMuteStatesUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pipeId",
            "in": "path",
            "description": "pipeId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "lrsPipeMuteStatesUpdateRequest",
            "description": "lrsPipeMuteStatesUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsPipeMuteStatesUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update Cloud Source mute states"
          },
          "422": {
            "description": "Unprocessable entity to update Cloud Source mute states"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to update Cloud Source mute states because dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud Source with specified pipeId"
          }
        }
      }
    },
    "/syndicate/v1/cloudsources/{pipeId}/state": {
      "put": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Update Cloud Source state",
        "operationId": "updateCloudSourceStateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pipeId",
            "in": "path",
            "description": "pipeId",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string",
            "enum": [
              "ONLINE",
              "OFFLINE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Failed to update Cloud Source state"
          },
          "422": {
            "description": "Unprocessable entity to update Cloud Source"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to update Cloud Source state because dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No Cloud Source with specified pipeId"
          }
        }
      }
    },
    "/syndicate/v1/currentReleaseVersion": {
      "get": {
        "tags": [
          "Syndicate Cloud"
        ],
        "summary": "Get current release version",
        "operationId": "getCurrentReleaseVersionUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Failed to get current release version caused by unexpected error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "424": {
            "description": "Failed to get current release version caused by dependency issue"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/system/v1/info": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get product infomation",
        "description": "Get the information of product, including product name, product version, product period and credits",
        "operationId": "getProductInfoUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.rumba.core.ProductInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uplink-hub/v1/test-receiver": {
      "get": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Get TestReceiver",
        "description": "List all TestReceiver.",
        "operationId": "getTestReceiversUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/java.util.CollectionOfcom.harmonicinc.vos.app.uplink.hub.benchmark.TestReceiver"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Create TestReceiver",
        "description": "Create new TestReceiver.",
        "operationId": "addTestReceiverUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "TestReceiver Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.benchmark.TestReceiver"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "TestReceiver creation Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uplink-hub/v1/test-receiver/{id}": {
      "get": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Get TestReceiver by ID",
        "description": "Get a Uplink by specifying a uplink Id.",
        "operationId": "getTestReceiverUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.benchmark.TestReceiver"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No such TestReceiver ID found"
          }
        }
      },
      "delete": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Delete TestReceiver",
        "description": "Delete TestReceiver with {id}.",
        "operationId": "deleteTestReceiverUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a TestReceiver",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "TestReceiver Deleted"
          },
          "400": {
            "description": "Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "TestReceiver with such id not found"
          }
        }
      }
    },
    "/uplink-hub/v1/uplinkGroups": {
      "get": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Get uplinkGroups",
        "description": "List all uplink groups.",
        "operationId": "getUplinkGroupsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uplinkid",
            "in": "query",
            "description": "uplinkid",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uplink-hub/v1/uplinks": {
      "get": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Get CloudLinks",
        "description": "List all CloudLinks.",
        "operationId": "getUplinksUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.Uplink"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Create uplink",
        "description": "Create new uplink.",
        "operationId": "addUplinkUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param0",
            "description": "param0",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.Uplink"
            }
          },
          "201": {
            "description": "Uplink Created",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.Uplink"
            }
          },
          "400": {
            "description": "Uplink Creation Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uplink-hub/v1/uplinks/{id}": {
      "get": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Get Uplink by ID",
        "description": "Get a Uplink by specifying a uplink Id.",
        "operationId": "getUplinkUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.Uplink"
            }
          },
          "410": {
            "description": "Uplink removed recently by ID found in Uplink Hub"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No such Uplink ID found in Uplink Hub"
          }
        }
      },
      "post": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Inform cluster on uplink successful deletion",
        "description": "Delete uplink with {id}. from deleted uplinks data holder",
        "operationId": "informOnUplinkDeletionUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a uplink",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Uplink Deleted from temp data holder",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.Uplink"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "No such id in deleted uplinks data holder"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Delete uplink",
        "description": "Delete uplink with {id}.",
        "operationId": "deleteUplinkUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a uplink",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Uplink Deleted"
          },
          "400": {
            "description": "Deletion Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/uplink-hub/v1/uplinks/{id}/uplinkChannels": {
      "get": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Get Uplink Channel",
        "description": "Query a list of  UplinkChannel (active streaming channel) of a uplink.",
        "operationId": "getUplinkChannelsUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/uplink-hub/v1/uplinks/{id}/uplinkStatus": {
      "post": {
        "tags": [
          "Uplink Hub"
        ],
        "summary": "Update the status of Uplink",
        "description": "Update the status of Uplink.",
        "operationId": "updateUplinkStatusUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "param0",
            "description": "param0",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkStatus"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of a uplink",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Uplink Status updated",
            "schema": {
              "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkStatus"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Update Failed"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "com.harmonicinc.vos.syndicate.cloud.hms.model.egress.LrsEgressPoint": {
      "properties": {
        "backupPipeId": {
          "type": "string"
        },
        "cryptoSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting"
        },
        "customDnsName": {
          "type": "string"
        },
        "customUrl": {
          "type": "string"
        },
        "egressPointId": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxOutputConnections": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pendingRestart": {
          "type": "boolean"
        },
        "pipeId": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "privateUrl": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "publicIpMode": {
          "type": "string",
          "enum": [
            "IPV4_ONLY",
            "IPV6_ONLY",
            "IPV4_IPV6"
          ]
        },
        "region": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedLrsStatistics"
        },
        "streamCount": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "name": "LrsEgressPoint"
    },
    "com.harmonicinc.vos.app.configure.model.source.CustomDescriptor": {
      "required": [
        "descriptorContent",
        "descriptorTag"
      ],
      "properties": {
        "descriptorContent": {
          "type": "string",
          "description": "Content of descriptor represented in HEX string"
        },
        "descriptorTag": {
          "type": "integer",
          "format": "int32",
          "description": "Tag of descriptor"
        }
      },
      "name": "CustomDescriptor"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalSpeechServiceSetting": {
      "properties": {
        "azureSpeechServiceSetting": {
          "description": "Azure speech service setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.AzureSpeechServiceSetting"
        },
        "nciCaptioning": {
          "description": "NCI captioning service setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.NciCaptioning"
        }
      },
      "name": "GlobalSpeechServiceSetting"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte2110VideoStreamProperties": {
      "required": [
        "transportId"
      ],
      "properties": {
        "transportId": {
          "type": "integer",
          "format": "int32",
          "description": "For mapping the 2110 stream to the 2110 transport"
        }
      },
      "name": "Smpte2110VideoStreamProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.SDI_Input": {
      "properties": {
        "sdiCard": {
          "type": "integer",
          "format": "int32",
          "description": "Specify which SDI card to receive the input"
        },
        "sdiLinkMapping": {
          "type": "string",
          "description": "Specify the SDI link standard",
          "enum": [
            "e_SingleLink",
            "e_DualLink",
            "e_QuadLink"
          ]
        },
        "sdiOverIpInput": {
          "description": "Settings of a SDI over IP input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiOverIpInput"
        },
        "sdiPort": {
          "type": "integer",
          "format": "int32",
          "description": "Specify which port of the SDI card to receive the input"
        }
      },
      "name": "SDI_Input"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.AudioGrooming": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of audio tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.AudioTrack"
          }
        }
      },
      "name": "AudioGrooming"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.HspSource": {
      "required": [
        "hspEndpoint",
        "variantPlaylistFileName"
      ],
      "properties": {
        "authenticationHeader": {
          "description": "Authentication header",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.HspAuthenticationHeader"
        },
        "backupEndpointSettings": {
          "description": "Backup Live ingest endpoint settings of the source for seamless input redundancy",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.HspEndpointSettings"
        },
        "hspEndpoint": {
          "type": "string",
          "description": "HSP Endpoint"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network Address used to receive the stream"
        },
        "scte35Annotation": {
          "type": "string",
          "description": "SCTE-35 annotation format",
          "enum": [
            "NONE",
            "BASE64_SCTE35_CUE"
          ]
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Playlist File Name of the source"
        }
      },
      "name": "HspSource"
    },
    "com.harmonicinc.vos.labwizard.rest.model.Information$ProfileChanges": {
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the changed property"
        },
        "newValue": {
          "type": "string",
          "description": "The updated value of the changed property"
        },
        "oriValue": {
          "type": "string",
          "description": "The original value of the changed property"
        }
      },
      "name": "ProfileChanges"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.DiscoveryProgress": {
      "required": [
        "progress",
        "state"
      ],
      "properties": {
        "progress": {
          "type": "integer",
          "format": "int32",
          "description": "Discovery Progress"
        },
        "state": {
          "type": "string",
          "description": "Discovery State",
          "enum": [
            "UNINITIALIZED",
            "INITIALIZING",
            "RUNNING",
            "INTERRUPTED",
            "CANCELLED",
            "COMPLETED",
            "DESTROYED",
            "ERROR"
          ]
        }
      },
      "name": "DiscoveryProgress"
    },
    "com.harmonicinc.vos.app.configure.model.service.InputMonitoringAddon": {
      "required": [
        "enable"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Switch for enabling input monitoring through HSP"
        }
      },
      "name": "InputMonitoringAddon"
    },
    "com.harmonicinc.vos.mux.model.ts.OutputTS": {
      "required": [
        "globalSettings",
        "muxServiceId",
        "programs"
      ],
      "properties": {
        "globalSettings": {
          "description": "Global Settings",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.GlobalSettings"
        },
        "guiSpecific": {
          "description": "Gui specific section",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.GuiSpecific"
        },
        "muxServiceId": {
          "type": "string",
          "description": "mux service ID"
        },
        "muxServiceName": {
          "type": "string",
          "description": "mux service name"
        },
        "programs": {
          "type": "array",
          "description": "Programs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.OutputProgram"
          }
        },
        "unreferencedPids": {
          "type": "array",
          "description": "Unreferenced Pids",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.unreferencedpidlevel.OutputUnreferencedPid"
          }
        }
      },
      "name": "OutputTS"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventConfig": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "streamingUnit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "PreWarmEventConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.InternalPackagingProperties": {
      "required": [
        "fromliveSegmentDuration",
        "fromliveSegmentRetentionPeriod",
        "liveSegmentRetentionPeriod"
      ],
      "properties": {
        "fromliveSegmentDuration": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of a from-live media segment file (expressed in minutes)."
        },
        "fromliveSegmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the from-live media segment files actually retain in the internal storage (expressed in minutes)."
        },
        "liveSegmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the live media segment files actually retain in the internal storage (expressed in minutes)."
        },
        "rtvodFlag": {
          "type": "string",
          "description": "The Nielsen RTVOD flag to be inserted to the audio.",
          "enum": [
            "e_NONE",
            "e_AUTO",
            "e_C3",
            "e_C7"
          ]
        }
      },
      "name": "InternalPackagingProperties"
    },
    "com.harmonicinc.vos.mux.model.common.Transport": {
      "required": [
        "originalNetworkId",
        "tsMpegId"
      ],
      "properties": {
        "originalNetworkId": {
          "type": "integer",
          "format": "int32",
          "description": "MPEG Original Network ID (0-65535)"
        },
        "tsDescriptors": {
          "type": "array",
          "description": "transport descriptors in hex TLV format",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Descriptor"
          }
        },
        "tsMpegId": {
          "type": "integer",
          "format": "int32",
          "description": "MPEG TS ID (0-65535)"
        }
      },
      "name": "Transport"
    },
    "com.harmonicinc.vos.mux.model.tslevel.LocalTimeOffsetDes": {
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "Identifies a country using the 3-character code"
        },
        "countryRegionId": {
          "type": "integer",
          "format": "int32",
          "description": "A zone in the country which is indicated by country code Range 0..63, default 0"
        },
        "timezone": {
          "type": "string",
          "example": "US/Pacific",
          "description": "Timezone Id"
        }
      },
      "name": "LocalTimeOffsetDes"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalVideoSetting": {
      "required": [
        "copyRight",
        "stressBias",
        "videoStandard"
      ],
      "properties": {
        "copyRight": {
          "type": "string",
          "description": "Specifies copyRight properties of video",
          "enum": [
            "COPYRIGHTED_ORIGINAL",
            "COPYRIGHTED_COPY",
            "UNCOPYRIGHTED_ORIGINAL",
            "UNCOPYRIGHTED_COPY"
          ]
        },
        "enableTimecodeNormalization": {
          "type": "boolean",
          "description": "Indicate if input timecode to UTC timecode normalization is enabled."
        },
        "stressBias": {
          "type": "string",
          "description": "Specifies stress bias option applied on video",
          "enum": [
            "SOFT_CLEANER",
            "BALANCED",
            "SHARPER_BLOCKIER"
          ]
        },
        "syncMode": {
          "type": "string",
          "description": "Specifies sync mode properties of video",
          "enum": [
            "SYNC_TO_SOURCE",
            "SYNC_TO_INTERNAL"
          ]
        },
        "videoStandard": {
          "type": "string",
          "description": "Specifies video standard of the output",
          "enum": [
            "VS_25_50Hz",
            "VS_30_60Hz"
          ]
        }
      },
      "name": "GlobalVideoSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.StreamSelectionGroup": {
      "properties": {
        "audioStreamSelections": {
          "type": "array",
          "description": "audioStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.audio.AudioStreamSelectionItem"
          }
        },
        "videoStreamSelections": {
          "type": "array",
          "description": "videoStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.VideoStreamSelectionItem"
          }
        }
      },
      "name": "StreamSelectionGroup"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.TestObjectInfo": {
      "required": [
        "files",
        "lastUpdated",
        "totalSize"
      ],
      "properties": {
        "files": {
          "type": "array",
          "description": "List all files with their full path inside the ZIP. Empty directories are not listed",
          "items": {
            "type": "string"
          }
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "The time the test object is last uploaded"
        },
        "totalSize": {
          "type": "integer",
          "format": "int64",
          "description": "Sum of uncompressed size of all files"
        }
      },
      "name": "TestObjectInfo"
    },
    "com.harmonicinc.vos.app.configure.model.service.Scte35SlateAddon": {
      "properties": {
        "enableVideoSlate": {
          "type": "boolean",
          "description": "Enable run-time update on video slate (graphicFilename). default = false"
        },
        "graphicFilename": {
          "type": "string",
          "description": "Filename of a graphic in the Asset Acquisition App to be used as the slate video"
        },
        "imageId": {
          "type": "string",
          "description": "Id of an image in the system to be used as the slate image"
        },
        "trigger": {
          "type": "string",
          "description": "Trigger of scte35 slate insertion mode.",
          "enum": [
            "e_AUTO",
            "e_ESAM_ALTERNATE_CONTENT"
          ]
        },
        "zoneIdentity": {
          "type": "string",
          "description": "Zone identity of acquisition point."
        }
      },
      "name": "Scte35SlateAddon"
    },
    "com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$VerticalResolutionRange": {
      "properties": {
        "maxVerticalResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Max vertical resolution"
        },
        "minVerticalResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Min vertical resolution"
        }
      },
      "name": "VerticalResolutionRange"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiOverIpInput": {
      "properties": {
        "lsmIds": {
          "type": "array",
          "description": "List of LSM id that is controlling SONY_NMI input source",
          "items": {
            "type": "string"
          }
        },
        "maxSupportedDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum supported delay between 2110 stream"
        },
        "mode": {
          "type": "string",
          "description": "SDI over IP mode",
          "enum": [
            "SMPTE_2022_6",
            "SMPTE_2110",
            "SONY_NMI"
          ]
        },
        "nmiIndex": {
          "type": "integer",
          "format": "int32",
          "description": "NMI index associated with this input source"
        },
        "nmosEnabled": {
          "type": "boolean",
          "description": "Enable input configuration by NMOS"
        },
        "sources": {
          "type": "array",
          "description": "Sources of the SDI over IP input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiOverIpSource"
          }
        }
      },
      "name": "SdiOverIpInput"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte302mChannelList": {
      "properties": {
        "indices": {
          "type": "array",
          "description": "Specify how to locate all audio tracks of the audio pid. The index order matters for mapping the channel position",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of the audio stream that is used for selection"
        }
      },
      "name": "Smpte302mChannelList"
    },
    "com.harmonicinc.vos.app.configure.model.service.NielsenWatermarkAddon": {
      "properties": {
        "nielsenWatermarkConfig": {
          "type": "array",
          "description": "List of NielsenWatermarkConfig for each Audio Profile",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.NielsenWatermarkConfig"
          }
        }
      },
      "name": "NielsenWatermarkAddon"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MediaInfoProbeResult": {
      "required": [
        "demuxSource",
        "hspSource",
        "ipSource",
        "mpegPrograms",
        "rfsource",
        "sourceType",
        "srtSource",
        "zixiSource"
      ],
      "properties": {
        "completionTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Completion Timestamp of Discovery Task"
        },
        "connectionInformation": {
          "description": "Information about connection to source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.connection.ConnectionInformation"
        },
        "demuxSource": {
          "description": "Demux Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.DemuxSource"
        },
        "hspSource": {
          "description": "HSP Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.HspSource"
        },
        "ipSource": {
          "description": "IP setting of Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.IPSource"
        },
        "mpegPrograms": {
          "type": "array",
          "description": "Information of MPEG Programs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MpegProgram"
          }
        },
        "probingDurationInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Probing duration used for discovery in milliseconds"
        },
        "rfsource": {
          "description": "RF Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.RFSource"
        },
        "sourceType": {
          "type": "string",
          "description": "Type of source",
          "enum": [
            "IP",
            "ZIXI",
            "SRT",
            "HSP",
            "CLOUD",
            "RF",
            "DEMUX"
          ]
        },
        "srtSource": {
          "description": "SRT Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.SrtSource"
        },
        "zixiSource": {
          "description": "Zixi Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.ZixiSource"
        }
      },
      "name": "MediaInfoProbeResult"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedHlsResource$HlsDrm": {
      "properties": {
        "indexPlaylistTags": {
          "type": "array",
          "description": "The indexPlaylistTags of HlsDrm",
          "items": {
            "type": "string"
          }
        },
        "keyAttributes": {
          "type": "array",
          "description": "The keyAttributes of HlsDrm",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedHlsResource$KeyAttribute"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of HlsDrm"
        },
        "playReadyHeaderObject": {
          "description": "The playReadyHeaderObject of HlsDrm",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.PlayReadyHeaderObject"
        },
        "systemId": {
          "type": "string",
          "description": "The systemId of HlsDrm"
        },
        "variantPlaylistTags": {
          "type": "array",
          "description": "The variantPlaylistTags of HlsDrm",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "HlsDrm"
    },
    "com.harmonicinc.vos.app.monitor.model.DataProfileStatus": {
      "required": [
        "bitrate",
        "ccToDvbSubtitleConversion",
        "teletextToDvbSubtitleConversion"
      ],
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Output data bitrate"
        },
        "ccToDvbSubtitleConversion": {
          "type": "boolean",
          "description": "Output data with cc to dvb subtitle conversion enabled"
        },
        "teletextToDvbSubtitleConversion": {
          "type": "boolean",
          "description": "Output data with teletext to dvb subtitle conversion enabled"
        }
      },
      "name": "DataProfileStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.Addons": {
      "properties": {
        "affiliateAddon": {
          "description": "Affiliate add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.AffiliateAddon"
        },
        "broadcasterIdAddon": {
          "description": "BroadcasterId add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.BroadcasterIdAddon"
        },
        "captionsAddon": {
          "description": "Captions addon",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.CaptionsAddon"
        },
        "casAddon": {
          "description": "CAS add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.CasAddon"
        },
        "demuxAddon": {
          "description": "Demux add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DemuxAddon"
        },
        "drmAddon": {
          "description": "DRM add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DrmAddon"
        },
        "easPropertiesAddon": {
          "description": "Emergency Alert System related properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.EasPropertiesAddon"
        },
        "inputMonitoringAddon": {
          "description": "Input Monitoring add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.InputMonitoringAddon"
        },
        "kantarSnapWatermarkAddon": {
          "description": "KantarSnapWatermark add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.KantarSnapWatermarkAddon"
        },
        "liveEventAddon": {
          "description": "Live Event add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.LiveEventAddon"
        },
        "logoAddon": {
          "description": "Logo insertion add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.LogoAddon"
        },
        "muxAddon": {
          "description": "Mux add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.MuxAddon"
        },
        "nielsenWatermarkAddon": {
          "description": "NielsenWatermark add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.NielsenWatermarkAddon"
        },
        "operatorActionAddon": {
          "description": "Operation action add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.OperatorActionAddon"
        },
        "parentalControlAddon": {
          "description": "Parental Control add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon"
        },
        "playoutSettingsAddon": {
          "description": "Playout settings addon",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.PlayoutSettingsAddon"
        },
        "scheduler360Addon": {
          "description": "Scheduler360 add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Scheduler360Addon"
        },
        "scte35SlateAddon": {
          "description": "Configurations for SCTE35-triggered slates. If this object and all its compulsory fields are present, then SCTE-35 slate will be enabled.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Scte35SlateAddon"
        },
        "slateWatermarkAddon": {
          "description": "Slate A/B Watermark add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.SlateWatermarkAddon"
        },
        "synamediaWatermarkAddon": {
          "description": "SynamediaWatermark add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.SynamediaWatermarkAddon"
        },
        "thumbnailExporterAddon": {
          "description": "Export output thumbnail add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ThumbnailExporterAddon"
        },
        "timeAdjustment": {
          "description": "Time Adjustment add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimeAdjustmentAddon"
        },
        "timeAdjustmentAddon": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimeAdjustmentAddon"
        },
        "timedEventAddon": {
          "description": "Timed Event add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimedEventAddon"
        },
        "trafficAddon": {
          "description": "Traffic add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TrafficAddon"
        },
        "videoInsertionAddon": {
          "description": "Video insertion add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.VideoInsertionAddon"
        }
      },
      "name": "Addons"
    },
    "com.harmonicinc.vos.labwizard.rest.model.CcToDvbSubtitleConversionProperties": {
      "properties": {
        "bkgTransparency": {
          "type": "integer",
          "format": "int32",
          "description": "Background transparency (range: 0-100, default: 100)"
        },
        "dvbPageTimeout": {
          "type": "number",
          "format": "double",
          "description": "Specifies the DVB PageTimeOut value (integer value in sec)"
        },
        "font": {
          "type": "string",
          "description": "Font name (default: dejavu)"
        },
        "fontDensity": {
          "type": "number",
          "format": "double",
          "description": "Horizontal font density"
        },
        "forceDdsOn": {
          "type": "boolean",
          "description": "Display Definition Segment flag (default: false)"
        },
        "frameSize": {
          "type": "string",
          "description": "Subtitle frame size (default: e_FOLLOW_OUTPUT)",
          "enum": [
            "e_1920x1080",
            "e_1280x720",
            "e_720x576",
            "e_720x480",
            "e_FOLLOW_OUTPUT"
          ]
        },
        "language": {
          "type": "string",
          "description": "Subtitle language (default:ENG)",
          "enum": [
            "ENG",
            "DEU",
            "SWE",
            "FIN",
            "HUN",
            "ITA",
            "FRA",
            "POR",
            "SPA",
            "CES",
            "SLK",
            "POL",
            "TUR",
            "SRP",
            "HRV",
            "SLV",
            "RON",
            "EST",
            "LAV",
            "LIT",
            "RUS",
            "BUL",
            "UKR",
            "ELL",
            "ARA",
            "HEB"
          ]
        },
        "pageId": {
          "type": "integer",
          "format": "int32",
          "description": "Page ID (range: 0-255, default: 0)"
        },
        "subtitleType": {
          "type": "string",
          "description": "Output DVB subtitle descriptor type (default: e_NORMAL_0x10)",
          "enum": [
            "e_NORMAL_0x10",
            "e_NORMAL_4_3_0x11",
            "e_NORMAL_16_9_0x12",
            "e_NORMAL_2_21_1_0x13",
            "e_NORMAL_HD_0x14",
            "e_HEARING_0x20",
            "e_HEARING_4_3_0x21",
            "e_HEARING_16_9_0x22",
            "e_HEARING_2_21_1_0x23",
            "e_HEARING_HD_0x24"
          ]
        },
        "txtOutlineWidth": {
          "type": "number",
          "format": "double",
          "description": "Outline width in pixel (range: 0.0-10.0, default: 0)"
        }
      },
      "name": "CcToDvbSubtitleConversionProperties"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.PerPackageDrmTrackFilter": {
      "properties": {
        "drmTrackFilter": {
          "type": "string"
        },
        "publishName": {
          "type": "string"
        }
      },
      "name": "PerPackageDrmTrackFilter"
    },
    "com.harmonicinc.vos.app.configure.model.service.DrmAddon": {
      "required": [
        "customKeyRotationTime",
        "enable",
        "settings"
      ],
      "properties": {
        "customKeyRotationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Custom key rotation start time in UTC, represented in format of yyyy-MM-ddThh:mm:ssZ (e.g. 2021-03-04T12:34:56Z)"
        },
        "enable": {
          "type": "boolean",
          "description": "Switch for turn on or off DRM"
        },
        "settings": {
          "type": "array",
          "description": "List of DRM Settings",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DrmAddon$DrmSetting"
          }
        }
      },
      "name": "DrmAddon"
    },
    "com.harmonicinc.vos.app.configure.model.source.ISO639Descriptor": {
      "required": [
        "iso639DescriptorData"
      ],
      "properties": {
        "iso639DescriptorData": {
          "type": "array",
          "description": "Data of ISO639 Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ISO639DescriptorData"
          }
        }
      },
      "name": "ISO639Descriptor"
    },
    "com.harmonicinc.vos.app.atm.datatypes.IndexRange": {
      "properties": {
        "maxIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Settings of max index, the index is one-based."
        },
        "minIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Settings of min index, the index is one-based."
        },
        "type": {
          "type": "string",
          "description": "Type of packaging",
          "enum": [
            "HLS",
            "DASH",
            "SS"
          ]
        }
      },
      "name": "IndexRange"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedHlsResource": {
      "properties": {
        "fixedIv": {
          "type": "string",
          "description": "The fixedIv of HlsDrm"
        },
        "fixedKey": {
          "type": "string",
          "description": "The fixedIv of HlsDrm"
        },
        "fixedKeyId": {
          "type": "string",
          "description": "The fixedKeyId of HlsDrm"
        },
        "hlsDrm": {
          "description": "The hlsDrm of HlsDrm",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedHlsResource$HlsDrm"
        },
        "hlsEncryptionMode": {
          "type": "string",
          "description": "The hlsEncryptionMode of HlsDrm"
        },
        "keyUrl": {
          "type": "string",
          "description": "The keyUrl of HlsDrm"
        },
        "playReadyHeader": {
          "description": "The playReadyHeader of HlsDrm",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.PlayReadyHeaderObject"
        },
        "playReadyHeaderObject": {
          "type": "string",
          "description": "The playReadyHeaderObject of HlsDrm"
        },
        "resourceId": {
          "type": "string",
          "description": "The resourceId of HlsDrm"
        }
      },
      "name": "DrmFixedHlsResource"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestMediaInfo": {
      "properties": {
        "audioTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestAudioTrack"
          }
        },
        "audioTracksNumber": {
          "type": "integer",
          "format": "int32"
        },
        "dataTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestDataTrack"
          }
        },
        "generalTrack": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestGeneralTrack"
        },
        "invalidityReason": {
          "type": "string"
        },
        "subtitleTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitleTrack"
          }
        },
        "subtitlesTracksNumber": {
          "type": "integer",
          "format": "int32"
        },
        "videoTrack": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestVideoTrack"
        },
        "videoTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestVideoTrack"
          }
        }
      },
      "name": "RestMediaInfo"
    },
    "com.harmonicinc.vos.app.atm.rest.model.AtmAutoScalingConfig$CronTrigger": {
      "properties": {
        "desiredReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of replicas to which the resource has to be scaled between the start and end of the cron schedule."
        },
        "end": {
          "type": "string",
          "description": "Cron expression indicating the end of the cron schedule."
        },
        "start": {
          "type": "string",
          "description": "Cron expression indicating the start of the cron schedule."
        },
        "timezone": {
          "type": "string",
          "description": "The acceptable values would be a value from the IANA Time Zone Database."
        }
      },
      "name": "CronTrigger"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiInputGrooming": {
      "properties": {
        "audioGrooming": {
          "description": "Essential metadata of audio",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiAudioGrooming"
        },
        "dataGrooming": {
          "description": "Essential metadata of data services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiDataGrooming"
        },
        "videoGrooming": {
          "description": "Essential metadata of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiVideoGrooming"
        }
      },
      "name": "SdiInputGrooming"
    },
    "com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$HlsOutputPreference": {
      "properties": {
        "indexPlaylistCustomization": {
          "description": "Index Playlist customization  settings",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$IndexPlaylistCustomization"
        },
        "masterPlaylistCustomization": {
          "description": "Master Playlist customization settings",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$MasterPlaylistCustomization"
        },
        "pmtDescriptorOutputMode": {
          "type": "string",
          "description": "PMT descriptor generation mode for hls ts segments\r\n\r\n\"e_LEGACY\":Pass-through the last descriptor from the source, stream type id refer to \"Stream Type Id Table\",\r\n\r\n\"e_PASSTHROUGH\":Pass-through all descriptors from the source, pass-through stream type id from source,\r\n\r\n\"e_DVB\":Pass-through all descriptors from the source, override ATSC descriptor by generating DVB descriptor, stream type id refer to DVB scheme\r\n\r\nSpecific Customization for GPT set-top boxes, and later other similar cases\r\n\r\n\"e_NONE\": no specific settings\r\n\r\n\"e_ProMedia\": For Promedia-specific STBs (ID3 subtitles in Video segments, lower-case language code, \"imagetype\" in ID3 syntax)",
          "enum": [
            "e_LEGACY",
            "e_PASSTHROUGH",
            "e_DVB"
          ]
        },
        "specificCustomization": {
          "type": "string",
          "enum": [
            "e_NONE",
            "e_ProMedia"
          ]
        }
      },
      "name": "HlsOutputPreference"
    },
    "java.time.LocalDateTime": {
      "properties": {
        "chronology": {
          "$ref": "#/definitions/java.time.chrono.Chronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "monthValue": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "LocalDateTime"
    },
    "com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the variant channel filter. Must be unique. The number of filters is limited to 20000. Error code 500 will be returned if you try to add more."
        },
        "trimAfterSCTE35Signal": {
          "description": "Enable trimming segments AFTER a matching SCTE35 Signal.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter$SCTE35SignalMatchingConfig"
        },
        "trimAfterTime": {
          "type": "string",
          "description": "Trimming segments AFTER this time. (in RFC3339 time format)"
        },
        "trimBeforeSCTE35Signal": {
          "description": "Enable trimming segments BEFORE a matching SCTE35 Signal.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter$SCTE35SignalMatchingConfig"
        },
        "trimBeforeTime": {
          "type": "string",
          "description": "Trimming segments BEFORE this time. (in RFC3339 time format)"
        }
      },
      "name": "VariantChannelsFilter"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.GroomingEndpoint": {
      "properties": {
        "cryptoSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting"
        },
        "customUrl": {
          "type": "string"
        },
        "privateUrl": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "name": "GroomingEndpoint"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$GpiProperties": {
      "properties": {
        "edge": {
          "type": "string",
          "description": "GPI Edge type, rising or falling, configured in GPI application",
          "enum": [
            "GPI_RISING",
            "GPI_FALLING"
          ]
        },
        "name": {
          "type": "string",
          "description": "GPI Name, configured in GPI application"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "GPI extra offset in milliseconds (range 0...20000) to trigger the event start"
        }
      },
      "name": "GpiProperties"
    },
    "com.harmonicinc.vos.app.configure.model.Scte104ServerSetting": {
      "properties": {
        "validateDpiPidIndex": {
          "type": "boolean",
          "description": "Return error code 126 to alive/inject messages if DPI PID index is not used by any running service. Default is false (return 100)."
        }
      },
      "name": "Scte104ServerSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.FrameRateRange": {
      "properties": {
        "maxFrameRate": {
          "type": "integer",
          "format": "int32"
        },
        "minFrameRate": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "FrameRateRange"
    },
    "com.harmonicinc.vos.app.configure.model.service.KantarSnapWatermarkChannelConfig": {
      "properties": {
        "channelName": {
          "type": "string",
          "description": "Watermark label name to apply to the channel"
        },
        "languageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index in match-by-language mode (unused otherwise)"
        },
        "sourceLabel": {
          "type": "string",
          "description": "Source label in match-by-label mode (unused otherwise)"
        }
      },
      "name": "KantarSnapWatermarkChannelConfig"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.ZixiEndPointSetting": {
      "properties": {
        "recvAddress": {
          "type": "string",
          "description": "Receiving address of the zixi endpoint"
        },
        "recvPort": {
          "type": "integer",
          "format": "int32",
          "description": "Receiving port of the zixi endpoint"
        },
        "zixiEndpointId": {
          "type": "string",
          "description": "Id of the zixi endpoint"
        }
      },
      "name": "ZixiEndPointSetting"
    },
    "com.harmonicinc.vos.app.atm.datatypes.Profile": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "audioStreamSelections": {
          "type": "array",
          "description": "Audio Stream Selections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.AudioStreamSelection"
          }
        },
        "dvrFilterByScte35": {
          "description": "filter manifest DVR by scte35 signal. The resulting manifest is always bounded by dvrWindowSize if defined.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.DvrFilterByScte35"
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "filter manifest by DVR window size (in seconds)."
        },
        "enableAudioFilteringForPretranscodedContent": {
          "type": "boolean",
          "description": "enable to allow audio codec and bitrate filtering with pre-transcode contents. default: false or null"
        },
        "enableDeltaUpdate": {
          "type": "boolean",
          "description": "Enable delta update of manipulated manifests (support HLS only). Disabled by default."
        },
        "id": {
          "type": "string",
          "description": "id of the manifest filtering profile"
        },
        "minDvrInSecond": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum dvr window size manifest should contain (in second)"
        },
        "name": {
          "type": "string",
          "description": "name of the manifest filtering profile"
        },
        "playlistSelection": {
          "description": "compare local and alternative manifest and return the better one",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.PlaylistSelection"
        },
        "preferredLanguage": {
          "type": "string",
          "description": "Define the preferred language in three-letter language code"
        },
        "preferredVideoStreamIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Select video stream as default video, range from one to the length of video streams in original playlist"
        },
        "removeScte35Signals": {
          "type": "boolean",
          "description": "Remove SCTE35 messages in output (support HLS only). Keep SCTE35 messages by default."
        },
        "subtitleStreamSelections": {
          "type": "array",
          "description": "Subtitle Stream Selections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.SubtitleStreamSelection"
          }
        },
        "videoStreamSelections": {
          "type": "array",
          "description": "Video Stream Selections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection"
          }
        }
      },
      "name": "Profile"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputComponent": {
      "properties": {
        "extStreamType": {
          "type": "integer",
          "format": "int32"
        },
        "iso_639_code": {
          "type": "string"
        },
        "pid": {
          "type": "integer",
          "format": "int32"
        },
        "scrambled": {
          "type": "boolean"
        },
        "streamType": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "MonitorInputComponent"
    },
    "com.harmonicinc.vos.app.configure.model.destination.CloudSourceOutputSettings": {
      "properties": {
        "pipeId": {
          "type": "string",
          "description": "Lrs pipeId"
        },
        "protocol": {
          "type": "string",
          "description": "Protocol"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "regionDisplayName": {
          "type": "string",
          "description": "Region display name"
        }
      },
      "name": "CloudSourceOutputSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.SignalLossSlateSettings": {
      "properties": {
        "insertionSettings": {
          "type": "boolean",
          "description": "Enable customized insertion settings for slate and set the sampling windows to 5-second for slate insertion."
        },
        "insertionThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "A counter counts the number of 5-second windows with input errors (signal loss, video missing, scrambled PID). When this counter reaches insertionThreshold, the slate is inserted. Range [1,12]"
        },
        "resetThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "When the number of consecutive 5-second windows without error reaches resetThreshold, the counter of erroneous windows is reset. Range [1,12]"
        },
        "revertThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "A slate is removed when the number of consecutive 5-second windows without error reaches revertThreshold. Range [1,12]"
        }
      },
      "name": "SignalLossSlateSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.model.Segment": {
      "properties": {
        "markIn": {
          "type": "integer",
          "format": "int64"
        },
        "markOut": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "Segment"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$CloudfrontHeader": {
      "properties": {
        "header": {
          "type": "string"
        }
      },
      "name": "CloudfrontHeader"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.Task": {
      "properties": {
        "estimationInSec": {
          "type": "integer",
          "format": "int64"
        },
        "groomingProfile": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
        },
        "groomingProfileId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "outputsMediaInfo": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.OutputsMediaInfo"
        },
        "percentage": {
          "type": "integer",
          "format": "int32"
        },
        "profileId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "QUEUED",
            "PROCESSING",
            "FINISHED",
            "FAILED",
            "REJECTED",
            "CANCELING",
            "CANCELED"
          ]
        },
        "taskError": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.TaskError"
        },
        "taskId": {
          "type": "string"
        },
        "transcodingAttempt": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "Task"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiOverIpSource": {
      "required": [
        "ipAddress",
        "ipPort"
      ],
      "properties": {
        "disableFec": {
          "type": "boolean",
          "description": "Disable input FEC"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive input. IPv4 and IPv6 are supported"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive input"
        },
        "smpte20227Input": {
          "description": "Input parameters for 20227 input redundancy",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiOverIpInputParam"
        },
        "smpte2110TransportProperties": {
          "description": "SMPTE2110 related transport level properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110TransportProperties"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "SdiOverIpSource"
    },
    "com.harmonicinc.vos.app.configure.model.source.DataTrack": {
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "Optional Country Code to append to the Language Code"
        },
        "dataTrackStreamType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of the data stream; Stream Type defined at http://en.wikipedia.org/wiki/Program-specific_information#Elementary_stream_types"
        },
        "dpiPidIndex": {
          "type": "integer",
          "format": "int32",
          "description": "This parameter enables out-of-band SCTE-104, and provides the associated dpi_pid_index. When out-of-band SCTE-104 is enabled, in-band input SCTE-35 messages are discarded"
        },
        "dtmfSettings": {
          "description": "Optional DTMF settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DtmfSettings"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of the data stream",
          "items": {
            "type": "string"
          }
        },
        "ocrConversionBackgroundColor": {
          "type": "string",
          "description": "Specifies DVB Subtitles background color for OCR conversion "
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "PID of the stream"
        },
        "ptsSettings": {
          "description": "Optional PTS restamping properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PtsSettings"
        },
        "skipProcessing": {
          "type": "boolean",
          "description": "Indicate this data stream will not be processed and will not be mux."
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name"
        },
        "teletextToDvbSubsSetting": {
          "description": "Obsolete",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TeletextToDvbSubsSetting"
        }
      },
      "name": "DataTrack"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.DataTrack": {
      "required": [
        "streamName"
      ],
      "properties": {
        "captionServiceData": {
          "type": "array",
          "description": "Grooming settings for caption service",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.CaptionServiceDescriptorData"
          }
        },
        "dataTrackStreamType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of the data stream; Stream Type defined at http://en.wikipedia.org/wiki/Program-specific_information#Elementary_stream_types"
        },
        "dvbSubtitlingData": {
          "type": "array",
          "description": "Grooming settings for DVB subtitle",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.DvbSubtitlingDescriptorData"
          }
        },
        "dvbTtmlData": {
          "type": "array",
          "description": "Grooming settings for DVB TTML subtitle",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.ISO639DescriptorData"
          }
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "PID of the stream"
        },
        "scte27SubtitlingData": {
          "type": "array",
          "description": "Grooming settings for SCTE-27 subtitle",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.ISO639DescriptorData"
          }
        },
        "skipProcessing": {
          "type": "boolean",
          "description": "Indicate this data stream will not be processed and will not be mux."
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name to insert to HLS/DASH/CMAF manifest"
        },
        "teletextData": {
          "type": "array",
          "description": "Grooming settings for teletext",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.TeletextDescriptorData"
          }
        }
      },
      "name": "DataTrack"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Resolution": {
      "required": [
        "height",
        "width"
      ],
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of resolution"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of resolution"
        }
      },
      "name": "Resolution"
    },
    "com.harmonicinc.vos.app.monitor.model.ToggleDrmState": {
      "required": [
        "drmControlState",
        "timeToProcessChangeInUtc"
      ],
      "properties": {
        "drmControlState": {
          "type": "string",
          "description": "Control state of DRM. DEFAULT means to follow existing DRM configuration. FORCE_UNENCRYPTED means to disable DRM for packaging (only support for CMAF packaging profile)",
          "enum": [
            "DEFAULT",
            "FORCE_UNENCRYPTED"
          ]
        },
        "timeToProcessChangeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Time (in UTC) to enable/disable DRM, represented in format of yyyy-MM-ddThh:mm:ssZ (e.g. 2021-03-04T12:34:56z)"
        }
      },
      "name": "ToggleDrmState"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$Scte35Properties": {
      "properties": {
        "matchSignal": {
          "description": "Scte35 message match properties (asserts) for this trigger configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$Scte35Match"
        },
        "source": {
          "description": "Input Source properties for this trigger configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$Scte35Source"
        }
      },
      "name": "Scte35Properties"
    },
    "com.harmonicinc.vos.app.configure.model.SrtCloudInputSettings": {
      "properties": {
        "connectionMode": {
          "type": "string",
          "description": "Srt connection mode",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "encryptionParam": {
          "description": "Encryption param",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtEncryptionParams"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency"
        },
        "srtConnectionInfo": {
          "description": "Information about connection to cloud endpoint",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtConnectionInfo"
        },
        "srtConnectionSettingsList": {
          "type": "array",
          "description": "Srt connection settings list",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtConnectionSettings"
          }
        }
      },
      "name": "SrtCloudInputSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.model.GeoBlockingProperties": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Deprecated"
        },
        "geoBlockingMode": {
          "type": "string",
          "description": "Deprecated",
          "enum": [
            "ALLOW",
            "PROHIBIT"
          ]
        },
        "geoLocations": {
          "type": "array",
          "description": "Deprecated",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GeoLocation"
          }
        },
        "ipAddressWhiteList": {
          "type": "array",
          "description": "Deprecated",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "GeoBlockingProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ATSRule$AtsBitrateRule": {
      "required": [
        "maxBitrate",
        "minBitrate"
      ],
      "properties": {
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "ATS max bit rate"
        },
        "minBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "ATS min bit rate"
        }
      },
      "name": "AtsBitrateRule"
    },
    "com.harmonicinc.vos.mux.model.programlevel.OutputProgramScramblingParameters": {
      "required": [
        "enable",
        "scramblingGroup"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "enable"
        },
        "scramblingGroup": {
          "type": "string",
          "description": "scrambling group"
        }
      },
      "name": "OutputProgramScramblingParameters"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MptsDimProperties": {
      "properties": {
        "maxNbTSSource": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of TS sources initialized at startup in the range [0..50]"
        },
        "maxNbTranscodeSource": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of statmux transcoding sources initialized at startup"
        },
        "maxNbTsSrtSource": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of SRT sources initialized at startup in the range [0..50]"
        }
      },
      "name": "MptsDimProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.ScaleUpCondition": {
      "required": [
        "numConsecutiveCycles",
        "responseLatencyThreshold"
      ],
      "properties": {
        "numConsecutiveCycles": {
          "type": "integer",
          "format": "int32",
          "description": "The number of consecutive sample periods with response latency exceeding threshold that will actually trigger a scale-up"
        },
        "responseLatencyThreshold": {
          "type": "number",
          "format": "double",
          "description": "The threshold of the server response latency (Time to first response byte) to consider a scale-up"
        }
      },
      "name": "ScaleUpCondition"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.Logo": {
      "properties": {
        "graphicId": {
          "type": "string"
        },
        "horizontalOffset": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opacity": {
          "type": "integer",
          "format": "int32"
        },
        "placement": {
          "type": "string",
          "enum": [
            "TOP_LEFT",
            "TOP_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_RIGHT"
          ]
        },
        "verticalOffset": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "Logo"
    },
    "com.harmonicinc.vos.app.configure.model.source.VideoTrack": {
      "properties": {
        "afdFallback": {
          "type": "string",
          "description": "AFD Fallback",
          "enum": [
            "e_AFD_LAST_VALID_AFD",
            "e_AFD_16x9_FULL_FRAME_1000",
            "e_AFD_4x3_PILLARBOX_1001",
            "e_AFD_16x9_FULL_FRAME_PROTECTED_1010",
            "e_AFD_14x9_PILLARBOX_1011",
            "e_AFD_4x3_PILLARBOX_ALT_14x9_CENTER_1101",
            "e_AFD_16x9_FULL_FRAME_ALT_14x9_CENTER_1110",
            "e_AFD_16x9_FULL_FRAME_ALT_4x3_CENTER_1111"
          ]
        },
        "croppingSettings": {
          "description": "Specifies the region of the video to crop",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CroppingSettings"
        },
        "enableRfd": {
          "type": "boolean",
          "description": "Enable/disable RFD - Repeat Field Detection"
        },
        "frameRate": {
          "description": "Discovered frameRate of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.FrameRate"
        },
        "hasAmolLine": {
          "type": "boolean",
          "description": "Specifies the removal of AMOL or WSS line from the source video"
        },
        "inputAspectRatio": {
          "type": "string",
          "description": "InputAspectRatio of video",
          "enum": [
            "e_AUTO",
            "e_AR_AUTO_FALLBACK_4_3",
            "e_AR_AUTO_FALLBACK_16_9",
            "e_AR_4_3",
            "e_AR_16_9"
          ]
        },
        "insertNullPidOnSignalLoss": {
          "type": "boolean",
          "description": "Indicate insertion of nulls when there is video signal loss"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of the video stream",
          "items": {
            "type": "string"
          }
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of the video stream"
        },
        "resolution": {
          "description": "Discovered resolution of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Resolution"
        },
        "videoNoiseReduction": {
          "type": "string",
          "description": "Specifies noise reduction and artifact repair option reqiured",
          "enum": [
            "DISABLED",
            "AUTO_DETECT",
            "MODERATE",
            "STRONG"
          ]
        },
        "videoStreamType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of the video stream; Stream Type defined at http://en.wikipedia.org/wiki/Program-specific_information#Elementary_stream_types"
        }
      },
      "name": "VideoTrack"
    },
    "com.harmonicinc.vos.app.configure.model.destination.PsiSiTableSpoolingConfig": {
      "properties": {
        "psiSiTables": {
          "type": "array",
          "description": "Table of PSI/SI Configuration",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.PsiSiTableConfig"
          }
        }
      },
      "name": "PsiSiTableSpoolingConfig"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceElement": {
      "properties": {
        "primaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequencePrimaryElement"
          }
        },
        "sequenceData": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceProperties"
        }
      },
      "name": "SequenceElement"
    },
    "com.harmonicinc.vos.app.atm.datatypes.AudioStreamSelection$BitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int64",
          "description": "Settings of max bitrate in bps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int64",
          "description": "Settings of min bitrate in bps"
        }
      },
      "name": "BitrateRange"
    },
    "com.harmonicinc.vos.app.configure.model.source.G2OAuthConfig": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "g2oKey": {
          "type": "string"
        },
        "g2oNonce": {
          "type": "string"
        },
        "g2oVersion": {
          "type": "string"
        }
      },
      "name": "G2OAuthConfig"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.WidevineConfig": {
      "required": [
        "signer",
        "signingIv",
        "signingKey"
      ],
      "properties": {
        "signer": {
          "type": "string",
          "description": "Identifies the entity sending the message"
        },
        "signingIv": {
          "type": "string",
          "description": "Base64-encoded AES init vector used to sign request"
        },
        "signingKey": {
          "type": "string",
          "description": "Base64-encoded AES key used to sign request"
        }
      },
      "name": "WidevineConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.model.JobStatistics": {
      "properties": {
        "externalStorageUsageStatistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.ExternalStorageUsageStatistics"
        },
        "overallJobStatistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.OverallJobStatistics"
        },
        "periodicalJobStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.PeriodicalJobStatistics"
          }
        },
        "storageStatistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.StorageStatistics"
        }
      },
      "name": "JobStatistics"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputDeliveryStatus": {
      "required": [
        "deliveryType",
        "outputDeliveryIndex",
        "outputStatistic",
        "status"
      ],
      "properties": {
        "deliveryType": {
          "type": "string",
          "description": "IP output (e.g e_IP) or type of packaging profile defined at lab wizard profile (e.g. e_HLS)"
        },
        "outputDeliveryIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index of the output delivery"
        },
        "outputStatistic": {
          "type": "array",
          "description": "The output statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputStatisticEntry"
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the output of the service",
          "enum": [
            "ACTIVE",
            "STANDBY",
            "DISABLED",
            "ERROR"
          ]
        }
      },
      "name": "OutputDeliveryStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.KantarSnapWatermarkAddon": {
      "properties": {
        "audFileId": {
          "type": "string",
          "description": "Aud license file id (license with audience name/ID labels)"
        },
        "channelConfigs": {
          "type": "array",
          "description": "List of KantarSnapWatermarkChannelConfig for each Audio Profile",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.KantarSnapWatermarkChannelConfig"
          }
        },
        "licFileId": {
          "type": "string",
          "description": "LIC license file id (license to unlock the product SDK)"
        }
      },
      "name": "KantarSnapWatermarkAddon"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.G2OAuthConfig": {
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether g2o authentication is enabled"
        },
        "g2oKey": {
          "type": "string",
          "description": "Indicates the encryption format for the g2o authentication"
        },
        "g2oNonce": {
          "type": "string",
          "description": "A simple string or number that tells the origin which key to use to authenticate the request"
        },
        "g2oTimeWindow": {
          "type": "integer",
          "format": "int32",
          "description": "Allowable time difference (in second) for a request"
        },
        "g2oVersion": {
          "type": "string",
          "description": "Indicates the encryption format for the g2o authentication",
          "enum": [
            "NONE",
            "MD5",
            "MD5_1",
            "MD5_HMAC",
            "SHA1_HMAC",
            "SHA256_HMAC"
          ]
        }
      },
      "name": "G2OAuthConfig"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalMuxSetting": {
      "properties": {
        "divitrackSrtLatency": {
          "type": "integer",
          "format": "int32",
          "description": "Internal divitrack SRT latency (ms)"
        },
        "muxStatsReportingSetting": {
          "description": "mux stats reporting setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.MuxStatsReportingSetting"
        }
      },
      "name": "GlobalMuxSetting"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmSettings": {
      "properties": {
        "enableCmafKeyRotation": {
          "type": "boolean",
          "description": "Enable or disable CMAF Key Rotation"
        },
        "enableDashKeyRotation": {
          "type": "boolean",
          "description": "Enable or disable DASH Key Rotation"
        },
        "enableHlsKeyRotation": {
          "type": "boolean",
          "description": "Enable or disable HLS Key Rotation"
        },
        "enableKeyRotation": {
          "type": "boolean",
          "description": "Enable or disable key Rotation"
        },
        "enableSsKeyRotation": {
          "type": "boolean",
          "description": "Enable or disable SS Key Rotation"
        },
        "keyRotationPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Key Rotation period"
        },
        "proxyEndpoint": {
          "description": "Proxy endpoint",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.ProxyEndpoint"
        }
      },
      "name": "DrmSettings"
    },
    "com.harmonicinc.vos.app.configure.model.service.CasAddon": {
      "required": [
        "casSystems",
        "enable"
      ],
      "properties": {
        "casSystems": {
          "type": "array",
          "description": "List of Conditional Access System",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.CasAddon$CasSystem"
          }
        },
        "enable": {
          "type": "boolean",
          "description": "Enable Conditional Access System"
        }
      },
      "name": "CasAddon"
    },
    "com.harmonicinc.vos.asset.acquisition.model.TaskError": {
      "properties": {
        "description": {
          "type": "string"
        },
        "fullErrorMessage": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "name": "TaskError"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsPipeUpdateRequest": {
      "properties": {
        "customDnsName": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxOutputConnections": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pipeId": {
          "type": "string"
        }
      },
      "name": "LrsPipeUpdateRequest"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkChannel": {
      "required": [
        "channelName",
        "id",
        "label",
        "uplinkId"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "description": "Channel name for the streaming channel"
        },
        "cloudlinkOutputs": {
          "type": "array",
          "description": "List of Cloudlink outputs.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.CloudlinkOutput"
          }
        },
        "hspInputs": {
          "type": "array",
          "description": "List of Hsp inputs.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.uplinkchannel.HspInput"
          }
        },
        "id": {
          "type": "string",
          "description": "Id of the uplinkChannel"
        },
        "isPersistent": {
          "type": "boolean",
          "description": "Whether to persistent the uplink channel for database store."
        },
        "label": {
          "type": "string",
          "description": "Label of the uplinkChannel"
        },
        "sourceId": {
          "type": "string",
          "description": "Source id"
        },
        "srtInputs": {
          "type": "array",
          "description": "List of Srt inputs.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.SrtInput"
          }
        },
        "uplinkId": {
          "type": "string",
          "description": "Id of the uplink"
        },
        "uplinkInputs": {
          "type": "array",
          "description": "List of uplink inputs.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkInput"
          }
        }
      },
      "name": "UplinkChannel"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.IPSourceRange": {
      "required": [
        "ipPortRangeEnd",
        "ipPortRangeStart",
        "ipRangeEnd",
        "ipRangeStart"
      ],
      "properties": {
        "descramblingKey": {
          "type": "string",
          "description": "Descrambling key"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network Address used to receive the stream"
        },
        "ipPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "End IP Port of IP Port Range to Scan"
        },
        "ipPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "Start IP Port of IP Port Range to Scan"
        },
        "ipRangeEnd": {
          "type": "string",
          "description": "End IP Address of IP Address Range to Scan"
        },
        "ipRangeStart": {
          "type": "string",
          "description": "Start IP Address of IP Address Range to Scan"
        },
        "ssm": {
          "type": "array",
          "description": "Source Specific Address",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "IPSourceRange"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$KedaScalePolicy": {
      "required": [
        "periodSeconds",
        "type",
        "value"
      ],
      "properties": {
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of time in seconds for which the rule should hold true"
        },
        "type": {
          "type": "string",
          "description": "Allowed changed in terms of absolute number of pods or percentage of current replicas",
          "enum": [
            "PODS",
            "PERCENT"
          ]
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "No. of pods or percentage of existing replicas to scale down each time"
        }
      },
      "name": "KedaScalePolicy"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.GroomingParameters": {
      "properties": {
        "customGroomingProfile": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
        },
        "groomingProfile": {
          "type": "string"
        }
      },
      "name": "GroomingParameters"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputAudioProfile": {
      "required": [
        "bitrate",
        "codec",
        "halcenable",
        "kantarSnapWatermarkInsertionEnable",
        "nielsenWatermarkInsertionEnable",
        "passthru"
      ],
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Output audio bitrate"
        },
        "codec": {
          "type": "string",
          "description": "Output audio codec"
        },
        "halcenable": {
          "type": "boolean",
          "description": "Output audio with Harmonic ALC enabled"
        },
        "kantarSnapWatermarkInsertionEnable": {
          "type": "boolean",
          "description": "Output audio with Kantar Snap Watermark enabled"
        },
        "nielsenWatermarkInsertionEnable": {
          "type": "boolean",
          "description": "Output audio with Nielsen Watermark enabled"
        },
        "passthru": {
          "type": "boolean",
          "description": "Output audio passthrough mode"
        }
      },
      "name": "OutputAudioProfile"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.CloudlinkOutput": {
      "required": [
        "id",
        "ipOutputs",
        "liveUrl"
      ],
      "properties": {
        "customHeaders": {
          "type": "array",
          "description": "Custom headers",
          "items": {
            "type": "string"
          }
        },
        "encapsulationMode": {
          "type": "string",
          "description": "UDP or RTP encapsulation mode",
          "enum": [
            "e_UDP",
            "e_RTP"
          ]
        },
        "fecColumnOnly": {
          "type": "boolean",
          "description": "FEC mode"
        },
        "fecColumns": {
          "type": "integer",
          "format": "int32",
          "description": "FEC columns"
        },
        "fecEnabled": {
          "type": "boolean",
          "description": "FEC state"
        },
        "fecRows": {
          "type": "integer",
          "format": "int32",
          "description": "FEC rows"
        },
        "id": {
          "type": "string",
          "description": "Destination output id"
        },
        "ipOutputs": {
          "type": "array",
          "description": "Destination IP address",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.uplinkchannel.impl.IpOutput"
          }
        },
        "liveUrl": {
          "type": "string",
          "description": "Live URL"
        },
        "refOutId": {
          "type": "string",
          "description": "Id of corresponding Configure destination object"
        }
      },
      "name": "CloudlinkOutput"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DashPackagingProperties": {
      "required": [
        "audioSegmentLength",
        "dvrWindowSize",
        "enableKeyRotation",
        "enableOutputTtml",
        "enableOutputWebvtt",
        "enablePackageBasedKeyRotation",
        "encryptionMethod",
        "keyChangePeriod",
        "mediaPresentationProfile",
        "mpdFileName",
        "representationIdPattern",
        "segmentRetentionPeriod",
        "videoSegmentLength"
      ],
      "properties": {
        "adaptationSetIdPattern": {
          "type": "string",
          "description": "The pattern for generating the AdaptationSet ID in MPD document.The following patterns are supported:%mediaType - stream media type, %index - numbers in order"
        },
        "altWatermarkOutputPrefix": {
          "type": "string",
          "description": "Alternative watermark output prefix, all the manifest and segments will be appended with this prefix."
        },
        "audioSegmentLength": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) The duration of the audio segment files (expressed in seconds)."
        },
        "audioSegmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) The duration of the audio segment files (expressed in milliseconds)."
        },
        "availabilityStartTimeOffsetInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Offset (in milliseconds) applied to MPD@availabilityStartTime"
        },
        "availabilityTimeOffset": {
          "type": "integer",
          "format": "int32",
          "description": "The availability time offset property (expressed in milliseconds) for DASH chunked CMAF low-latency mode.\nWill be calculated automatically if -1 is set."
        },
        "chunkDurationInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the CMAF chunk in milliseconds."
        },
        "closedCaptionHandling": {
          "type": "array",
          "description": "The way to handle closed caption. Can be passthrough and/or converted to SMPTE-TT and/or converted to WebVTT. Empty list implies to ignore closed caption.",
          "items": {
            "type": "string",
            "enum": [
              "e_PASSTHROUGH",
              "e_TO_SMPTE_TT",
              "e_TO_WEBVTT"
            ]
          }
        },
        "disableHdrEssentialProperty": {
          "type": "boolean",
          "description": "Disable EssentialProperty from DASH Manifest"
        },
        "disableRawLines": {
          "type": "boolean",
          "description": "Disable usage of Raw lines PSM and split lines algo for OCR"
        },
        "dvbSubtitleHandling": {
          "type": "array",
          "description": "The way to handle DVB subtitle. Can be converted to SMPTE-TT and/or converted to WebVTT thanks to OCR and/or converted to SMPTE-TT text based thanks to OCR. Empty list implies to ignore DVB subtitle.",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_SMPTE_TT",
              "e_TO_WEBVTT_OCR",
              "e_TO_SMPTE_TT_TEXT_OCR"
            ]
          }
        },
        "dvbTtmlHandling": {
          "type": "array",
          "description": "The way to handle DVB TTML. Can be converted to SMPTE-TT. Empty list implies to ignore DVB TTML.",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_SMPTE_TT"
            ]
          }
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control of the availability of media segment files most recently added to the Media Presentation Description (MPD) file (expressed in seconds)."
        },
        "enableAMSPlayerBehavior": {
          "type": "boolean",
          "description": "Enable AMS Player behavior"
        },
        "enableChunkedCMAF": {
          "type": "boolean",
          "description": "Enable chunked CMAF for Dash to support low latency OTT delivery"
        },
        "enableCommonSegmentUrlDelivery": {
          "type": "boolean",
          "description": "Enable common segment URL delivery."
        },
        "enableCountryCode": {
          "type": "boolean",
          "description": "Use ISO Country Code in language identification"
        },
        "enableEarlyAvailablePeriod": {
          "type": "boolean",
          "description": "Specify is Early Available Periods enabled, if so, in low latency mode scte35 will be inserted into manifest as Early Available Period"
        },
        "enableFillGapNearPeriodStart": {
          "type": "boolean",
          "description": "Enable CMAF DASH period alignment"
        },
        "enableKeyRotation": {
          "type": "boolean",
          "description": "Enable key rotation."
        },
        "enableOttWatermark": {
          "type": "boolean",
          "description": "(Deprecated) Enable OTT watermarking. When this parameter is true, two set of AB outputs will be generated with only filename difference."
        },
        "enableOutputTtml": {
          "type": "boolean",
          "description": "(Deprecated) Enable Ttml output for Dash"
        },
        "enableOutputWebvtt": {
          "type": "boolean",
          "description": "(Deprecated) Enable Webvtt output for Dash"
        },
        "enablePackageBasedKeyRotation": {
          "type": "boolean",
          "description": "Override the DRM global setting and enable customized per Package output key rotation setting"
        },
        "enableThumbnailGeneration": {
          "type": "boolean",
          "description": "Enable thumbnail generation"
        },
        "enableWebVttSourcePositioning": {
          "type": "boolean",
          "description": "Enable source positioning for WebVTT"
        },
        "enableWebVttStyling": {
          "type": "boolean",
          "description": "Enable styling for WebVTT"
        },
        "encryptionMethod": {
          "type": "string",
          "description": "Specify which encryption method should be used when integrate with DRM.",
          "enum": [
            "e_PLAYREADY",
            "e_WIDEVINE",
            "e_CLEAR",
            "e_CENC"
          ]
        },
        "firstCodecGroupInManifest": {
          "type": "string",
          "description": "First codec group that appears in the manifest",
          "enum": [
            "e_HEVC",
            "e_AVC"
          ]
        },
        "hideLatestSegment": {
          "type": "boolean",
          "description": "Hide latest segment in SegmentationTimeline. Possibly needed if watermarking is enabled"
        },
        "imageSpriteInColumn": {
          "type": "integer",
          "format": "int32",
          "description": "Static POTF thumbnail per column in one tile"
        },
        "imageSpriteInRow": {
          "type": "integer",
          "format": "int32",
          "description": "Static POTF thumbnail per row in one tile"
        },
        "insertAdaptationSetId": {
          "type": "boolean",
          "description": "Include the Id attribute to the AdaptionSet element in MPD document"
        },
        "insertAudioChannelConfiguration": {
          "type": "boolean",
          "description": "Include the AudioChannelConfiguration tag to the AAC Adaption Set."
        },
        "insertAudioRole": {
          "type": "boolean",
          "description": "Include the AudioRole tag to the audio Adaption Set. Used only if mediaPresentationProfile is e_ISO_LIVE"
        },
        "insertContentType": {
          "type": "boolean",
          "description": "Include the ContentType attribute to the AdaptionSet element in MPD document"
        },
        "insertDefaultKIDToManifest": {
          "type": "boolean",
          "description": "Insert default Key ID to manifest. Default value is false."
        },
        "insertLabelElement": {
          "type": "boolean",
          "description": "Insert Label element to Adaptation Set in DASH manifest."
        },
        "insertParAndSarAttributesInMpd": {
          "type": "boolean",
          "description": "Include AdaptationSet@par and Representation@sar attributes in DASH manifest."
        },
        "insertPrftToManifest": {
          "type": "boolean",
          "description": "Insert ProducerReferenceTime to manifest."
        },
        "insertPrftToTimeshiftManifest": {
          "type": "boolean",
          "description": "Insert ProducerReferenceTime to Timeshift manifest"
        },
        "keyChangePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The key change period for key rotation (expressed in seconds)."
        },
        "keyRotationSignalling": {
          "type": "string",
          "description": "Configuration of key rotation signalling:\n - MANIFEST_BASED_SINGLE_PERIOD (Manifest-based, Single Period) \n- IN_BAND (Segment-based, Single Period)\nDefault: MANIFEST_BASED_SINGLE_PERIOD",
          "enum": [
            "MANIFEST_BASED_SINGLE_PERIOD",
            "IN_BAND"
          ]
        },
        "latencyMax": {
          "type": "integer",
          "format": "int32",
          "description": "Service Description: the service provider’s indication about the maximum presentation latency in milliseconds."
        },
        "latencyMin": {
          "type": "integer",
          "format": "int32",
          "description": "Service Description:: the service provider’s indication about the minimum presentation latency in milliseconds."
        },
        "latencyTarget": {
          "type": "integer",
          "format": "int32",
          "description": "Service Description: the service provider’s preferred presentation latency in milliseconds compared to the producer reference time."
        },
        "maxSegmentDurationSignaling": {
          "type": "string",
          "description": "Include the MaxSegmentDuration tag to the Media Presentation Description (MPD) file. Used only if segmentTemplateType is e_TIME_BASED",
          "enum": [
            "e_NONE",
            "e_STANDARD"
          ]
        },
        "mediaPresentationProfile": {
          "type": "string",
          "description": "The profile used for generating Media Presentation Description (MPD) file that enables interoperability and signaling use of features in a Media Presentation.\r\n\r\nThe following types are supported:\r\nISO Live: refers to the ISO/IEC 23009-1, 8.4 ISO Base media file format live profile.\r\nHbbTV ISO BMFF Live: refers to HbbTV ISOBMFF defined in HbbTV 1.5 specification.\r\nDVB DASH Live: refers to ETSI TS 103 285 (MPEG-DASH Profile for Transport of ISO BMFF Based DVB Services over IP Based Networks) specification ",
          "enum": [
            "e_ISO_LIVE",
            "e_HBBTV_ISOBMFF_LIVE",
            "e_DVB_DASH_LIVE",
            "e_ATSC3_LIVE"
          ]
        },
        "minBufferTimeInMs": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum buffer time of dash manifest."
        },
        "minimumUpdatePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum update period of dash manifest."
        },
        "mpdAccessibilityComplianceMode": {
          "type": "string",
          "description": "Change the Accessibility tag compliance in the Media Presentation Description (MPD). Used to switch to DASH-IF compliance mode",
          "enum": [
            "e_DVB_DASH",
            "e_DASH_IF",
            "e_BYTEL"
          ]
        },
        "mpdFileName": {
          "type": "string",
          "description": "The name of Media Presentation Description (MPD) file which is used to describe a Media Presentation."
        },
        "parentalControlSignaling": {
          "type": "string",
          "description": "Specify which parental control signal should be used.",
          "enum": [
            "e_TTML",
            "e_EMSG"
          ]
        },
        "passThroughParameterSets": {
          "type": "boolean",
          "description": "Pass-through Parameter Sets. When this parameter is true, the video parameter sets store in the sample entry and the samples, and the sample entry name is 'hev1' for HEVC or 'avc3' for AVC. Otherwise, the video parameter sets store only in the sample entry, and the sample entry name is 'hvc1' for HEVC or 'avc1' for AVC."
        },
        "playbackRateMax": {
          "type": "number",
          "format": "double",
          "description": "Service Description:: the maximum playback rate that the content provider indicates is appropriate for the purposes of automatically adjusting playback latency and buffer occupancy during normal playback, where 1.0 is normal playback speed."
        },
        "playbackRateMin": {
          "type": "number",
          "format": "double",
          "description": "Service Description:: the minimum playback rate that the content provider indicates is appropriate for the purposes of automatically adjusting playback latency and buffer occupancy during normal playback, where 1.0 is normal playback speed."
        },
        "relativePathSegmentTemplate": {
          "type": "string",
          "description": "Relative or absolute path in segment template",
          "enum": [
            "e_AUTO",
            "e_TRUE",
            "e_FALSE"
          ]
        },
        "representationIdPattern": {
          "type": "string",
          "description": "The pattern for generating the Representation ID which is used in the Media Presentation Description (MPD) for each encoded version of video/audio.\r\n\r\nThe following patterns are supported:\r\n%starttimeitem4The start time of the Publishing session\r\n%streamIditem4Stream ID\r\n%PIDitem4PID\r\n%bitrate - bitrate of the representation"
        },
        "scopeSchemeIdUri": {
          "type": "string",
          "description": "Service Description: Scope element SchemeIdUri"
        },
        "scopeValue": {
          "type": "string",
          "description": "Service Description: Scope element Value"
        },
        "scte27SubtitleHandling": {
          "type": "array",
          "description": "The way to handle SCTE-27 subtitles. Can be converted to SMPTE-TT. Empty list implies to ignore SCTE-27 subtitle.",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_SMPTE_TT",
              "e_TO_WEBVTT_OCR",
              "e_TO_SMPTE_TT_TEXT_OCR"
            ]
          }
        },
        "scte35CIDPassthrough": {
          "type": "boolean",
          "description": "Enable SCTE35 ContentID Handling. When this parameter is true, the Content ID signal will be pass-through by inserting a event message with base64 string on the manifest."
        },
        "scte35Carriage": {
          "type": "array",
          "description": "Obsolete",
          "items": {
            "type": "string",
            "enum": [
              "e_INBAND_SEGMENT_BINARY",
              "e_IN_MPD_BASE64"
            ]
          }
        },
        "scte35CreateNewPeriodForNbcOverlayPlacement": {
          "type": "boolean",
          "description": "Creation of a new period for Overlay Placement SCTE-35 messages in NBC mode."
        },
        "scte35DefaultAutoReturnDuration": {
          "type": "integer",
          "format": "int32",
          "description": "SCTE-35 Default Auto-return Duration, for HARMONIC handling mode only."
        },
        "scte35GenericProperties": {
          "description": "SCTE-35 Generic Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Scte35GenericProperties"
        },
        "scte35Signaling": {
          "type": "string",
          "description": "The way of handling SCTE35 messages. 'NONE' means ignoring the messages; 'BASE64' means writing the SCTE35 data to playlist in base64 format; 'HARMONIC' means writing the SCTE35 data to playlist in Harmonic Inc defined SCTE35 format. Default is 'NONE'",
          "enum": [
            "e_NONE",
            "e_BASE64",
            "e_HARMONIC",
            "e_NBC",
            "e_GENERIC"
          ]
        },
        "segmentFileExtension": {
          "type": "string",
          "description": "Segment file extension",
          "enum": [
            "e_M4V_M4A",
            "e_MP4",
            "e_MP4_ALL"
          ]
        },
        "segmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the media segment files (expressed in milliseconds)."
        },
        "segmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the media segment files actually retain in the publishing server (expressed in minutes)."
        },
        "segmentTemplateType": {
          "type": "string",
          "description": "The type of segment template for constructing segment URL. 'TIME_BASED' means time-based segment template; 'NUMBER_BASED' means number-based segment template. Default is 'TIME_BASED'",
          "enum": [
            "e_TIME_BASED",
            "e_NUMBER_BASED"
          ]
        },
        "serviceDescription": {
          "type": "boolean",
          "description": "Add Service Description in manifest. It allows to sync all the players (supporting low-latency) to a similar latency, based on the PRFT value."
        },
        "suggestedPresentationDelayMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The suggested presentation delay is to let the player to play behind the live point (expressed in milliseconds) to encounter buffer issues.\nOptimal value will be used if -1 is set.\nDefault value is -1."
        },
        "teletextHandling": {
          "type": "array",
          "description": "The way to handle teletext. Can be converted to WebVTT and/or converted to SMPTE-TT. Empty list implies to ignore DVB subtitle.",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_WEBVTT",
              "e_TO_SMPTE_TT"
            ]
          }
        },
        "thumbnailHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Thumbnail height"
        },
        "ttmlTemplate": {
          "type": "string",
          "description": "The TTML template. String in XML that allows to control how output TTML looks like."
        },
        "useAbsoluteTimestamps": {
          "type": "boolean",
          "description": "Property to control the availability start time. Default value is false."
        },
        "usePtsAsPto": {
          "type": "boolean",
          "description": "Use PTS as PTO in DASH manifest"
        },
        "utcTimingSchemeIdUri": {
          "type": "string",
          "description": "UTCTiming element SchemeIdUri, this element will be added in Dash manifest to help synchronize Dash client with the server",
          "enum": [
            "e_NONE",
            "e_HTTP_XSDATE",
            "e_HTTP_ISO",
            "e_HTTP_NTP",
            "e_NTP",
            "e_HTTP_HEAD"
          ]
        },
        "utcTimingValue": {
          "type": "string",
          "description": "UTCTiming element Value, available if UtcTimingSchemeIdUri is not 'None'"
        },
        "videoAdaptationSetGrouping": {
          "type": "array",
          "description": "Video Adaptation Set Grouping configuration",
          "items": {
            "type": "string",
            "enum": [
              "BY_CODEC"
            ]
          }
        },
        "videoSegmentLength": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) The duration of the video segment files (expressed in seconds)."
        },
        "videoSegmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) The duration of the video segment files (expressed in milliseconds)."
        }
      },
      "name": "DashPackagingProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$HeaderAuthConfig": {
      "properties": {
        "matchAny": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$HeaderAuthConfig$HeaderParam"
          }
        }
      },
      "name": "HeaderAuthConfig"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequencePrimaryElement": {
      "properties": {
        "primaryData": {
          "description": "primary event properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequencePrimaryProperties"
        },
        "secondaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequenceSecondaryElement"
          }
        }
      },
      "name": "InsertSequencePrimaryElement"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.RFSource": {
      "required": [
        "adapter",
        "frontend",
        "rfdeliverySystemType"
      ],
      "properties": {
        "adapter": {
          "type": "integer",
          "format": "int32",
          "description": "Adapter, corresponds to tuner Ids (adapter 0 is tuner 1)"
        },
        "frontend": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend"
        },
        "rfdeliverySystemType": {
          "type": "string",
          "description": "RF Delivery System",
          "enum": [
            "DVBT",
            "DVBT2",
            "DVBS",
            "DVBS2",
            "ATSCT"
          ]
        }
      },
      "name": "RFSource"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DataStream": {
      "properties": {
        "dataStreamType": {
          "type": "string",
          "description": "Type of data stream",
          "enum": [
            "SCTE27",
            "SCTE35",
            "DVB_SUBTITLING",
            "TELETEXT",
            "ID3",
            "ARIB37",
            "DVB_TTML",
            "ST2038",
            "UNKNOWN"
          ]
        },
        "descriptors": {
          "type": "array",
          "description": "Descriptors of data stream",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Descriptor"
          }
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Max Bitrate of data stream"
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of data stream"
        },
        "pmtStreamType": {
          "type": "integer",
          "format": "int32",
          "description": "Num value of dataStreamtype from PMT"
        },
        "scrambled": {
          "type": "boolean",
          "description": "Scrambled status of data stream"
        }
      },
      "name": "DataStream"
    },
    "com.harmonicinc.vos.app.configure.model.SourceFailoverCondition": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Specify type of SourceFailoverCondition required to support. Note: PID_MISSING may be set to detect a video missing PID or a video decoding issue",
          "enum": [
            "PID_MISSING",
            "PCR_MISSING",
            "CC_ERROR",
            "SCRAMBLED_PID",
            "AUDIO_PID_MISSING"
          ]
        }
      },
      "name": "SourceFailoverCondition"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertSecondaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "File name for the graphic to be played, the filename extension is optional"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the graphic, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "Name of the grooming profile to be used, allows the audio tracks of a .wav file to be selected. Grooming profiles are defined in the Asset Acquisition application"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss), only used when the end mode is Duration"
        },
        "endMode": {
          "type": "string",
          "description": "Determines how the end timing for the secondary event will be calculated. DURATION secondary event will end at the secondary start time + duration, OFFSETFROMEND secondary will end at an offset from the end time of the primary event, NOEND secondary will be terminated by a future secondary event on the same layer",
          "enum": [
            "OFFSETFROMEND",
            "DURATION",
            "NOEND"
          ]
        },
        "endOffset": {
          "type": "string",
          "description": "End offset, ([+-]hh:mm:ss.sss), only used when the end mode is OffsetFromEnd. Can be positive or negative, blank or empty is interpreted as zero offset"
        },
        "layer": {
          "type": "integer",
          "format": "int32",
          "description": "Layer used for the logo/graphics, 1 to 8. If missing, the value 1 is used. When graphics overlap, the graphic on the higher layer has priority"
        },
        "startMode": {
          "type": "string",
          "description": "Indicates how the start timing for the secondary event will be calculated, offset from the start or end of the primary event",
          "enum": [
            "OFFSETFROMSTART",
            "OFFSETFROMEND"
          ]
        },
        "startOffset": {
          "type": "string",
          "description": "Start offset ([+-]hh:mm:ss.sss), only used when the start mode is OffsetFromStart. Can be positive or negative, blank or empty is interpreted as zero offset"
        },
        "stopAnimationLeadTime": {
          "type": "string",
          "description": "Duration of the graphic's outro sequence (hh:mm:ss.sss), applies to 3-point animation graphics. The outro will be started this time before the secondary event ends"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcEndOffset": {
          "type": "string",
          "description": "Equivalent to endOffset, but in timecode format ([+-]hh:mm:ss[:;]ff)"
        },
        "tcStartOffset": {
          "type": "string",
          "description": "Equivalent to startOffset, but in timecode format ([+-]hh:mm:ss[:;]ff)"
        },
        "tcStopAnimationLeadTime": {
          "type": "string",
          "description": "Equivalent to stopAnimationLeadTime, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "templateFields": {
          "type": "array",
          "description": "Additional information that can be passed to HTML graphic templates",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.playout.zookeeper.event.TemplateField"
          }
        }
      },
      "name": "InsertSecondaryProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AudioUpmixingProperties": {
      "properties": {
        "upmixingMode": {
          "type": "string",
          "description": "Upmixing Mode",
          "enum": [
            "e_GROUP_3_PAIRS_INTO_5_1_OUTPUT"
          ]
        }
      },
      "name": "AudioUpmixingProperties"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.ZixiEncoderSetting": {
      "properties": {
        "decryptionKey": {
          "type": "string",
          "description": "Zixi decryption key"
        },
        "decryptionType": {
          "type": "string",
          "description": "Zixi decryption type",
          "enum": [
            "NONE",
            "ZIXI_AES_128",
            "ZIXI_AES_192",
            "ZIXI_AES_256"
          ]
        },
        "zixiEndPointSetting": {
          "description": "Zixi End point setting. Only required to fill in end point Id. RecvAddress and recvPort are generated Internally",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.ZixiEndPointSetting"
        }
      },
      "name": "ZixiEncoderSetting"
    },
    "com.harmonicinc.vos.asset.acquisition.model.OutputAudioTrack": {
      "properties": {
        "audioTrackType": {
          "type": "string"
        },
        "bitrate": {
          "type": "integer",
          "format": "int64"
        },
        "bitrateMode": {
          "type": "string"
        },
        "channels": {
          "type": "string"
        },
        "codec": {
          "type": "string"
        },
        "codecSettings": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "language": {
          "type": "string"
        },
        "samplingRate": {
          "type": "string"
        }
      },
      "name": "OutputAudioTrack"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedDashResource$DashDrm": {
      "properties": {
        "clearkeyHeader": {
          "description": "The clearkeyHeader of DrmFixedDashResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.ClearkeyHeader"
        },
        "manifestHeader": {
          "type": "string",
          "description": "The manifestHeader of DrmFixedDashResource"
        },
        "name": {
          "type": "string",
          "description": "The name of DrmFixedDashResource"
        },
        "playReadyHeaderObject": {
          "description": "The playReadyHeaderObject of DrmFixedDashResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.PlayReadyHeaderObject"
        },
        "psshBox": {
          "type": "string",
          "description": "The psshBox of DrmFixedDashResource"
        },
        "systemId": {
          "type": "string",
          "description": "The systemId of DrmFixedDashResource"
        },
        "widevineCencHeader": {
          "description": "The widevineCencHeader of DrmFixedDashResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.WidevineCencHeader"
        }
      },
      "name": "DashDrm"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.UpdatePrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "endMode": {
          "type": "string",
          "description": "Specifies how the event will end (Duration or Manual)",
          "enum": [
            "DURATION",
            "MANUAL"
          ]
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "scte35WindowEnd": {
          "type": "string",
          "description": "End time of the SCTE-35 validity window (YYYY-MM-DDThh:mm:ss.sssZ), in UTC. This event and following events in the same ad pod (material type is COMMERCIAL or AVAIL, and start mode is FOLLOW) are skipped if we don't receive SCTE-35 trigger with splice-time before this time, or if we don't receive SCTE-35 trigger x seconds before this time (x is 2 seconds if the event after the ad-pod is a prepared live source, otherwise it can be up to 32 seconds). Used only when the startMode is EXTERNAL"
        },
        "scte35WindowStart": {
          "type": "string",
          "description": "Start time of the SCTE-35 validity window (YYYY-MM-DDThh:mm:ss.sssZ), in UTC. Any SCTE-35 trigger with a splice-time before this time is ignored. Used only when the startMode is EXTERNAL"
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startMode": {
          "type": "string",
          "description": "Specifies how the event will start (Fixed Time, Follow, Manual Take, or External SCTE-35 trigger)",
          "enum": [
            "FIXED",
            "FOLLOW",
            "MANUAL",
            "EXTERNAL"
          ]
        },
        "startTime": {
          "type": "string",
          "description": "Event start date/time in UTC (YYYY-MM-DDThh:mm:ss.sssZ). The start time will be automatically calculated for all events except those with Fixed start mode"
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcErrorDuration": {
          "type": "string",
          "description": "Equivalent to errorDuration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcScte35WindowEnd": {
          "type": "string",
          "description": "Equivalent to scte35WindowEnd, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcScte35WindowStart": {
          "type": "string",
          "description": "Equivalent to scte35WindowStart, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcStartTime": {
          "type": "string",
          "description": "Equivalent to startTime, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        }
      },
      "name": "UpdatePrimaryProperties"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.ClearkeyHeader": {
      "properties": {
        "laUrl": {
          "type": "string",
          "description": "URL for the key acquisition web service"
        }
      },
      "name": "ClearkeyHeader"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.HspAuthenticationHeader": {
      "required": [
        "isDirty",
        "key",
        "value"
      ],
      "properties": {
        "isDirty": {
          "type": "boolean"
        },
        "key": {
          "type": "string",
          "description": "Key"
        },
        "value": {
          "type": "string",
          "description": "Value"
        }
      },
      "name": "HspAuthenticationHeader"
    },
    "java.util.MapOfstringAndjava.util.ListOfcom.harmonicinc.vos.app.monitor.model.DataProfileStatus": {
      "type": "object",
      "name": "MapOfstringAndListOfDataProfileStatus",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "com.harmonicinc.vos.asset.acquisition.model.DrmProperties": {
      "properties": {
        "drmEnabled": {
          "type": "boolean"
        },
        "drmPropertiesEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.DrmPropertiesEntry"
          }
        }
      },
      "name": "DrmProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte2110AudioTransportProperties": {
      "required": [
        "isSmpte211031Payload",
        "numAudioChannel"
      ],
      "properties": {
        "isSmpte211031Payload": {
          "type": "boolean",
          "description": "Whether payload within audio transport is ST-2110-31 or not"
        },
        "numAudioChannel": {
          "type": "integer",
          "format": "int32",
          "description": "Number of audio channels in the transport"
        }
      },
      "name": "Smpte2110AudioTransportProperties"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates": {
      "properties": {
        "muteBackupInput": {
          "type": "boolean"
        },
        "muteGroomingOutput": {
          "type": "boolean"
        },
        "muteOutput": {
          "type": "boolean"
        },
        "mutePrimaryInput": {
          "type": "boolean"
        }
      },
      "name": "LrsMuteStates"
    },
    "com.harmonicinc.vos.app.monitor.model.LogoGroupState": {
      "required": [
        "logoSlateGroupLabel",
        "logoState"
      ],
      "properties": {
        "logoSlateGroupLabel": {
          "type": "string",
          "description": "label of the profile group to have logo inserted per profile"
        },
        "logoState": {
          "type": "string",
          "description": "Logo status of the group logoSlateGroup ",
          "enum": [
            "ON",
            "OFF"
          ]
        }
      },
      "name": "LogoGroupState"
    },
    "com.harmonicinc.vos.app.configure.model.service.OrchestrationNodeSelector": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "name": "OrchestrationNodeSelector"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$TriggerProperties": {
      "properties": {
        "gpiProperties": {
          "description": "GPI properties for this trigger configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$GpiProperties"
        },
        "scte35Properties": {
          "description": "Scte35 properties for this trigger configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$Scte35Properties"
        }
      },
      "name": "TriggerProperties"
    },
    "com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$TriggerRepublishOnEmptySchedule": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "The boolean to determine if enable trigger republish on empty schedule"
        },
        "intervalInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The interval in minutes to trigger republish on empty schedule"
        }
      },
      "name": "TriggerRepublishOnEmptySchedule"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$CacheSettings": {
      "required": [
        "ignoreCacheControlHeaderForLiveContent"
      ],
      "properties": {
        "cacheBackend": {
          "type": "string",
          "enum": [
            "DISK",
            "MEMORY"
          ]
        },
        "cacheStroageExtraSizeInMB": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "ignoreCacheControlHeaderForLiveContent": {
          "type": "boolean",
          "description": "When responding to live service requests, ignore any \"Cache-control\" HTTP header passed from upstream, so that MDS only use the \"Expires\" header for cache expiration check"
        },
        "maxSizeInMB": {
          "type": "integer",
          "format": "int32"
        },
        "nonLiveMaxSizeInMB": {
          "type": "integer",
          "format": "int32"
        },
        "separateCacheForNonLiveContent": {
          "type": "boolean"
        }
      },
      "name": "CacheSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.IP_Input": {
      "required": [
        "ipAddress",
        "ipPort"
      ],
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "descramblingKey": {
          "type": "string",
          "description": "CSA key to descramble input"
        },
        "fecEnable": {
          "type": "boolean",
          "description": "FEC 2022-1 1D colum and 2D column/line ingress recovery"
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive input. IPv4 and IPv6 are supported"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive input"
        },
        "ipPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port range end used to receive input"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "smpte20227TsInput": {
          "description": "Settings of a seamless RTP 2022-7 TS input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte20227Ts_Input"
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        },
        "tsProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the number of programs in the input TS"
        }
      },
      "name": "IP_Input"
    },
    "com.harmonicinc.vos.app.configure.model.MuxStatsReportingSetting": {
      "properties": {
        "inputPidStatsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "input pid reporting frequency in seconds [1-600]"
        },
        "inputProgramStatsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "input program reporting frequency in seconds [1-600]"
        },
        "inputTsStatsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "input ts reporting frequency in seconds [1-600]"
        },
        "outputPidStatsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "output pid reporting frequency in seconds [1-600]"
        },
        "outputProgramStatsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "output program reporting frequency in seconds [1-59]"
        },
        "outputTsStatsInterval": {
          "type": "integer",
          "format": "int32",
          "description": "output ts reporting frequency in seconds [1-600]"
        }
      },
      "name": "MuxStatsReportingSetting"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.channelmanager.ChannelGetProperties": {
      "properties": {
        "channelOverride": {
          "type": "string",
          "description": "Enable channel override on playout channel",
          "enum": [
            "NOTAVAILABLE",
            "OFF",
            "ON"
          ]
        },
        "defaultLiveSource": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.channelmanager.DefaultLiveSourceSettings"
        },
        "enableGap": {
          "type": "boolean",
          "description": "Enable gap on the playout channel"
        },
        "enableLiveSourceMonitoring": {
          "type": "boolean",
          "description": "Enable live source monitoring on the playout channel"
        },
        "liveSourceLockoutTime": {
          "type": "integer",
          "format": "int32",
          "description": "Live input lockout time, in secondes, used by the automation controls to determine live source monitoring priority"
        },
        "localTimeZone": {
          "type": "string",
          "description": "Time zone configured for the playout channel"
        },
        "playlistOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset applied to the playlist to have a short latency"
        },
        "scheduleReplacementLockoutTime": {
          "type": "integer",
          "format": "int32",
          "description": "Lockout time applied to replace a schedule"
        }
      },
      "name": "ChannelGetProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AllowedAddon": {
      "properties": {
        "isLiveEvent": {
          "type": "boolean",
          "description": "Enable/Disable Live Event service support."
        },
        "isVideoSlateInsertion": {
          "type": "boolean",
          "description": "Enable/Disable VideoSlate Insertion. When disabled, will generate alarm if VideoSlate is provisioned to the service."
        }
      },
      "name": "AllowedAddon"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.ISO639DescriptorData": {
      "properties": {
        "defaultSubtitle": {
          "type": "boolean"
        },
        "language": {
          "type": "string"
        }
      },
      "name": "ISO639DescriptorData"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DestinationProfileProperties": {
      "required": [
        "enableOttWatermark",
        "enablePushPackaging",
        "packagerClock",
        "packagingProfilePropertiesList"
      ],
      "properties": {
        "enableOttWatermark": {
          "type": "boolean",
          "description": "Enable OTT Watermarking."
        },
        "enablePushPackaging": {
          "type": "boolean",
          "description": "External push packaging endpoints can only be specified if push packaging is enabled."
        },
        "maxSourceTimeCodeOffset": {
          "type": "integer",
          "format": "int32",
          "description": "When packager clock is source timecodes , the maximum offset , in milliseconds, between source timecodes and system time. A positive value when timecode is in the past, a negative value when timecode is in the future. "
        },
        "muteOutputOnSignalLoss": {
          "type": "boolean",
          "description": "Mute packager ouput on input signal loss (do not use for a packager-only service)"
        },
        "packagerClock": {
          "type": "string",
          "description": "The originator providing source time for packager clock to follow",
          "enum": [
            "e_SYSTEM_WALL_CLOCK",
            "e_SOURCE_TIMECODES"
          ]
        },
        "packagingProfilePropertiesList": {
          "type": "array",
          "description": "The List of packaging profile properties.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PackagingProfileProperties"
          }
        },
        "timecodeLockPeriodInS": {
          "type": "integer",
          "format": "int32",
          "description": "When packager clock is source timecodes , time period in s that we wait to apply a timecode jump to wall clock."
        },
        "timecodeMaxFrameCount": {
          "type": "string",
          "description": "Applicable when packager clock is source timecodes. Defines expected max frame ticks per second for incoming timecodes (i.e. ff in hh:mm:ss:ff)",
          "enum": [
            "e_SMPTE_ST_12_1",
            "e_FRAMES_PER_SECONDS"
          ]
        },
        "timecodeThresholdInMs": {
          "type": "integer",
          "format": "int32",
          "description": "When packager clock is source timecodes , threshold in ms to apply to timecode checking, when comparing received timecode to expected timecode. To be frame accurate threshold must be set to 0 ms."
        }
      },
      "name": "DestinationProfileProperties"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequencePrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetStatus": {
          "type": "string",
          "description": "Indicates that the asset or live source is ready to play, or if there is a problem",
          "enum": [
            "UNKNOWN",
            "AVAILABLE",
            "MISSING",
            "MISSINGGROOMINGPROFILE",
            "NOTVALID",
            "NOTCOMPATIBLE",
            "RECORDSTARTTIMEERROR"
          ]
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "durationError": {
          "type": "boolean",
          "description": "True if the play offset (when relative or absolute SOM is used) + duration is greater than the asset duration, not included if false"
        },
        "errorDuration": {
          "type": "string",
          "description": "Indicates the duration of the gap or overlap error (hh:mm:ss.sss). Only present if an overlap or gap error is detected"
        },
        "eventTooShort": {
          "type": "boolean",
          "description": "True if the event duration is less than the minimum allowed (1 sec)"
        },
        "eventType": {
          "type": "string",
          "description": "Event type, File (including recorded file) or Live",
          "enum": [
            "FILE",
            "LIVE",
            "COMMENT"
          ]
        },
        "id": {
          "type": "string",
          "description": "Event id (UUID)"
        },
        "invalidFormat": {
          "type": "boolean",
          "description": "True if the framerate or resolution of the live source referenced by the event isn't compatible with the channel's framerate or resolution"
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "missingAssetDuration": {
          "type": "string",
          "description": "Indicates missing duration for the asset to fit the configured SOM and duration (hh:mm:ss.sss). Only present if a duration error is detected"
        },
        "origin": {
          "type": "string",
          "description": "Origin (creator) of the event. Events can be created by the operator or traffic/scheduling system",
          "enum": [
            "UNKNOWN",
            "TRAFFIC",
            "OPERATOR"
          ]
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somError": {
          "type": "boolean",
          "description": "True to indicate the event's SOM Type (ABSOLUTE or RELATIVE) and SOM value specify a starting position that is past the end of the asset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startTime": {
          "type": "string",
          "description": "Event start date/time in UTC (YYYY-MM-DDThh:mm:ss.sssZ). The start time will be automatically calculated for all events except those with Fixed start mode"
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcErrorDuration": {
          "type": "string",
          "description": "Equivalent to errorDuration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcStartTime": {
          "type": "string",
          "description": "Equivalent to startTime, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        }
      },
      "name": "SequencePrimaryProperties"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.SecondaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "File name for the graphic to be played, the filename extension is optional"
        },
        "assetStatus": {
          "type": "string",
          "description": "Indicates that the graphic is ready to play, or if there is a problem",
          "enum": [
            "UNKNOWN",
            "AVAILABLE",
            "MISSING",
            "MISSINGGROOMINGPROFILE"
          ]
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the graphic, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "Name of the grooming profile to be used, allows the audio tracks of a .wav file to be selected. Grooming profiles are defined in the Asset Acquisition application"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss), only used when the end mode is Duration"
        },
        "endMode": {
          "type": "string",
          "description": "Determines how the end timing for the secondary event will be calculated. DURATION secondary event will end at the secondary start time + duration, OFFSETFROMEND secondary will end at an offset from the end time of the primary event, NOEND secondary will be terminated by a future secondary event on the same layer",
          "enum": [
            "OFFSETFROMEND",
            "DURATION",
            "NOEND"
          ]
        },
        "endOffset": {
          "type": "string",
          "description": "End offset, ([+-]hh:mm:ss.sss), only used when the end mode is OffsetFromEnd. Can be positive or negative, blank or empty is interpreted as zero offset"
        },
        "id": {
          "type": "string",
          "description": "Event id (UUID)"
        },
        "layer": {
          "type": "integer",
          "format": "int32",
          "description": "Layer used for the logo/graphics, 1 to 8. If missing, the value 1 is used. When graphics overlap, the graphic on the higher layer has priority"
        },
        "origin": {
          "type": "string",
          "description": "Origin (creator) of the event. Events can be created by the operator or traffic/scheduling system",
          "enum": [
            "UNKNOWN",
            "TRAFFIC",
            "OPERATOR"
          ]
        },
        "overlapError": {
          "type": "boolean",
          "description": "Indicates there is an overlap between 2 or more events on the same layer. The error is flagged on all of the overlapping events"
        },
        "startMode": {
          "type": "string",
          "description": "Indicates how the start timing for the secondary event will be calculated, offset from the start or end of the primary event",
          "enum": [
            "OFFSETFROMSTART",
            "OFFSETFROMEND"
          ]
        },
        "startOffset": {
          "type": "string",
          "description": "Start offset ([+-]hh:mm:ss.sss), only used when the start mode is OffsetFromStart. Can be positive or negative, blank or empty is interpreted as zero offset"
        },
        "startTime": {
          "type": "string",
          "description": "Event start date/time in UTC (YYYY-MM-DDThh:mm:ss.sss). This value is calculated and cannot be edited"
        },
        "state": {
          "type": "string",
          "description": "Event execution state. IDLE for future events, ONAIR, or DONE for past events",
          "enum": [
            "UNKNOWN",
            "IDLE",
            "ONAIR",
            "DONE"
          ]
        },
        "stopAnimationLeadTime": {
          "type": "string",
          "description": "Duration of the graphic's outro sequence (hh:mm:ss.sss), applies to 3-point animation graphics. The outro will be started this time before the secondary event ends"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcEndOffset": {
          "type": "string",
          "description": "Equivalent to endOffset, but in timecode format ([+-]hh:mm:ss[:;]ff)"
        },
        "tcStartOffset": {
          "type": "string",
          "description": "Equivalent to startOffset, but in timecode format ([+-]hh:mm:ss[:;]ff)"
        },
        "tcStartTime": {
          "type": "string",
          "description": "Equivalent to startTime, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcStopAnimationLeadTime": {
          "type": "string",
          "description": "Equivalent to stopAnimationLeadTime, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "templateFields": {
          "type": "array",
          "description": "Additional information that can be passed to HTML graphic templates",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.playout.zookeeper.event.TemplateField"
          }
        },
        "timingError": {
          "type": "boolean",
          "description": "Indicates that a timing error has been detected, e.g. the secondary event's end time is before its start time"
        }
      },
      "name": "SecondaryProperties"
    },
    "com.harmonicinc.potfserver.configlib.datamodel.rest.PackageInfo": {
      "properties": {
        "format": {
          "type": "string",
          "description": "Packaging format",
          "enum": [
            "HLS",
            "DASH",
            "SS",
            "CMAF",
            "TS",
            "THUMBNAIL"
          ]
        },
        "name": {
          "type": "string",
          "description": "Package publishing name"
        },
        "playbackUrl": {
          "type": "string",
          "description": "URL for packaging output"
        }
      },
      "name": "PackageInfo"
    },
    "com.harmonicinc.vos.mux.model.unreferencedpidlevel.OutputUnreferencedPid": {
      "properties": {
        "id": {
          "type": "string"
        },
        "inputIdentifier": {
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.unreferencedpidlevel.UnreferencedPidInputIdentifier"
        },
        "outputUnreferencedPidParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.unreferencedpidlevel.OutputUnreferencedPidParameters"
        }
      },
      "name": "OutputUnreferencedPid"
    },
    "com.harmonicinc.vos.mux.model.programlevel.PmtParameters": {
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "input object id"
        },
        "inputPid": {
          "type": "integer",
          "format": "int32",
          "description": "input pid"
        },
        "pmtMode": {
          "type": "string",
          "description": "pmt mode",
          "enum": [
            "NONE",
            "GENERATE",
            "PASSTHROUGH"
          ]
        }
      },
      "name": "PmtParameters"
    },
    "com.harmonicinc.vos.app.configure.model.source.CaptionServiceDescriptor": {
      "properties": {
        "captionServiceDescriptorData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CaptionServiceDescriptorData"
          }
        }
      },
      "name": "CaptionServiceDescriptor"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAssetBase": {
      "required": [
        "ingestEndTime",
        "ingestStartTime",
        "sourceUri"
      ],
      "properties": {
        "adminState": {
          "type": "string",
          "description": "Control an asset is online (i.e. available for egress) or not. Default is ONLINE",
          "enum": [
            "ONLINE",
            "OFFLINE"
          ]
        },
        "drmSetting": {
          "description": "Encryption settings",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.DrmSetting"
        },
        "id": {
          "type": "string",
          "description": "UUID will be generated if not specified"
        },
        "ingestEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the LLCU asset, with format yyyy-MM-ddTHH:mm:ss.SSSZ"
        },
        "ingestStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the LLCU asset, with format yyyy-MM-ddTHH:mm:ss.SSSZ"
        },
        "sourceUri": {
          "type": "string",
          "description": "Service ID. The service source which LLCU asset will be extracted from"
        }
      },
      "name": "LlcuAssetBase"
    },
    "com.harmonicinc.vos.app.monitor.model.ServiceStatus": {
      "required": [
        "audioOnlyService",
        "cloudlinkGroupIds",
        "configureServiceType",
        "controlState",
        "id",
        "labels",
        "name",
        "priority",
        "serviceType"
      ],
      "properties": {
        "audioOnlyService": {
          "type": "boolean",
          "description": "Indication of an audio-only service"
        },
        "cloudlinkGroupIds": {
          "type": "array",
          "description": "List of CloudlinkGroups used in service.",
          "items": {
            "type": "string"
          }
        },
        "configureServiceType": {
          "type": "string",
          "description": "The type of the service from service configure",
          "enum": [
            "LIVE",
            "LIVE_EVENT"
          ]
        },
        "controlState": {
          "type": "string",
          "description": "The service's control state",
          "enum": [
            "ACTIVATED",
            "TEST",
            "OFF"
          ]
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a service in UUID format"
        },
        "labels": {
          "type": "array",
          "description": "List of labels.",
          "items": {
            "type": "string"
          }
        },
        "liveEventStatus": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.liveevent.model.LiveEventData"
        },
        "muteOperationData": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.MuteOperationData"
        },
        "name": {
          "type": "string",
          "description": "Display name of a service"
        },
        "operationalState": {
          "type": "string",
          "description": "The state of operation",
          "enum": [
            "OFFLINE",
            "INITIALIZING",
            "RUNNING"
          ]
        },
        "priority": {
          "type": "string",
          "description": "The service's priority",
          "enum": [
            "LOW",
            "NORMAL",
            "HIGH"
          ]
        },
        "serviceStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last start/restart time of the RmpWorker datapath. Null when the service is stopped."
        },
        "serviceType": {
          "type": "string",
          "description": "Display type of the service",
          "enum": [
            "OTT",
            "IPTV",
            "OTT_PLAYOUT",
            "MPTS"
          ]
        }
      },
      "name": "ServiceStatus"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsPipeCreateRequest": {
      "properties": {
        "backupCallerModeConfig": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.CallerModeConfig"
        },
        "callerModeConfig": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.CallerModeConfig"
        },
        "connectionMode": {
          "type": "string",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "cryptoSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxOutputConnections": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "platform": {
          "type": "string",
          "enum": [
            "AZURE_VM",
            "AWS",
            "GCP",
            "AKAMAI_LINODE"
          ]
        },
        "profileId": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "SRT",
            "RTMP"
          ]
        },
        "publicIpMode": {
          "type": "string",
          "enum": [
            "IPV4_ONLY",
            "IPV6_ONLY",
            "IPV4_IPV6"
          ]
        },
        "redundancyMode": {
          "type": "string",
          "enum": [
            "NONE",
            "ACTIVE_STANDBY",
            "ACTIVE_ACTIVE"
          ]
        },
        "region": {
          "type": "string"
        },
        "resourceMode": {
          "type": "string",
          "enum": [
            "DEDICATED",
            "SHARED"
          ]
        },
        "streamConfig": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.request.stream.StreamSettingInput"
          }
        },
        "streamCount": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        }
      },
      "name": "LrsPipeCreateRequest"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.ISO639DescriptorData": {
      "required": [
        "iso639AudioType",
        "language"
      ],
      "properties": {
        "iso639AudioType": {
          "type": "string",
          "description": "AudioType of audio stream",
          "enum": [
            "UNDEFINED",
            "CLEAN_EFFECTS",
            "HEARING_IMPAIRED",
            "VISUAL_IMPAIRED_COMMENTARY",
            "PRIMARY",
            "NATIVE"
          ]
        },
        "language": {
          "type": "string",
          "description": "Language code of stream"
        }
      },
      "name": "ISO639DescriptorData"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.connection.SrtConnectionInfo": {
      "properties": {
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Negotiated latency for feeder and receiver"
        },
        "rtt": {
          "type": "integer",
          "format": "int32",
          "description": "Round-trip time"
        }
      },
      "name": "SrtConnectionInfo"
    },
    "com.harmonicinc.vos.app.configure.model.source.FrameRate": {
      "required": [
        "denominator",
        "numerator"
      ],
      "properties": {
        "denominator": {
          "type": "integer",
          "format": "int32",
          "description": "Denominator of framerate"
        },
        "numerator": {
          "type": "integer",
          "format": "int32",
          "description": "Numerator of framerate"
        }
      },
      "name": "FrameRate"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.DiscoverySource": {
      "required": [
        "sourceType"
      ],
      "properties": {
        "cloudSource": {
          "description": "CLoud source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.CloudSource"
        },
        "creationTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Creation timestamp of Discovery Task"
        },
        "demuxSource": {
          "description": "Demux source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.DemuxSource"
        },
        "hspSource": {
          "description": "Hsp Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.HspSource"
        },
        "id": {
          "type": "string",
          "description": "Discovery ID"
        },
        "inputId": {
          "type": "string",
          "description": "Input ID"
        },
        "ipSourceRange": {
          "description": "IP Source Range",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.IPSourceRange"
        },
        "probingDurationInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Probing duration in milliseconds. Ranging from 5000 to 30000 ms. Default value is 5000 ms"
        },
        "rfsource": {
          "description": "RF source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.RFSource"
        },
        "sourceId": {
          "type": "string",
          "description": "Source ID"
        },
        "sourceType": {
          "type": "string",
          "description": "Source Type",
          "enum": [
            "IP",
            "ZIXI",
            "SRT",
            "HSP",
            "CLOUD",
            "RF",
            "DEMUX"
          ]
        },
        "srtSource": {
          "description": "SRT Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.SrtSource"
        },
        "zixiSource": {
          "description": "Zixi Source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.ZixiSource"
        }
      },
      "name": "DiscoverySource"
    },
    "com.harmonicinc.vos.app.monitor.model.Scte104ConnectionStatus": {
      "required": [
        "connections"
      ],
      "properties": {
        "connections": {
          "type": "array",
          "description": "List of SCTE-104 client connections (peer IP address and port)",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "Scte104ConnectionStatus"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.CaptionServiceDescriptor": {
      "required": [
        "captionServiceDescriptorData"
      ],
      "properties": {
        "captionServiceDescriptorData": {
          "type": "array",
          "description": "Data of Caption Service Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.CaptionServiceDescriptorData"
          }
        }
      },
      "name": "CaptionServiceDescriptor"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.region.Region": {
      "properties": {
        "apiName": {
          "type": "string",
          "description": "Region API name"
        },
        "availabilityZoneDetails": {
          "type": "array",
          "description": "List of availability zone details",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.region.AvailabilityZoneDetails"
          }
        },
        "availabilityZones": {
          "type": "array",
          "description": "List of availability zones",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name"
        },
        "platform": {
          "type": "string",
          "description": "Platform type"
        },
        "regionAZCodes": {
          "type": "array",
          "description": "List of region API names with availability zones",
          "items": {
            "type": "string"
          }
        },
        "regionID": {
          "type": "string",
          "description": "Region identifier"
        }
      },
      "name": "Region"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$EncryptionConfig": {
      "properties": {
        "kmsSendTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "How long will MDS consider the KMS-related request is timeout"
        }
      },
      "name": "EncryptionConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.TrimParameters": {
      "properties": {
        "replace": {
          "type": "boolean"
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.Segment"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "name": "TrimParameters"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.PerPackageDrmTrackFilter": {
      "required": [
        "drmTrackFilter",
        "publishName"
      ],
      "properties": {
        "drmTrackFilter": {
          "type": "string",
          "description": "DRM track filter"
        },
        "publishName": {
          "type": "string",
          "description": "Package publish name"
        }
      },
      "name": "PerPackageDrmTrackFilter"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.KeyRotationSettings": {
      "required": [
        "controller",
        "mode",
        "numberOfKeyPeriods",
        "preFetchRequestRelativeTime"
      ],
      "properties": {
        "controller": {
          "type": "string",
          "description": "Is Key period controlled by VOS or KMS ('KMS' by default). The 'controller' property is applicable only for the START_END mode.",
          "enum": [
            "KMS",
            "VOS"
          ]
        },
        "mode": {
          "type": "string",
          "description": "'INDEX' or 'START_END' ContentKeyPeriod field configuration ('INDEX' by default)",
          "enum": [
            "INDEX",
            "START_END"
          ]
        },
        "numberOfKeyPeriods": {
          "type": "integer",
          "format": "int32",
          "description": "Number of ContentKeyPeriods for CPIX request (1 by default)"
        },
        "preFetchRequestRelativeTime": {
          "type": "integer",
          "format": "int32",
          "description": "Time point (in percentages) after the the start of the first period, when new content key(s) should be pre-requested (80% by default). Currently property is applicable only for the START_END mode."
        }
      },
      "name": "KeyRotationSettings"
    },
    "com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$HorizontalResolutionRange": {
      "properties": {
        "maxHorizaontalResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Max horizontal resolution"
        },
        "minHorizaontalResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Min horizontal resolution"
        }
      },
      "name": "HorizontalResolutionRange"
    },
    "com.harmonicinc.vos.labwizard.rest.model.NielsenWatermarkProperties": {
      "properties": {
        "cbetCheckDigits": {
          "type": "string",
          "description": "CBET CheckDigits"
        },
        "cbetSid": {
          "type": "integer",
          "format": "int32",
          "description": "CBET Sid"
        },
        "checkDigits": {
          "type": "string",
          "description": "Check Digits"
        },
        "insertionMode": {
          "type": "string",
          "description": "Insertion Mode",
          "enum": [
            "e_OVERWRITE",
            "e_REFRAIN"
          ]
        },
        "sid": {
          "type": "integer",
          "format": "int32",
          "description": "Sid"
        },
        "sourceType": {
          "type": "string",
          "description": "Source Type",
          "enum": [
            "e_PROGRAM",
            "e_COMMERCIAL",
            "e_VOD_BREAKOUT"
          ]
        },
        "stepAside": {
          "type": "boolean",
          "description": "CBET StepAside"
        },
        "watermarkType": {
          "type": "string",
          "description": "Watermark Type",
          "enum": [
            "e_NAES_II",
            "e_NAES_VI",
            "e_NAES_II_AND_NAES_VI",
            "e_NAES_CBET",
            "e_NAES_VI_AND_CBET",
            "e_NAES_II_VI_AND_CBET"
          ]
        },
        "watermarkingLevel": {
          "type": "string",
          "description": "Watermark Level",
          "enum": [
            "e_PC",
            "e_FD"
          ]
        }
      },
      "name": "NielsenWatermarkProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte2110DataTransportProperties": {
      "required": [
        "extractAFD",
        "extractClosedCaption"
      ],
      "properties": {
        "extractAFD": {
          "type": "boolean",
          "description": "Whether extract AFD from current 2110 data stream"
        },
        "extractClosedCaption": {
          "type": "boolean",
          "description": "Whether extract closed caption from current 2110 data stream"
        }
      },
      "name": "Smpte2110DataTransportProperties"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalGeoSyncSetting": {
      "properties": {
        "disableAutoRestart": {
          "type": "boolean",
          "description": "Whether GeoSync service should restart automatically during desynchronization, can be changed at runtime"
        },
        "mode": {
          "type": "string",
          "description": "Specifies the mode of GeoSync, cannot be changed unless all services are offline",
          "enum": [
            "DEFAULT",
            "NTP"
          ]
        }
      },
      "name": "GlobalGeoSyncSetting"
    },
    "com.harmonicinc.vos.asset.acquisition.model.OutputSubtitleTrack": {
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "format": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "subtitleType": {
          "type": "string"
        }
      },
      "name": "OutputSubtitleTrack"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DolbyAC4AdvanceProperties": {
      "properties": {
        "ac4AudioCodingMode": {
          "type": "string",
          "description": "AudioCodingMode based on the standard/manual ",
          "enum": [
            "e_AC4ACM_10",
            "e_AC4ACM_20",
            "e_AC4ACM_32",
            "e_AC4ACM_3214"
          ]
        },
        "ac4AudioLevel": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecated) [-31 to -1] audio level when AudioLevelAdjustment is set to Manual "
        },
        "ac4AutoAudioLevelAdjustment": {
          "type": "string",
          "description": "(Deprecated) AudioLevelAdjustment based on the standard/manual ",
          "enum": [
            "e_MANUAL",
            "e_ATSC_A85",
            "e_EBU_R128",
            "e_ARIB_TR_B32",
            "e_FREETV_OP59"
          ]
        },
        "ac4FrameRate": {
          "type": "string",
          "description": "AC4 FrameRate ",
          "enum": [
            "e_FRE_25",
            "e_FRE_29_97"
          ]
        },
        "ac4IframeInterval": {
          "type": "integer",
          "format": "int32",
          "description": "range=12-1000 when FrameRate='25', range=14-1000 when FrameRate='29.97'"
        },
        "bitstreamMode": {
          "type": "string",
          "description": "Audio Service Type within the Bit Stream",
          "enum": [
            "e_CompleteMain",
            "e_MusicAndEffects",
            "e_VisuallyImpaired",
            "e_HearingImpaired",
            "e_Dialog",
            "e_Commentary",
            "e_Emergency",
            "e_KaraokeVoiceOver"
          ]
        },
        "dialogueNormalization": {
          "type": "integer",
          "format": "int32",
          "description": "Dialogue normalization. If not specified, it means auto. it should be negative"
        },
        "dolbySurroundExMode": {
          "type": "string",
          "description": "Dolby Surround EX mode. If not specified, it means auto",
          "enum": [
            "e_NotIndicated",
            "e_Disabled",
            "e_Enabled"
          ]
        },
        "fallbackBitstreamMode": {
          "type": "string",
          "description": "Fallback Audio Service Type within the Bit Stream",
          "enum": [
            "e_CompleteMain",
            "e_MusicAndEffects",
            "e_VisuallyImpaired",
            "e_HearingImpaired",
            "e_Dialog",
            "e_Commentary",
            "e_Emergency",
            "e_KaraokeVoiceOver"
          ]
        },
        "fallbackDialogueNormalization": {
          "type": "integer",
          "format": "int32",
          "description": "Fallback Dialogue normalization. If not specified, device default value will be used as fallback"
        },
        "fallbackLineModeDrc": {
          "type": "string",
          "description": "Fallback Line mode DRC/Home Theatre. If not specified, device default value will be used as fallback",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "fallbackLoRoCenterMixLevel": {
          "type": "string",
          "description": "Fallback Lo/Ro Center Downmix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackLoRoSurroundMixLevel": {
          "type": "string",
          "description": "Fallback Lo/Ro surround Downmix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackLtRtCenterMixLevel": {
          "type": "string",
          "description": "Fallback Lt/Rt Center Downmix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackLtRtSurroundMixLevel": {
          "type": "string",
          "description": "Fallback Lt/Rt surround Downmix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackPhaseShift": {
          "type": "boolean",
          "description": "Fallback 90-degree phase shift. If not specified, device default value will be used as fallback"
        },
        "fallbackPortableHeadphoneDrc": {
          "type": "string",
          "description": "Fallback Portable Headphone DRC. If not specified, device default value will be used as fallback",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "fallbackPortableSpeakersDrc": {
          "type": "string",
          "description": "Fallback Portable Speakers DRC. If not specified, device default value will be used as fallback",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "fallbackRfModeDrc": {
          "type": "string",
          "description": "Fallback RF mode DRC/Flat Panel. If not specified, device default value will be used as fallback",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "fallbackStereoDownmixPreference": {
          "type": "string",
          "description": "Fallback Stereo downmix preference. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_NotIndicated",
            "e_LtRtDownmix",
            "e_LoRoDownmix"
          ]
        },
        "fallbackSurroundAttenuation": {
          "type": "boolean",
          "description": "Fallback 3 dB attenuation. If not specified, device default value will be used as fallback"
        },
        "heightChannelDownmix": {
          "type": "string",
          "description": "AC4 metadata in the AC4 stream. Default: e_Auto",
          "enum": [
            "e_Auto",
            "e_Front",
            "e_Surround",
            "e_FrontAndSurround"
          ]
        },
        "heightTrim": {
          "type": "string",
          "description": "heightTrim, HeightMixGain) is AC4 metadata in the AC4 stream.  Default: e_Height_M30.",
          "enum": [
            "e_Height_00",
            "e_Height_M15",
            "e_Height_M30",
            "e_Height_M45",
            "e_Height_M60",
            "e_Height_M90",
            "e_Height_M120",
            "e_Height_MINF"
          ]
        },
        "lfeChannel": {
          "type": "boolean",
          "description": "Specify whether to enable Lfe channel"
        },
        "lfeLowPassFilter": {
          "type": "boolean",
          "description": "Lfe low pass filter. If not specified, it means auto"
        },
        "lineModeDrc": {
          "type": "string",
          "description": "Line mode DRC/Home Theatre. If not specified, it means auto",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "loRoCenterMixLevel": {
          "type": "string",
          "description": "Lo/Ro Center Downmix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "loRoSurroundMixLevel": {
          "type": "string",
          "description": "Lo/Ro surround Downmix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "ltRtCenterMixLevel": {
          "type": "string",
          "description": "Lt/Rt Center Downmix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "ltRtSurroundMixLevel": {
          "type": "string",
          "description": "Lt/Rt surround Downmix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "phaseShift": {
          "type": "boolean",
          "description": "90-degree phase shift. If not specified, it means auto"
        },
        "portableHeadphoneDrc": {
          "type": "string",
          "description": "Portable Headphone DRC",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "portableSpeakersDrc": {
          "type": "string",
          "description": "Portable Speakers DRC",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "rfModeDrc": {
          "type": "string",
          "description": "RF mode DRC/Flat Panel. If not specified, it means auto",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech",
            "e_Auto"
          ]
        },
        "stereoDownmixPreference": {
          "type": "string",
          "description": "Stereo downmix preference. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_NotIndicated",
            "e_LtRtDownmix",
            "e_LoRoDownmix"
          ]
        },
        "surroundAttenuation": {
          "type": "boolean",
          "description": "3 dB attenuation. If not specified, it means auto"
        },
        "surroundTrim": {
          "type": "string",
          "description": "surroundTrim, SurroundMixGain is AC4 metadata in the AC4 stream. Default: e_Surround_Auto",
          "enum": [
            "e_Surround_Auto",
            "e_Surround_00",
            "e_Surround_M15",
            "e_Surround_M30",
            "e_Surround_M45",
            "e_Surround_M60",
            "e_Surround_MINF"
          ]
        }
      },
      "name": "DolbyAC4AdvanceProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.HSP_Input": {
      "required": [
        "hspEndpoint",
        "hspEndpointId",
        "variantPlaylistFileName"
      ],
      "properties": {
        "authenticationHeader": {
          "description": "Authentication header",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HspAuthenticationHeader"
        },
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "backupEndpointSettings": {
          "description": "Backup Live ingest endpoint settings of the source for seamless input redundancy",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HspEndpointSettings"
        },
        "customHeaders": {
          "type": "array",
          "description": "Custom headers",
          "items": {
            "type": "string"
          }
        },
        "g2oAuthConfig": {
          "description": "G2O Authentication Configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.G2OAuthConfig"
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "hspEndpoint": {
          "type": "string",
          "description": "Internal Live ingest endpoint of the source"
        },
        "hspEndpointId": {
          "type": "string",
          "description": "Live ingest endpoint Id of the source"
        },
        "inputBufferSettings": {
          "description": "Input buffer settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HspInputBufferSettings"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Network interface for downling the source. Applicable for XOS and VOS CNS only"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "publicHspEndpoint": {
          "type": "string",
          "description": "Public Live ingest endpoint of the source"
        },
        "scte35Annotation": {
          "type": "string",
          "description": "SCTE-35 annotation format",
          "enum": [
            "NONE",
            "BASE64_SCTE35_CUE"
          ]
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "tsProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the number of programs in the input TS"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Playlist File Name of the source"
        }
      },
      "name": "HSP_Input"
    },
    "java.time.chrono.Chronology": {
      "type": "object",
      "properties": {
        "calendarType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "name": "Chronology"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSourceDownloadStatus": {
      "properties": {
        "downloaded": {
          "type": "integer",
          "format": "int64",
          "description": "@Deprecated. It will be removed in the coming releases."
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "PROCESSING",
            "DOWNLOADING",
            "READY",
            "FAILED"
          ]
        },
        "url": {
          "$ref": "#/definitions/java.net.URL"
        }
      },
      "name": "RestSourceDownloadStatus"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.DemuxSource": {
      "required": [
        "demuxServiceId"
      ],
      "properties": {
        "demuxServiceId": {
          "type": "string",
          "description": "Indicates the uuid of the Demux service"
        }
      },
      "name": "DemuxSource"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$AudioProfile": {
      "properties": {
        "aacProfileProperties": {
          "description": "AAC profile properties - AAC meta data",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AACProfileProperties"
        },
        "aribAudioModeChange": {
          "description": "Arib Audio Mode Change Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AribAudioModeChange"
        },
        "audioAUPerPES": {
          "type": "string",
          "description": "Number of audio AU per PES",
          "enum": [
            "e_Auto",
            "e_1AU_per_PES",
            "e_5AU_per_PES",
            "e_6AU_per_PES"
          ]
        },
        "audioLevelAdjustmentProperties": {
          "description": "General Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioLevelAdjustmentProperties"
        },
        "audioUpmixerConfig": {
          "description": "Configuration for audio upmixer",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioUpmixerConfig"
        },
        "bitrate": {
          "type": "string",
          "description": "Audio bitrate in bps",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "bitrateSecondary": {
          "type": "string",
          "description": "Bitrate used with a 5.1 PCM input when it switches to stereo. Ignored if channels is not e_PASSTHROUGH. Ignored if the input is not defined as 5.1 PCM.",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "channels": {
          "type": "string",
          "description": "Audio channel setting for converting",
          "enum": [
            "e_PASSTHROUGH",
            "e_STEREO",
            "e_MONO",
            "e_DOLBY_5_1",
            "e_DUAL_MONO",
            "e_5_1_4"
          ]
        },
        "codec": {
          "type": "string",
          "description": "Audio codec used for converting",
          "enum": [
            "e_AC_4",
            "e_E_AC_3",
            "e_AC_3",
            "e_HE_AAC_v2",
            "e_HE_AAC_v1",
            "e_AAC_LC",
            "e_MPEG1_L2",
            "e_PCM"
          ]
        },
        "dialnorm": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio dialogue normalization (average loudness) in dB, applied for AC-4, AC-3, E-AC3 codec"
        },
        "dolbyAC4AdvanceProperties": {
          "description": "Dolby AC4 Advanced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyAC4AdvanceProperties"
        },
        "dolbyPlusAdvanceProperties": {
          "description": "Dolby Plus Adavnced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyPlusAdvanceProperties"
        },
        "gain": {
          "type": "integer",
          "format": "int32",
          "description": "Audio gain in dB when LevelMagic leveling is disabled, Dialnorm will be set as default value"
        },
        "halcAudioLevelAdjustementProperties": {
          "description": "HALC Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HALCAudioLevelAdjustementProperties"
        },
        "kantarSnapWatermarkEnabled": {
          "type": "boolean",
          "description": "Enable Kantar Snap watermarking for this channel"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of audio",
          "items": {
            "type": "string"
          }
        },
        "leveling": {
          "type": "boolean",
          "description": "Enable audio LevelMagic leveling"
        },
        "loudnessTarget": {
          "type": "integer",
          "format": "int32",
          "description": "Loudness setting in LKFS when LevelMagic leveling is enabled, Dialnorm will be overridden"
        },
        "mpeg1L2ProfileProperties": {
          "description": "Mpeg1 Layer2 Profile Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Mpeg1L2ProfileProperties"
        },
        "nielsenWatermarkProperties": {
          "description": "Nielsen Watermarking Configurations",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.NielsenWatermarkProperties"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the audio"
        },
        "processing": {
          "type": "string",
          "description": "Convert or pass-through audio",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "sampleRate": {
          "type": "string",
          "description": "Audio sampling rate in Hz",
          "enum": [
            "e_16",
            "e_32",
            "e_44",
            "e_48"
          ]
        },
        "sourceChannel": {
          "type": "string",
          "description": "Audio M1L2 source channel used for converting",
          "enum": [
            "e_LEFT",
            "e_RIGHT"
          ]
        },
        "sourceDolbyEProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Source DolbyE program number for the audio"
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of audio",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        }
      },
      "name": "AudioProfile"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Locator": {
      "required": [
        "streamIdentification"
      ],
      "properties": {
        "esType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of ES"
        },
        "language": {
          "type": "string",
          "description": "ISO 639 language"
        },
        "streamIdentification": {
          "type": "string",
          "description": "pid"
        },
        "table": {
          "type": "string",
          "description": "descriptor table location",
          "enum": [
            "e_PMT",
            "e_PMT_LOOP",
            "e_TRANSPORT",
            "e_TRANSPORT_LOOP",
            "e_SDT",
            "e_SDT_LOOP"
          ]
        }
      },
      "name": "Locator"
    },
    "com.harmonicinc.vos.mux.monitor.model.triveni.Section": {
      "properties": {
        "data": {
          "type": "string"
        }
      },
      "name": "Section"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MPEG2VideoProperties": {
      "required": [
        "mpeg2ProfileAndLevel"
      ],
      "properties": {
        "mpeg2ProfileAndLevel": {
          "type": "string",
          "description": "Level and profile of MPEG2 stream",
          "enum": [
            "PL_SIMPLE_MAIN",
            "PL_MAIN_HIGH",
            "PL_MAIN_HIGH_1440",
            "PL_MAIN_MAIN",
            "PL_MAIN_LOW",
            "PL_HIGH_HIGH",
            "PL_HIGH_HIGH_1440",
            "PL_HIGH_MAIN",
            "PL_422_MAIN",
            "PL_422_HIGH"
          ]
        }
      },
      "name": "MPEG2VideoProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DemuxProfileProperties": {
      "required": [
        "demuxMode"
      ],
      "properties": {
        "demuxMode": {
          "type": "string",
          "description": "Specifies the demux mode",
          "enum": [
            "e_MPTS_RF_TO_SPTS_IP",
            "e_MPTS_RF_TO_MPTS_IP",
            "e_MPTS_IP_TO_SPTS_IP"
          ]
        }
      },
      "name": "DemuxProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.model.service.PlayoutLayer": {
      "required": [
        "layerId"
      ],
      "properties": {
        "layerId": {
          "type": "integer",
          "format": "int32",
          "description": "Playout graphic layer ID, range: 1..8"
        }
      },
      "name": "PlayoutLayer"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.bitrate.BitrateRange": {
      "properties": {
        "esBitrateRange": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.bitrate.EsBitrateRange"
        },
        "exclude": {
          "type": "boolean"
        },
        "tsBitrateRange": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.bitrate.TsBitrateRange"
        }
      },
      "name": "BitrateRange"
    },
    "com.harmonicinc.vos.app.configure.model.service.TimedEventAddon": {
      "properties": {
        "callbackServer": {
          "description": "The request settings used by callback server",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$CallbackServer"
        },
        "callbackUrl": {
          "type": "string",
          "description": "The callback endpoint used to listen on the parental control insertion status"
        },
        "channelId": {
          "type": "string",
          "description": "The ID is used by Timed Event API to identify the service"
        },
        "commandScheduler": {
          "description": "The request settings used by command scheduler",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$CommandScheduler"
        },
        "hlsParentalControlID3Pid": {
          "type": "integer",
          "format": "int32",
          "description": "The HLS parental control ID3 PID"
        },
        "hlsPeacockEventID3Pid": {
          "type": "integer",
          "format": "int32",
          "description": "The HLS peacock timed event ID3 PID"
        },
        "timedEventType": {
          "type": "string",
          "description": "Timed Event type to identify the service",
          "enum": [
            "e_PARENTAL_CONTROL",
            "e_PEACOCK_EVENT",
            "e_DATE_RANGE_EVENT"
          ]
        }
      },
      "name": "TimedEventAddon"
    },
    "com.harmonicinc.vos.app.monitor.model.GraphicsRequestConfig": {
      "required": [
        "graphicsState"
      ],
      "properties": {
        "graphicsState": {
          "type": "string",
          "description": "Graphics Status",
          "enum": [
            "ON",
            "OFF"
          ]
        }
      },
      "name": "GraphicsRequestConfig"
    },
    "com.harmonicinc.vos.app.monitor.model.DestinationStatus": {
      "required": [
        "destinationStatistics",
        "id",
        "name",
        "outputStatus"
      ],
      "properties": {
        "destinationStatistics": {
          "description": "The statistics of a destination",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.DestinationStatistics"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a destination in UUID format"
        },
        "name": {
          "type": "string",
          "description": "Display name of a destination"
        },
        "outputStatus": {
          "type": "array",
          "description": "The status of the output",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputStatus"
          }
        }
      },
      "name": "DestinationStatus"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.ExportLog": {
      "properties": {
        "assetId": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.ExportLogDestination"
        },
        "endTime": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "exportId": {
          "type": "string"
        },
        "exportType": {
          "type": "string",
          "enum": [
            "PACKAGE",
            "TRANSCODE"
          ]
        },
        "outputId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PROCESSING",
            "ERROR",
            "FINISHED"
          ]
        },
        "transcodeExporting": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.TranscodeExporting"
        }
      },
      "name": "ExportLog"
    },
    "com.harmonicinc.vos.app.configure.model.NciCaptioning": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable NCI captioning"
        }
      },
      "name": "NciCaptioning"
    },
    "com.harmonicinc.vos.mux.model.tslevel.TotParameters": {
      "properties": {
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Table interval (1000- 30000 milliseconds). Relevant for GENERATE"
        },
        "localTimeOffsetDescriptor": {
          "type": "array",
          "description": "Local time offset descriptor list",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.LocalTimeOffsetDes"
          }
        },
        "totMode": {
          "type": "string",
          "description": "TOT Mode. Will be ignored when tdtMode is PASSTHROUGH.",
          "enum": [
            "GENERATE",
            "NONE"
          ]
        }
      },
      "name": "TotParameters"
    },
    "com.harmonicinc.vos.app.configure.model.service.LiveEventAddon": {
      "properties": {
        "confidenceMonitoring": {
          "type": "boolean",
          "description": "Indicate that LiveEvent confidential monitoring is used. \r\nfalse by default"
        },
        "endTimeInUtc": {
          "type": "string",
          "description": "Specify live event end time (in UTC). Support only when serviceType is LIVE_EVENT. Time is represented in format of yyyy-MM-ddThh:mm:ssZ"
        },
        "recording": {
          "type": "boolean",
          "description": "Indicate that LiveEvent records is used. \r\nfalse by default"
        },
        "startTimeInUtc": {
          "type": "string",
          "description": "Specify live event start time (in UTC) to ensure manifest in package output does not contain content earlier than the start time. Support only when serviceType is LIVE_EVENT. Time is represented in format of yyyy-MM-ddThh:mm:ssZ"
        }
      },
      "name": "LiveEventAddon"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.VideoQualityParameters": {
      "properties": {
        "assetPath": {
          "type": "string"
        },
        "fileServerId": {
          "type": "string"
        },
        "outputAssetId": {
          "type": "string"
        }
      },
      "name": "VideoQualityParameters"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$ProxyCacheLockSettings": {
      "properties": {
        "proxyCacheLockAgeForLiveInMs": {
          "type": "integer",
          "format": "int32"
        },
        "proxyCacheLockAgeForNonLiveInMs": {
          "type": "integer",
          "format": "int32"
        },
        "proxyCacheLockTimeoutForLiveInMs": {
          "type": "integer",
          "format": "int32"
        },
        "proxyCacheLockTimeoutForNonLiveInMs": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "ProxyCacheLockSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutTeletextConfiguration": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of teletext tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutTeletextTrack"
          }
        }
      },
      "name": "PlayoutTeletextConfiguration"
    },
    "com.harmonicinc.externalassetpotf.model.rest.settings.ExternalAssetPotfSettings": {
      "properties": {
        "chblBalanceFactor": {
          "type": "number",
          "format": "float"
        },
        "loadBalancingMode": {
          "type": "string",
          "enum": [
            "ROUND_ROBIN",
            "CONSISTENT_HASHING_WITH_BOUNDED_LOAD"
          ]
        },
        "resourceConfig": {
          "description": "Explicit resource config for potf server, set to null for automatic",
          "$ref": "#/definitions/com.harmonicinc.externalassetpotf.model.rest.settings.ContainerResourceConfig"
        },
        "scalingConfig": {
          "$ref": "#/definitions/com.harmonicinc.externalassetpotf.model.rest.settings.PotfServerScalingConfig"
        }
      },
      "name": "ExternalAssetPotfSettings"
    },
    "com.harmonicinc.vos.mux.model.tslevel.EmmStream": {
      "required": [
        "dataStreamId",
        "emmChannelUuid",
        "pid"
      ],
      "properties": {
        "bisscaStreamId": {
          "type": "string",
          "description": "Uuid of the BISS-CA EMM stream. Ignored when mode is not BISS_CA"
        },
        "caDescPrivateData": {
          "type": "string",
          "description": "Private Data to be added to CA Desc (in hexa, for e.g. \"AAE1BC3D\")"
        },
        "caSystemId": {
          "type": "string",
          "description": "CA System ID of EMM stream in the CA_descriptor (in hexa, for e.g. \"ABCD\"). Mandatory when mode is PASSTHROUGH, optional when mode is SIMULCRYPT (use data from Scrambling app by default). Ignored when mode is BISS_CA"
        },
        "dataStreamId": {
          "type": "integer",
          "format": "int32",
          "description": "data_id of the EMM stream. Ignored when mode is not SIMULCRYPT"
        },
        "emmChannelUuid": {
          "type": "string",
          "description": "Uuid of the EMM channel to be used for the EMM stream. Ignored when mode is not SIMULCRYPT"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a EMM stream in UUID format"
        },
        "inputObjectId": {
          "type": "string",
          "description": "input object id. Ignored when mode is not PASSTHROUGH"
        },
        "inputPid": {
          "type": "integer",
          "format": "int32",
          "description": "input PID. Ignored when mode is not PASSTHROUGH"
        },
        "mode": {
          "type": "string",
          "description": "EMM mode. Default is SIMULCRYPT",
          "enum": [
            "SIMULCRYPT",
            "PASSTHROUGH",
            "BISS_CA"
          ]
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "The EMM pid value"
        }
      },
      "name": "EmmStream"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.PotfServerScalingConfig": {
      "properties": {
        "ignoreNodeCountLimit": {
          "type": "boolean"
        },
        "kedaAutoscaler": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$KedaAutoscalerConfig"
        },
        "legacyScalingConfig": {
          "description": "Legacy autoscaling config",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PotfServerLegacyScalingConfig"
        },
        "maxNumServers": {
          "type": "integer",
          "format": "int32"
        },
        "minNumServers": {
          "type": "integer",
          "format": "int32"
        },
        "mode": {
          "type": "string",
          "enum": [
            "MANUAL",
            "LEGACY",
            "KEDA"
          ]
        }
      },
      "name": "PotfServerScalingConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.InputAssetFileServer": {
      "properties": {
        "fileServerId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "name": "InputAssetFileServer"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkRequest": {
      "required": [
        "id",
        "ipAddress",
        "name",
        "publicIpAddress"
      ],
      "properties": {
        "currentVersion": {
          "type": "string",
          "description": "Current version of cloudlink."
        },
        "id": {
          "type": "string",
          "description": "Id of the uplink"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address of the uplink"
        },
        "isInitialized": {
          "type": "boolean",
          "description": "[Obsoleted]whether the uplink is ready to be used by properly assigned the rank and name."
        },
        "name": {
          "type": "string",
          "description": "Display name of a uplink"
        },
        "needToBeUpgraded": {
          "type": "boolean",
          "description": "[Obsoleted]whether the uplink is ready to be used by properly assigned the rank and name."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the uplink"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of Uplink. Auto assigned when uplink is created. It can be updated afterwards."
        },
        "version": {
          "type": "string",
          "description": "Version which need to be upgraded to."
        }
      },
      "name": "UplinkRequest"
    },
    "com.harmonicinc.vos.app.configure.model.Scheduler360Setting": {
      "required": [
        "authServer",
        "clientID",
        "clientSecret",
        "endpoint"
      ],
      "properties": {
        "authServer": {
          "type": "string",
          "description": "OAuth Server for Scheduler 360"
        },
        "clientID": {
          "type": "string",
          "description": "ClientID for Scheduler 360 OAuth authentication"
        },
        "clientSecret": {
          "type": "string",
          "description": "ClientSecret for Scheduler 360 OAuth authentication"
        },
        "endpoint": {
          "type": "string",
          "description": "Endpoint of the Scheduler 360"
        }
      },
      "name": "Scheduler360Setting"
    },
    "com.harmonicinc.vos.app.configure.model.GeneralSettings$ServiceType": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "name": "ServiceType"
    },
    "com.harmonicinc.vos.app.monitor.model.InputDeliveryStatus": {
      "required": [
        "inputAddressPort",
        "inputIndex",
        "inputStatistic"
      ],
      "properties": {
        "inputAddressPort": {
          "type": "string",
          "description": "The input address and port"
        },
        "inputIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The input index"
        },
        "inputStatistic": {
          "type": "array",
          "description": "The input statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.InputStatisticEntry"
          }
        }
      },
      "name": "InputDeliveryStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.DescramblingProgram": {
      "required": [
        "programNum"
      ],
      "properties": {
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program Number"
        }
      },
      "name": "DescramblingProgram"
    },
    "com.harmonicinc.vos.labwizard.rest.model.FtAudioStream": {
      "required": [
        "audio_bitrate",
        "audio_channels_number",
        "audio_codec",
        "audio_sample_rate",
        "language",
        "layout",
        "use_stream_id"
      ],
      "properties": {
        "audio_bitrate": {
          "type": "string",
          "description": "N - where N is any non-zero number of Kbps\n3GP: 4.75k, 5.15k, 5.9k, 6.7k, 7.4k, 7.95k, 10.2k, 12.2k\nFLV, WMV, MP3, WMA, ZUNE: 32k, 40k, 48k, 56k, 64k, 80k, 96k, 112k, 128k, 144k, 160k, 192k, 224k, 256k, 320k\nOGG, WEBM: 45k,64k, 80k, 96k, 112k, 128k, 160k, 192k, 224k, 256k, 320k, 500k"
        },
        "audio_channels_number": {
          "type": "string",
          "description": "Number of audio channels"
        },
        "audio_codec": {
          "type": "string",
          "description": "MP3: LIBMP3LAME\nM4A: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, EAC3\nFLV: LIBMP3LAME, LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2\nMP4: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, AC3, EAC3\nFL9, M4V, IPOD, IPHONE, IPAD, PSP: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2\nROKU_*, KINDLE_FIRE: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, EAC3\nMOV: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, EAC3, PCM_F32BE, PCM_F32LE\nIPHONE_STREAM, IPAD_STREAM: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2\nROKU_HLS, HDS: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, EAC3\nSMOOTH_STREAMING: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, EAC3\nADVANCED HLS STREAM: LIBFAAC, DOLBY_AAC, DOLBY_HEAAC, DOLBY_HEAACV2, AC3, EAC3, LIBMP3LAME(only for 'v3' segmenter)\nLIVE HLS STREAM: LIBFAAC, AC3, LIBMP3LAME\nWMV, WMA, ZUNE: WMAV2, LIBMP3LAME\nWAV: PCM_S16LE, PCM_S24LE, PCM_S32LE\nOGG, WEBM: LIBVORBIS\n3GP: LIBAMR_NB\nANDROID: LIBAMR_NB, LIBFAAC\nMPEG2: PCM_S16BE, PCM_S16LE, AC3\nMPEG1: MP2, COPY\nMPEGTS: AC3, EAC3\nMPEG_DASH: LIBFAAC, EAC3\nMOV_PRORES: PCM_S16LE, PCM_S24LE\nMXF: PCM_S16LE, PCM_S24LE, COPY\nDNXHD_MXF: PCM_S16LE, PCM_S24LE, COPY",
          "enum": [
            "none",
            "libmp3lame",
            "libfaac",
            "dolby_aac",
            "dolby_heaac",
            "dolby_heaacv2",
            "eac3",
            "ac3",
            "pcm_f32be",
            "pcm_f32le",
            "pcm_s24le",
            "pcm_s16le",
            "mp2",
            "wmav2",
            "copy"
          ]
        },
        "audio_sample_rate": {
          "type": "string",
          "description": "Audio sampling frequency (Hz)\nAll: any non-zero integer3gp: 8000\nflv, mp3: 11025, 22050, 44100\nogg, webm: 16000, 32000, 44100, 22050, 11025, 192000\nwmv, wma, zune: 11025, 22050, 32000, 44100, 48000\nmpeg2: 44100, 48000\n"
        },
        "language": {
          "type": "string",
          "description": "Audio language"
        },
        "layout": {
          "type": "string",
          "description": "Audio channels layout",
          "enum": [
            "mono",
            "stereo",
            "2.1",
            "3.0",
            "3.0_back",
            "4.0",
            "quad",
            "quad_side",
            "3.1",
            "5.0",
            "5.0_side",
            "4.1",
            "5.1",
            "5.1_side",
            "6.0",
            "6.0_front",
            "hexagonal",
            "6.1",
            "6.1_front",
            "7.0",
            "7.0_front",
            "7.1",
            "7.1_wide",
            "7.1_wide_side",
            "octagonal",
            "downmix"
          ]
        },
        "use_stream_id": {
          "type": "string",
          "description": "Source audio stream index"
        }
      },
      "name": "FtAudioStream"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MptsProfileProperties": {
      "required": [
        "bandwidth"
      ],
      "properties": {
        "bandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate of output stream in bps"
        },
        "dimProperties": {
          "description": "Dimension settings of the mux",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MptsDimProperties"
        },
        "mptsType": {
          "type": "string",
          "description": "MPTS type",
          "enum": [
            "e_MPEG",
            "e_ATSC",
            "e_DVB_SIS_DSA"
          ]
        },
        "muxWithBlackout": {
          "type": "boolean",
          "description": "precise the capability of the mux to do blackout"
        },
        "pidScheme": {
          "description": "PID allocation scheme",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PidScheme"
        },
        "signalingTables": {
          "description": "Signaling Tables of output stream",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.SignalingTables"
        }
      },
      "name": "MptsProfileProperties"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmKms": {
      "required": [
        "httpsCertValidation",
        "rank",
        "url"
      ],
      "properties": {
        "httpsCertValidation": {
          "type": "boolean",
          "description": "Enable Certificate Validation when making HTTPS Connection to KMS Server"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Rank of KMS Server"
        },
        "url": {
          "type": "string",
          "description": "URL of KMS Server"
        }
      },
      "name": "DrmKms"
    },
    "com.harmonicinc.vos.app.configure.model.source.AudioGrooming": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of audio tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.AudioTrack"
          }
        }
      },
      "name": "AudioGrooming"
    },
    "com.harmonicinc.vos.app.configure.model.destination.PsiSiTableConfig": {
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "bitrate"
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid"
        },
        "psiSiContent": {
          "type": "string",
          "description": "Base64 encoded PSI content"
        },
        "psiSiType": {
          "type": "string",
          "description": "PSI/SI Type",
          "enum": [
            "PAT",
            "PMT",
            "SDT",
            "NIT",
            "EIT",
            "TDT"
          ]
        }
      },
      "name": "PsiSiTableConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$VideoStreamSelectionItem": {
      "properties": {
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$VideoStreamSelectionItem$BitrateRange"
        },
        "frameRateRange": {
          "description": "frameRateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$FrameRateRange"
        },
        "horizontalResolutionRange": {
          "description": "horizontalResolutionRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$VideoStreamSelectionItem$HorizontalResolutionRange"
        },
        "verticalResolutionRange": {
          "description": "verticalResolutionRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$VerticalResolutionRange"
        },
        "videoCodecSelection": {
          "type": "string",
          "description": "videoCodecSelection",
          "enum": [
            "H_265",
            "H_264",
            "ALL"
          ]
        }
      },
      "name": "VideoStreamSelectionItem"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties": {
      "required": [
        "bandwidth",
        "setTopBoxProfileId"
      ],
      "properties": {
        "audioMatchingMode": {
          "type": "string",
          "description": "The audio matching mode indicates how the audio encoding profile is specified. User can specify audio encoding profile per each language type, or specify the audio encoding profile based on the label associated with the input audio",
          "enum": [
            "e_MATCH_BY_LANGUAGE",
            "e_MATCH_BY_LABEL"
          ]
        },
        "audios": {
          "type": "array",
          "description": "List of IPTV audio processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Audio"
          }
        },
        "bandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum bitrate of output stream in Mbps"
        },
        "breakoutCode": {
          "type": "string",
          "description": "The breakout code indicates the preferred Nielsen crediting model, which is based on the type of content and Ad-load model",
          "enum": [
            "e_NONE",
            "e_LIVE_CONTENT_WITH_SAME_TV_ADS",
            "e_LIVE_CONTENT_WITHOUT_SAME_TV_ADS"
          ]
        },
        "customDescriptors": {
          "type": "array",
          "description": "Custom Descriptors of the program. Applicable for ATSC",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.CustomDescriptor"
          }
        },
        "data": {
          "type": "array",
          "description": "List of IPTV data processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Data"
          }
        },
        "dataFilteringMode": {
          "type": "string",
          "description": "Data filtering mode",
          "enum": [
            "e_INCLUDE_ALL_DATA",
            "e_FILTER_BY_SRC_LABEL"
          ]
        },
        "dvbProgramNameCodingTable": {
          "type": "string",
          "description": "Program name coding table bytes of the DVB SDT. Applicable when sdtGenerationMode is e_GENERATE. Support range defined in Annex A of ETSI EN 300 468 V1.16.1 (e.g. 0x14 for Traditional Chinese). If not defined, the default coding table as defined in the annex would be used."
        },
        "dvbProviderName": {
          "type": "string",
          "description": "Provider name of the DVB SDT. Applicable when sdtGenerationMode is e_GENERATE"
        },
        "dvbProviderNameCodingTable": {
          "type": "string",
          "description": "Provider name coding table bytes of the DVB SDT. Applicable when sdtGenerationMode is e_GENERATE. Support range defined in Annex A of ETSI EN 300 468 V1.16.1 (e.g. 0x14 for Traditional Chinese). If not defined, the default coding table as defined in the annex would be used."
        },
        "editingStatus": {
          "type": "integer",
          "format": "int32",
          "description": "The editing status indicate which properties group is in manual mode, user cannot configure properties on the left parametric section in the profile editor"
        },
        "extraVideoDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Extra video delay in milliseconds. Default is 0."
        },
        "outputPcrPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID of the PCR"
        },
        "outputPipPcrPid": {
          "type": "integer",
          "format": "int32",
          "description": "PIP output PID of the PCR"
        },
        "outputPipPmtPid": {
          "type": "integer",
          "format": "int32",
          "description": "PIP output PID of the PMT. Default value is equal to -1"
        },
        "outputPmtPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PMT PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 32 if not defined in source grooming (non-TS source for example). If -2 is set, the value is initialized at service start with input PMT PID, or 32 for non-TS source (-2 is available for backward compatibility and is not recommended). Any other value is not recommended and will behave as -1 in current version."
        },
        "receiverTimezone": {
          "type": "string",
          "description": "IATA timezone for receiver"
        },
        "scheduling": {
          "description": "Scheduling setting",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Scheduling"
        },
        "sdtGenerationMode": {
          "type": "string",
          "description": "SDT generation mode: e_FOLLOW_INPUT to transmit the ingress SDT, e_GENERATE to set the DVB service name to the VOS service name, set the NetworkId to 0 and transmit that SDT or e_DISABLE to disable the SDT output",
          "enum": [
            "e_FOLLOW_INPUT",
            "e_GENERATE",
            "e_DISABLE"
          ]
        },
        "setTopBoxProfileId": {
          "type": "string",
          "description": "Specify the id of the set top box profile"
        },
        "stereoDownmixMode": {
          "type": "string",
          "description": "Downmix mode for stereo",
          "enum": [
            "e_Auto",
            "e_LtRt",
            "e_LoRo"
          ]
        },
        "streamBasedAudios": {
          "type": "array",
          "description": "List of IPTV Stream based audio processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$StreamBasedAudio"
          }
        },
        "upsignal": {
          "type": "boolean",
          "description": "Enable AC-3 upsignaling (supports AC-3 5.1 audio output only)"
        },
        "video": {
          "description": "IPTV video processing setting",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Video"
        }
      },
      "name": "IPTVProfileProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ATSRule": {
      "required": [
        "atsRuleType"
      ],
      "properties": {
        "atsRuleType": {
          "type": "string",
          "description": "ATS Rule Type",
          "enum": [
            "e_BITRATE_RULE",
            "e_VIDEORES_RULE",
            "e_CODEC_RULE"
          ]
        },
        "bitrateRule": {
          "description": "ATS Bitrate Rules",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ATSRule$AtsBitrateRule"
        }
      },
      "name": "ATSRule"
    },
    "com.harmonicinc.vos.app.configure.model.source.DvbSubtitlingDescriptor": {
      "required": [
        "dvbSubtitlingDescriptorData"
      ],
      "properties": {
        "dvbSubtitlingDescriptorData": {
          "type": "array",
          "description": "Data of DVB Subtitling Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DvbSubtitlingDescriptorData"
          }
        }
      },
      "name": "DvbSubtitlingDescriptor"
    },
    "com.harmonicinc.vos.app.configure.model.source.TeletextDescription": {
      "required": [
        "teletextHexPageNum"
      ],
      "properties": {
        "language": {
          "type": "string",
          "description": "Teletext language. default:English",
          "enum": [
            "ENG",
            "DEU",
            "SWE",
            "FIN",
            "HUN",
            "ITA",
            "FRA",
            "POR",
            "SPA",
            "CES",
            "SLK",
            "POL",
            "TUR",
            "SRP",
            "HRV",
            "SLV",
            "RON",
            "EST",
            "LAV",
            "LIT",
            "RUS",
            "BUL",
            "UKR",
            "ELL",
            "ARA",
            "HEB"
          ]
        },
        "teletextHexPageNum": {
          "type": "string",
          "description": "Teletext page number in hexadecimal format. Range: Hex 0x100 - 0x8FF"
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Teletext type. Initial Teletext page, Teletext Subtitle Page, Additional Information Page, Hearing Impaired, Program Schdule Page"
        }
      },
      "name": "TeletextDescription"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties": {
      "required": [
        "setTopBoxProfileId"
      ],
      "properties": {
        "audioMatchingMode": {
          "type": "string",
          "description": "The audio matching mode indicates how the audio encoding profile is specified. User can specify audio encoding profile per each language type, or specify the audio encoding profile based on the label associated with the input audio",
          "enum": [
            "e_MATCH_BY_LANGUAGE",
            "e_MATCH_BY_LABEL"
          ]
        },
        "audios": {
          "type": "array",
          "description": "List of multiscreen audio processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenAudio"
          }
        },
        "breakoutCode": {
          "type": "string",
          "description": "Obsolete",
          "enum": [
            "e_NONE",
            "e_LIVE_CONTENT_WITH_SAME_TV_ADS",
            "e_LIVE_CONTENT_WITHOUT_SAME_TV_ADS"
          ]
        },
        "data": {
          "type": "array",
          "description": "List of mutliscreen data processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenData"
          }
        },
        "dataFilteringMode": {
          "type": "string",
          "description": "Data filtering mode",
          "enum": [
            "e_INCLUDE_ALL_DATA",
            "e_FILTER_BY_SRC_LABEL"
          ]
        },
        "dvbProviderName": {
          "type": "string",
          "description": "Provider name of the DVB SDT. Applicable when sdtGenerationMode is e_GENERATE"
        },
        "editingStatus": {
          "type": "integer",
          "format": "int32",
          "description": "The editing status indicate which properties group is in manual mode, user cannot configure properties on the left parametric section in the profile editor"
        },
        "endpoint": {
          "type": "string",
          "description": "Specify end point support Adaptive Transport Stream or Multi-bitrate",
          "enum": [
            "e_ATS",
            "e_HARMONIC_MBTS"
          ]
        },
        "extraVideoDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Extra video delay in milliseconds. Default is 0."
        },
        "outputPcrPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID of the PCR"
        },
        "outputPidId3Descriptor": {
          "type": "integer",
          "format": "int32",
          "description": "Define output PID of Nielsen ID3 descriptor"
        },
        "outputPmtPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PMT PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 32 if not defined in source grooming (non-TS source for example). If -2 is set, the value is initialized at service start with input PMT PID, or 32 for non-TS source (-2 is available for backward compatibility and is not recommended). Any other value is not recommended and will behave as -1 in current version."
        },
        "preferredAudioProfile": {
          "type": "integer",
          "format": "int32",
          "description": "Select audio profile profile as preferred bit rate for multiscreen profile, range from 1-16, default will be 1"
        },
        "preferredVideoProfile": {
          "type": "integer",
          "format": "int32",
          "description": "Select video profile profile as preferred bit rate for multiscreen profile, range from 1-11, default will be one level above the lowest video bit rate"
        },
        "receiverTimezone": {
          "type": "string",
          "description": "IATA timezone for receiver"
        },
        "scheduling": {
          "description": "Scheduling setting",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$Scheduling"
        },
        "sdtGenerationMode": {
          "type": "string",
          "description": "SDT generation mode: e_FOLLOW_INPUT to transmit the ingress SDT and patch the program name with the VOS service name, the resolution, the frame-rate and the bitrate, e_GENERATE to set the DVB service name to service name+resolution+framerate+bitrate, set the NetworkId to 0 and transmit that SDT or e_DISABLE to disable the SDT output",
          "enum": [
            "e_FOLLOW_INPUT",
            "e_GENERATE",
            "e_DISABLE"
          ]
        },
        "setTopBoxProfileId": {
          "type": "string",
          "description": "Specify the Id of STB profile"
        },
        "stereoDownmixMode": {
          "type": "string",
          "description": "Downmix mode for stereo",
          "enum": [
            "e_Auto",
            "e_LtRt",
            "e_LoRo"
          ]
        },
        "streamBasedAudios": {
          "type": "array",
          "description": "List of multiscreen pid based audio processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenStreamBasedAudio"
          }
        },
        "upsignal": {
          "type": "boolean",
          "description": "Enable AC-3 upsignaling (supports AC-3 5.1 audio output only)"
        },
        "video": {
          "description": "Multicreen video processing setting",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenVideo"
        }
      },
      "name": "MultiscreenProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.Source": {
      "properties": {
        "cspCoreProperties": {
          "description": "Cross Stream Prevention (CSP) properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CspCoreProperties"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a source in UUID format"
        },
        "inputRedundancyMode": {
          "type": "string",
          "enum": [
            "PRIMARY_ONLY",
            "MANUAL_SWITCH",
            "AUTO_SWITCH",
            "AUTO_SWITCH_MANUAL_REVERT",
            "AUTO_SWITCH_AUTO_REVERT"
          ]
        },
        "inputs": {
          "type": "array",
          "description": "An input is a singular network location from which to receive content",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Input"
          }
        },
        "labels": {
          "type": "array",
          "description": "Labels attached to source for identification",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Display name of a source"
        },
        "pmtPid": {
          "type": "string",
          "description": "(Deprecated) PMT PID number of selected program"
        }
      },
      "name": "Source"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte2110TransportProperties": {
      "required": [
        "rtpPayloadType",
        "transportId",
        "transportType"
      ],
      "properties": {
        "audioTransportProperties": {
          "description": "2110 audio transport specific properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110AudioTransportProperties"
        },
        "dataTransportProperties": {
          "description": "2110 data transport specific properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110DataTransportProperties"
        },
        "generateVitcFromRtpTimestamp": {
          "type": "boolean",
          "description": "VITC generation from RTP timestamps. Applicable to video stream only"
        },
        "rtpPayloadType": {
          "type": "integer",
          "format": "int32",
          "description": "Dynamic payload type of the RTP streams"
        },
        "transportId": {
          "type": "integer",
          "format": "int32",
          "description": "For mapping the 2110 stream to the 2110 transport"
        },
        "transportType": {
          "type": "string",
          "description": "Specify the 2110 transport type",
          "enum": [
            "SMPTE_2110_VIDEO",
            "SMPTE_2110_AUDIO",
            "SMPTE_2110_DATA"
          ]
        }
      },
      "name": "Smpte2110TransportProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.DvbSubtitlingDescriptorData": {
      "required": [
        "language"
      ],
      "properties": {
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the DVB data stream is the stream for default subtitle"
        },
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        }
      },
      "name": "DvbSubtitlingDescriptorData"
    },
    "com.harmonicinc.vos.app.configure.model.service.EasPropertiesAddon": {
      "properties": {
        "enableEas": {
          "type": "boolean",
          "description": "To start/stop EAS (Emergency Alert System) on this service"
        },
        "groupId": {
          "type": "integer",
          "format": "int32",
          "description": "Testing Group ID for this service. EAS global activeGroupId test events will run for this if "
        },
        "stationId": {
          "type": "string",
          "description": "Station-Id for this service. EAS events are addressed to StationIds"
        }
      },
      "name": "EasPropertiesAddon"
    },
    "com.harmonicinc.vos.app.monitor.model.SpeechToTextStatus": {
      "properties": {
        "audioCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of audios with speech to text enabled"
        }
      },
      "name": "SpeechToTextStatus"
    },
    "com.harmonicinc.vos.mux.model.tslevel.DvbSisDsaSettings": {
      "required": [
        "dsaGroupId",
        "inputId",
        "sisProgramNumber"
      ],
      "properties": {
        "dsaGroupId": {
          "type": "integer",
          "format": "int32",
          "description": "dsa group id"
        },
        "inputId": {
          "type": "string",
          "description": "uuid of the input parent signal"
        },
        "sisProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "sis service program number"
        },
        "sisSecondaries": {
          "type": "array",
          "description": "list of the input secondary signals ",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.DvbSisDsaSecondaryInput"
          }
        }
      },
      "name": "DvbSisDsaSettings"
    },
    "com.harmonicinc.vos.app.configure.model.GeneralSettings": {
      "properties": {
        "allLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings$Region"
          }
        },
        "cloudlinkTransportProtocol": {
          "type": "string",
          "enum": [
            "ZIXI",
            "SRT"
          ]
        },
        "distributorId": {
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings$Region"
        },
        "serviceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings$ServiceType"
          }
        },
        "sourceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GeneralSettings$SourceType"
          }
        }
      },
      "name": "GeneralSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestFtpServerInstance": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        }
      },
      "name": "RestFtpServerInstance"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.TeletextDescriptorData": {
      "required": [
        "language",
        "streamName",
        "teletextHexPageNum",
        "teletextMagazineNumber",
        "teletextType"
      ],
      "properties": {
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the teletext stream is the stream for default subtitle"
        },
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "skipProcessing": {
          "type": "boolean"
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name to insert to HLS/DASH/CMAF manifest"
        },
        "teletextHexPageNum": {
          "type": "string",
          "description": "Verbatim hexadecimal page number of teletext stream - should be used if not null"
        },
        "teletextMagazineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Magazine number of teletext stream"
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of teletext"
        }
      },
      "name": "TeletextDescriptorData"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem": {
      "properties": {
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange"
        },
        "frameRateRange": {
          "description": "frameRateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$FrameRateRange"
        },
        "horizontalResolutionRange": {
          "description": "horizontalResolutionRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$HorizontalResolutionRange"
        },
        "verticalResolutionRange": {
          "description": "verticalResolutionRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$VerticalResolutionRange"
        },
        "videoCodecSelection": {
          "type": "string",
          "description": "videoCodecSelection",
          "enum": [
            "H_265",
            "H_264",
            "ALL"
          ]
        }
      },
      "name": "VideoStreamSelectionItem"
    },
    "com.harmonicinc.vos.mux.model.componentlevel.OutputComponent": {
      "properties": {
        "id": {
          "type": "string"
        },
        "inputIdentifier": {
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.componentlevel.ComponentInputIdentifier"
        },
        "outputComponentParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.componentlevel.OutputComponentParameters"
        }
      },
      "name": "OutputComponent"
    },
    "com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties": {
      "properties": {
        "dashOutputPreference": {
          "description": "Configure custom Dash Output Preference of the stream",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$DashOutputPreference"
        },
        "hlsOutputPreference": {
          "description": "Configure custom Hls Output Preference of the stream",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$HlsOutputPreference"
        }
      },
      "name": "OttStbProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.model.service.TimeAdjustmentAddon": {
      "properties": {
        "timeAdjInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Time Adjustment in millisecond"
        }
      },
      "name": "TimeAdjustmentAddon"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentation": {
      "properties": {
        "assetId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "segmentationData": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentationData"
        }
      },
      "name": "RestSegmentation"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MptsEncapsulationSettings": {
      "required": [
        "encapsulationMode"
      ],
      "properties": {
        "enableFEC": {
          "type": "boolean",
          "description": "Enable FEC"
        },
        "encapsulationMode": {
          "type": "string",
          "description": "Encapsulation Mode.",
          "enum": [
            "e_UDP",
            "e_RTP"
          ]
        },
        "fecColumn": {
          "type": "integer",
          "format": "int32",
          "description": "FEC Column"
        },
        "fecRow": {
          "type": "integer",
          "format": "int32",
          "description": "FEC Row"
        },
        "isFecColumnOnly": {
          "type": "boolean",
          "description": "Enable FEC column only mode"
        }
      },
      "name": "MptsEncapsulationSettings"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.HspEndpointSettings": {
      "required": [
        "hspEndpoint",
        "variantPlaylistFileName"
      ],
      "properties": {
        "authenticationHeader": {
          "description": "Authentication header",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.HspAuthenticationHeader"
        },
        "hspEndpoint": {
          "type": "string",
          "description": "HSP Endpoint"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network Address used to receive the stream"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Playlist File Name of the source"
        }
      },
      "name": "HspEndpointSettings"
    },
    "com.harmonicinc.vos.app.configure.model.destination.OriginOutputEndPoint": {
      "required": [
        "id",
        "originOutputProtocol",
        "packagingProfileType"
      ],
      "properties": {
        "absoluteBaseURL": {
          "type": "string",
          "description": "Absolute base URL in master playlist to reference stream playlist"
        },
        "alternativeAbsoluteBaseURL": {
          "type": "string",
          "description": "Alternative cluster absolute base url in master playlist"
        },
        "alternativePathwayName": {
          "type": "string",
          "description": "alternative pathway name for content steering"
        },
        "backup": {
          "description": "Backup settings of the publishing point",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.BackupSettings"
        },
        "compatibilityMode": {
          "type": "string",
          "description": "Compatibility mode. Default to 'STANDARD' if not specified",
          "enum": [
            "STANDARD",
            "AKAMAI",
            "HUAWEI",
            "SIMPLE_HTTP",
            "S3",
            "MEDIASTORE"
          ]
        },
        "contentSteeringServerURL": {
          "type": "string",
          "description": "Content steering server url in master playlist"
        },
        "drm": {
          "description": "Drm settings of the publishing point",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.DrmSettings"
        },
        "enableAbsoluteURL": {
          "type": "boolean",
          "description": "Enable absolute URL in master playlist to reference stream playlist"
        },
        "enableContentSteeringPlaylist": {
          "type": "boolean",
          "description": "Enable absolute URL in master playlist to reference stream playlist"
        },
        "fromliveAbsoluteBaseURL": {
          "type": "string",
          "description": "Fromlive absolute base URL in master playlist to reference stream playlist"
        },
        "hostname": {
          "type": "string",
          "description": "IP address or hostname of origin server"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of an origin output end point in UUID format"
        },
        "insertPlaylistCustomTag": {
          "type": "boolean",
          "description": "Enable custom tag in master playlist"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of an output",
          "items": {
            "type": "string"
          }
        },
        "localPathwayName": {
          "type": "string",
          "description": "local pathway name for content steering"
        },
        "originOutputProtocol": {
          "type": "string",
          "description": "Specify the protocol used for origin output",
          "enum": [
            "HTTP",
            "HTTPS",
            "RTMP",
            "RTMPS"
          ]
        },
        "outputMode": {
          "type": "string",
          "description": "Output mode for internal output in Origin destionation",
          "enum": [
            "LIVE_AND_TIMESHIFT",
            "LIVE_ONLY",
            "TIMESHIFT_ONLY"
          ]
        },
        "packagingProfileType": {
          "type": "string",
          "description": "Type of packaging profile defined at lab wizard profile"
        },
        "password": {
          "type": "string",
          "description": "Password of origin server"
        },
        "path": {
          "type": "string",
          "description": "Path on the origin server to store the output files"
        },
        "playlistCustomTag": {
          "type": "string",
          "description": "Custom tag to add in master playlist"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port of origin server to connect to"
        },
        "profileName": {
          "type": "string",
          "description": "Name of packaging profile defined at lab wizard profile. Used to support multiple packaging with same package type."
        },
        "publishName": {
          "type": "string",
          "description": "Publish name for use in internal origin egress URL"
        },
        "redundancyMode": {
          "type": "string",
          "description": "Redundancy mode of the publishing point",
          "enum": [
            "NONE",
            "ACTIVE_ACTIVE",
            "ACTIVE_STANDBY"
          ]
        },
        "streamsPerTcpConnection": {
          "type": "string",
          "description": "Specify streams per TCP connection",
          "enum": [
            "ONE_STREAM",
            "ALL_STREAMS"
          ]
        },
        "username": {
          "type": "string",
          "description": "Username of origin server"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Variant Playlist Filename (override Variant Playlist Filename set in LabWizard HLS destination profile)"
        }
      },
      "name": "OriginOutputEndPoint"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVDestinationProfileProperties": {
      "required": [
        "encapsulationSettings",
        "pip"
      ],
      "properties": {
        "ebpAudioFragmentSize": {
          "type": "integer",
          "format": "int32"
        },
        "ebpExplicitAudio": {
          "type": "boolean",
          "description": "EBP Explicit Audio"
        },
        "ebpInterval": {
          "type": "integer",
          "format": "int32",
          "description": "EBP Interval"
        },
        "ebpOffsetInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Offset of EBP timestamp"
        },
        "ebpOnIFrame": {
          "type": "boolean",
          "description": "EBP on I Frame"
        },
        "ebpSegmentSize": {
          "type": "integer",
          "format": "int32",
          "description": "EBP Segment Size"
        },
        "ebpTimelineEnum": {
          "type": "string",
          "description": "EBP Timeline",
          "enum": [
            "e_ETT_LOCAL_TIMELINE",
            "e_ETT_INCOMING_TIMELINE"
          ]
        },
        "encapsulationSettings": {
          "description": "Encapsulation Settings.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.EncapsulationSettings"
        },
        "muteOutputOnSignalLoss": {
          "type": "boolean",
          "description": "Mute TS output when input signal loss"
        },
        "outputMode": {
          "type": "string",
          "description": "Output mode for the IPTV service.",
          "enum": [
            "e_CBR",
            "e_STATMUX"
          ]
        },
        "pip": {
          "type": "string",
          "description": "Picture in picture mode.",
          "enum": [
            "e_SPTS",
            "e_MPTS"
          ]
        }
      },
      "name": "IPTVDestinationProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiAudioTrack": {
      "required": [
        "audioTrackIndex",
        "audioTrackType"
      ],
      "properties": {
        "audioChannelPosition": {
          "type": "array",
          "description": "Audio channel positions",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiAudioChannelPosition"
          }
        },
        "audioTrackIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the audio track, starting from 1"
        },
        "audioTrackType": {
          "type": "string",
          "description": "Audio track type",
          "enum": [
            "PCM",
            "AC3",
            "EAC3",
            "DolbyE",
            "AC4"
          ]
        },
        "backUpAudioTrackIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the backup audio track, starting from 1. Value 0 means no backup audio track."
        },
        "backupTriggerTypes": {
          "type": "array",
          "description": "List of Backup Options for Audio Track, null/empty/missing indicates e_Audio_Signal_Loss",
          "items": {
            "type": "string",
            "enum": [
              "e_Audio_Signal_Loss",
              "e_Audio_MD_Missing"
            ]
          }
        },
        "delayAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the audio delay in millisecond in order to synchronize the video stream, valid range from -500 to 500 ms"
        },
        "dolbyEProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Source DolbyE program number for the audio (range 1 to 8)"
        },
        "hasNielsenWatermark": {
          "type": "boolean",
          "description": "Indicate this audio stream has Nielsen watermark"
        },
        "inputLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Audio input level"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Indicate this audio is default"
        },
        "iso639AudioType": {
          "type": "string",
          "description": "Audio Type of audio stream",
          "enum": [
            "UNDEFINED",
            "CLEAN_EFFECTS",
            "HEARING_IMPAIRED",
            "VISUAL_IMPAIRED_COMMENTARY",
            "PRIMARY",
            "NATIVE"
          ]
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of the audio track",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "Specifies the language of audio in source"
        },
        "metadataProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "The program number of the VANC metadata to be used"
        },
        "s2020MetadataSourceLabel": {
          "type": "string",
          "description": "Label of sdi data track that carries corresponding SMPTE-2020 audio metadata"
        },
        "sdid": {
          "type": "string",
          "description": "The SDID of the VANC metadata",
          "enum": [
            "e_Single_Audio_Program",
            "e_Group_1_Pair_1_2",
            "e_Group_1_Pair_3_4",
            "e_Group_2_Pair_1_2",
            "e_Group_2_Pair_3_4",
            "e_Group_3_Pair_1_2",
            "e_Group_3_Pair_3_4",
            "e_Group_4_Pair_1_2",
            "e_Group_4_Pair_3_4"
          ]
        },
        "silenceDetectionThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Duration for silence detection in ms. If audio level remains under -65dB for the duration, a notification is raised. If empty, no silence detection will be applied for the audio track. Range [500, 60000]"
        },
        "smpte2110AudioStreamProperties": {
          "description": "Describe 2110 audio stream specific properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110AudioStreamProperties"
        },
        "useDiscovery": {
          "type": "boolean",
          "description": "Indicate the usage of the discovery to know the audio input level"
        }
      },
      "name": "SdiAudioTrack"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Subtitling": {
      "properties": {
        "subtitlingInputSelection": {
          "type": "string",
          "description": "Configure Subtitling Input Selection, e.g. DVB or EBU or any",
          "enum": [
            "e_ANY_SUBTITLING",
            "e_DVB_SUBTITLING_ONLY",
            "e_EBU_SUBTITLING_ONLY"
          ]
        },
        "subtitlingOutputFormat": {
          "type": "string",
          "description": "Configure the output format of Subtitling, e.g. follow the input",
          "enum": [
            "e_FOLLOW_THE_INPUT"
          ]
        }
      },
      "name": "Subtitling"
    },
    "com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$CallbackServer": {
      "properties": {
        "authentication": {
          "description": "The authentication settings of callback server",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$Authentication"
        }
      },
      "name": "CallbackServer"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputStatsEntry": {
      "required": [
        "packetsCount",
        "recoveredPacketCount",
        "time",
        "unrecoveredPacketCount"
      ],
      "properties": {
        "packetsCount": {
          "type": "integer",
          "format": "int64",
          "description": "The packet count"
        },
        "recoveredPacketCount": {
          "type": "integer",
          "format": "int32",
          "description": "The recovered packet count"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic"
        },
        "unrecoveredPacketCount": {
          "type": "integer",
          "format": "int32",
          "description": "The unrecovered packet count"
        }
      },
      "name": "OutputStatsEntry"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToS3Config": {
      "required": [
        "assumeRoleDurationInMinutes",
        "enableNginxLogsInS3",
        "logFlushToS3IntervalInMinutes",
        "logPercentageExport",
        "s3RoleArn",
        "s3RoleSessionName",
        "upstreamUrl"
      ],
      "properties": {
        "assumeRoleDurationInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Valid duration for the credentials in AssumeRole"
        },
        "enableNginxLogsInS3": {
          "type": "boolean",
          "description": "Set to true to use enable push of nginx access logs to S3"
        },
        "logFlushToS3IntervalInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Log flush interval"
        },
        "logPercentageExport": {
          "type": "integer",
          "format": "int32",
          "description": "Log percentage export"
        },
        "s3RoleArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of the role to assume for accessing S3 bucket"
        },
        "s3RoleSessionName": {
          "type": "string",
          "description": "The Role Session Name for AssumeRole"
        },
        "upstreamUrl": {
          "type": "string",
          "description": "The HTTP URL of the upstream"
        }
      },
      "name": "AccessLogToS3Config"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiDataTrack": {
      "properties": {
        "dpiPidIndex": {
          "type": "integer",
          "format": "int32",
          "description": "This parameter enables out-of-band SCTE-104, and provides the associated dpi_pid_index. When out-of-band SCTE-104 is enabled, in-band input VANC-104 messages are discarded"
        },
        "dtmfSettings": {
          "description": "DTMF settings for conversion to SCTE-35",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DtmfSettings"
        },
        "inputLineSetting": {
          "type": "array",
          "description": "Input line settings for the SDI data",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiDataTrack$InputLineSetting"
          }
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of the data stream",
          "items": {
            "type": "string"
          }
        },
        "lossDetectionThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Data loss detection threshold in source (only OP-47 and SMPTE_2031)"
        },
        "scte104OverrideDidSdid": {
          "type": "string",
          "description": "When STBmode == STBP_MBR_DPI_PROPRIETARY, VANC SCTE-104 will be decoded from VANC packets with DID == 0x45 and SDID 0x01, INSTEAD of the SCTE-104 standard DID == 0x41 and SDID 0x07",
          "enum": [
            "e_41_07",
            "e_45_01"
          ]
        },
        "smpte2110DataStreamProperties": {
          "description": "Describe 2110 data stream specific properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110DataStreamProperties"
        },
        "teletextDescriptions": {
          "type": "array",
          "description": "Descriptions of teletext components in source",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TeletextDescription"
          }
        },
        "teletextMode": {
          "type": "string",
          "description": "Specifies which teletext mode is used",
          "enum": [
            "NORMAL",
            "LOW_DELAY"
          ]
        },
        "teletextToDvbSubsSetting": {
          "description": "Obsolete",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TeletextToDvbSubsSetting"
        }
      },
      "name": "SdiDataTrack"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AudioStream": {
      "properties": {
        "aacAudioProperties": {
          "description": "Properties of AAC audio stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AACAudioProperties"
        },
        "aes3AudioProperties": {
          "description": "Properties of AES3 audio stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AES3AudioProperties"
        },
        "audioStreamType": {
          "type": "string",
          "description": "Type of audio stream",
          "enum": [
            "MPEG",
            "AAC",
            "DOLBY_E",
            "DOLBY_DIGITAL",
            "DOLBY_DIGITAL_PLUS",
            "DOLBY_AC4",
            "AES3"
          ]
        },
        "descriptors": {
          "type": "array",
          "description": "Descriptors of audio stream",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Descriptor"
          }
        },
        "dolbyAc4Properties": {
          "description": "Properties of dolby digital AC4 audio stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DolbyAC4Properties"
        },
        "dolbyAudioSystemType": {
          "type": "string",
          "description": "Type of audio system type",
          "enum": [
            "ATSC",
            "DVB"
          ]
        },
        "dolbyDigitalAudioProperties": {
          "description": "Properties of dolby digital audio stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DolbyDigitalAudioProperties"
        },
        "dolbyEAudioProperties": {
          "description": "Properties of dolby E audio stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DolbyEAudioProperties"
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Max Bitrate of audio stream"
        },
        "mpegAudioProperties": {
          "description": "Properties of MPEG audio stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MPEGAudioProperties"
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of audio stream"
        },
        "sampleRate": {
          "type": "integer",
          "format": "int32",
          "description": "SampleRate of audio stream"
        },
        "scrambled": {
          "type": "boolean",
          "description": "Scrambled status of audio stream"
        }
      },
      "name": "AudioStream"
    },
    "com.harmonicinc.vos.app.configure.model.destination.ZixiEncryptionParams": {
      "properties": {
        "encryptionKey": {
          "type": "string",
          "description": "Zixi encryption key"
        },
        "encryptionType": {
          "type": "string",
          "description": "Zixi encryption type",
          "enum": [
            "ZIXI_AES_128",
            "ZIXI_AES_192",
            "ZIXI_AES_256",
            "ZIXI_NO_ENCRYPTION"
          ]
        }
      },
      "name": "ZixiEncryptionParams"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties$VideoStreamSelectionItem": {
      "properties": {
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties$VideoStreamSelectionItem$BitrateRange"
        },
        "groupId": {
          "type": "string",
          "description": "groupId"
        },
        "videoCodecSelection": {
          "type": "string",
          "description": "videoCodecSelection",
          "enum": [
            "H_265",
            "H_264",
            "ALL"
          ]
        }
      },
      "name": "VideoStreamSelectionItem"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$HeaderAuthConfig$HeaderParam": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "name": "HeaderParam"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.InputStatus": {
      "properties": {
        "rankIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Indicate the current active input for this source in this service, values: 1 or 2."
        },
        "syncloss": {
          "type": "boolean",
          "description": "Tell if input is connected (false) or connection is lost (true)"
        }
      },
      "name": "InputStatus"
    },
    "com.harmonicinc.vos.app.configure.model.destination.GpioOutput": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable the GPIO output feature: on SCTE-104 splice_insert with out_of_network_indicator=1 on SDI 1 (resp. SDI 2), a ~500ms contact closure between pins 1 & 11 (resp. 2 and 12) of the DB15HD connector will start at splice-point. Available only for ports 1 & 2 of SDI card 1."
        },
        "preroll": {
          "type": "integer",
          "format": "int32",
          "description": "Preroll in ms: allows to start the contact closure before or after the splice-point.",
          "minimum": -500,
          "maximum": 10000
        }
      },
      "name": "GpioOutput"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.scte35.SendScte35MessageProperties": {
      "required": [
        "hexMessage",
        "scte35Labels",
        "spliceTimecode"
      ],
      "properties": {
        "hexMessage": {
          "type": "string",
          "description": "SCTE-35 message in hexadecimal format"
        },
        "scte35Labels": {
          "type": "array",
          "description": "List of SCTE-35 label(s) configured in playout source",
          "items": {
            "type": "string"
          }
        },
        "spliceTimecode": {
          "type": "string",
          "description": "Splice time in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        }
      },
      "name": "SendScte35MessageProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventInternal": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time"
        },
        "mdsDesiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "SCHEDULED",
            "FINISHED"
          ]
        },
        "streamingUnit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "PreWarmEventInternal"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.DownlinkOutputStatisticEntry": {
      "required": [
        "outputBitrate",
        "time"
      ],
      "properties": {
        "outputBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The ingest bitrate (bps) of output"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic, e.g. 2015-11-04T09:11:33Z"
        }
      },
      "name": "DownlinkOutputStatisticEntry"
    },
    "com.harmonicinc.vos.app.configure.model.source.OttPlayoutInput": {
      "properties": {
        "defaultAssetUrl": {
          "type": "string"
        }
      },
      "name": "OttPlayoutInput"
    },
    "com.harmonicinc.vos.mux.model.tslevel.NitParameters": {
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "input object id. Ignored when nitMode is not PASSTHROUGH"
        },
        "inputPid": {
          "type": "integer",
          "format": "int32",
          "description": "input PID. Ignored when nitMode is not PASSTHROUGH"
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Table interval (1000-10000 milliseconds). Relevant for GENERATE"
        },
        "networkId": {
          "type": "string",
          "description": "Network Object Id. Relevant for GENERATE"
        },
        "nitMode": {
          "type": "string",
          "description": "NIT mode",
          "enum": [
            "NONE",
            "PASSTHROUGH",
            "GENERATE"
          ]
        }
      },
      "name": "NitParameters"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Descriptor": {
      "required": [
        "captionServiceDescriptor",
        "customDescriptor",
        "descriptorType",
        "dvbSubtitlingDescriptor",
        "iso639Descriptor",
        "teletextDescriptor"
      ],
      "properties": {
        "captionServiceDescriptor": {
          "description": "Caption Service Descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.CaptionServiceDescriptor"
        },
        "customDescriptor": {
          "description": "Custom descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.CustomDescriptor"
        },
        "descriptorType": {
          "type": "string",
          "description": "Type of descriptor",
          "enum": [
            "ISO639",
            "DVB_SUBTITLING",
            "CAPTION_SERVICE",
            "TELETEXT",
            "TTML",
            "CUSTOM"
          ]
        },
        "dvbSubtitlingDescriptor": {
          "description": "Dvb descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DVB_SubtitlingDescriptor"
        },
        "iso639Descriptor": {
          "description": "ISO639 descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.ISO639Descriptor"
        },
        "teletextDescriptor": {
          "description": "Teletext descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.TeletextDescriptor"
        },
        "ttmlDescriptor": {
          "description": "TTML Descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.TtmlDescriptor"
        }
      },
      "name": "Descriptor"
    },
    "com.harmonicinc.vos.app.configure.model.GeneralSettings$SourceType": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "name": "SourceType"
    },
    "com.harmonicinc.vos.labwizard.rest.model.TeletextToDvbSubtitleConversionProperties": {
      "properties": {
        "ancillaryPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete. Ancillary Page Id, default: 0, range: 0-255"
        },
        "bkgTransparency": {
          "type": "integer",
          "format": "int32",
          "description": "Background transparency, default: 100, range 0-100"
        },
        "dvbPageTimeout": {
          "type": "number",
          "format": "double",
          "description": "Specifies the DVB PageTimeOut value (in sec) encoded into the page segment. Value should be multiple of 0.5. Default: 0"
        },
        "font": {
          "type": "string",
          "description": "Font name, default: dejavu"
        },
        "fontDensity": {
          "type": "number",
          "format": "double",
          "description": "Horizontal font density. A value of 1.0 equals 1em of the font mapped to the teletext cell size. 2.0 will map 2em into the one cell.\nFor fixed sized fonts a value of 1 is recommended, but for true type a value of 1.4 looks much better. Default: 1.4"
        },
        "frameSize": {
          "type": "string",
          "description": "Dvb subtitle frame size. Default: e_FOLLOW_OUTPUT. Note: value e_768x576 means SD 720x576",
          "enum": [
            "e_1920x1080",
            "e_1280x720",
            "e_768x576",
            "e_FOLLOW_OUTPUT"
          ]
        },
        "language": {
          "type": "string",
          "description": "Teletext language. default:ENG",
          "enum": [
            "ENG",
            "DEU",
            "SWE",
            "FIN",
            "HUN",
            "ITA",
            "FRA",
            "POR",
            "SPA",
            "CES",
            "SLK",
            "POL",
            "TUR",
            "SRP",
            "HRV",
            "SLV",
            "RON",
            "EST",
            "LAV",
            "LIT",
            "RUS",
            "BUL",
            "UKR",
            "ELL",
            "ARA",
            "HEB"
          ]
        },
        "pageId": {
          "type": "integer",
          "format": "int32",
          "description": "Page Id, default: 0, range: 0-255"
        },
        "subtitleType": {
          "type": "string",
          "description": "Output DVB subtitle descriptor type. default:e_NORMAL_0x10",
          "enum": [
            "e_NORMAL_0x10",
            "e_NORMAL_4_3_0x11",
            "e_NORMAL_16_9_0x12",
            "e_NORMAL_2_21_1_0x13",
            "e_NORMAL_HD_0x14",
            "e_HEARING_0x20",
            "e_HEARING_4_3_0x21",
            "e_HEARING_16_9_0x22",
            "e_HEARING_2_21_1_0x23",
            "e_HEARING_HD_0x24"
          ]
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Teletext type. Initial Teletext page, Teletext Subtitle Page, Additional Information Page, Hearing Impaired, Program Schdule Page"
        },
        "txtOutlineWidth": {
          "type": "number",
          "format": "double",
          "description": "Outline width in pixel, default: 0, range: 0.0-10.0"
        }
      },
      "name": "TeletextToDvbSubtitleConversionProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.HideFromLiveContentConfig": {
      "required": [
        "hideFromLiveContentInSec"
      ],
      "properties": {
        "hideFromLiveContentInSec": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the from-live content to hide in seconds"
        }
      },
      "name": "HideFromLiveContentConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.ActionParameters": {
      "properties": {
        "actionTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "e_CLONE",
              "e_TRIM",
              "e_TRANSCODE",
              "e_GROOM",
              "e_VQ",
              "e_REINDEX"
            ]
          }
        },
        "cloneParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.CloneParameters"
        },
        "groomingParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.GroomingParameters"
        },
        "transcodingParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.TranscodingParameters"
        },
        "trimParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.TrimParameters"
        },
        "vqParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.VideoQualityParameters"
        }
      },
      "name": "ActionParameters"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Video": {
      "properties": {
        "aribAspectRatioConversionMode": {
          "type": "string",
          "description": "This feature implements proprietary handling of 1080i to 480i scaling.\nWhen aribAspectRatioConversionMode is set to e_ANAMORPHIC, video mode change follows the ARIB B.32 spec.\nWhen aribAspectRatioConversionMode is set to e_PRESERVER_ASPECT_RATIO, VAR is always set to 4x3, regardless of input.\nWhen input VRAR is 0(4x3), a center-cut operation is performed; when VRAR is 1 (16x9), a letterbox transformation is performed.\nWhen aribAspectRatioConversionMode is set to e_FORCE_PROPRIETARY_LETTERBOX_MODE, output VAR and DRAR are set to 4x3,\nregardless of input, and a letterbox transformation is performed.",
          "enum": [
            "e_ANAMORPHIC",
            "e_PRESERVE_ASPECT_RATIO",
            "e_FORCE_PROPRIETARY_LETTERBOX_MODE"
          ]
        },
        "aspectRatio": {
          "type": "string",
          "description": "Aspect ratio of video",
          "enum": [
            "e_16_9",
            "e_4_3",
            "e_PASSTHROUGH"
          ]
        },
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate of video in bps"
        },
        "bitrateMaximumAvailable": {
          "type": "boolean",
          "description": "Maximum available means device need to automatically calculate the video bitrate by subtracting all the configured or passthrough audio/data streams bitrates from configured Max bitrate. When  any audio/data stream becomes unavailable, device need to adjust the video bitrate by adding the unused bandwidth which was allocated by the audio/data stream."
        },
        "cbrDuringAdProperties": {
          "description": "Bitrate Properties during AD time",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$CbrDuringAdProperties"
        },
        "closedCaption": {
          "type": "string",
          "description": "Closed captions passthrough setting",
          "enum": [
            "e_AUTO",
            "e_ATSC",
            "e_NONE"
          ]
        },
        "codec": {
          "type": "string",
          "description": "Video codec used for converting",
          "enum": [
            "e_HEVC",
            "e_AVC",
            "e_MPEG2",
            "e_BASEBAND"
          ]
        },
        "descriptorMode": {
          "type": "string",
          "description": "Reserved",
          "enum": [
            "e_LEGACY",
            "e_MANUAL",
            "e_DYNAMIC_PASSTHROUGH"
          ]
        },
        "dolbyVisionConfigFile": {
          "type": "string",
          "description": "Dolby-Vision Configuration file path"
        },
        "dvbAuInfor": {
          "type": "boolean",
          "description": "Enable DVB AU Information"
        },
        "dynamicFrameRateMode": {
          "type": "string",
          "description": "Enable Dynamic Frame Rate mode per service",
          "enum": [
            "e_OFF",
            "e_AUTO"
          ]
        },
        "ebpMode": {
          "type": "string",
          "description": "Encoder boundary point structure standard",
          "enum": [
            "e_NONE",
            "e_PRE_STANDARD",
            "e_CABLELABS",
            "e_CABLELABS_ATS"
          ]
        },
        "enableOutputAfd": {
          "type": "boolean",
          "description": "Obsolete"
        },
        "enableVideoModeChange": {
          "type": "boolean",
          "description": "Enable/Disable VANC control for video mode change"
        },
        "enableVitcOutput": {
          "type": "boolean",
          "description": "Enable VITC output"
        },
        "encodingLevel": {
          "type": "string",
          "description": "Obsolete: use encodingLevelV2 instead",
          "enum": [
            "e_H264_AUTO",
            "e_H264_1",
            "e_H264_1_1",
            "e_H264_1_2",
            "e_H264_1_3",
            "e_H264_2",
            "e_H264_2_1",
            "e_H264_2_2",
            "e_H264_3",
            "e_H264_3_1",
            "e_H264_3_2",
            "e_H264_4",
            "e_H264_4_1",
            "e_H264_4_2",
            "e_H264_5",
            "e_H264_5_1",
            "e_H264_5_2",
            "e_H265_AUTO",
            "e_H265_1",
            "e_H265_2",
            "e_H265_2_1",
            "e_H265_3",
            "e_H265_3_1",
            "e_H265_4",
            "e_H265_4_1",
            "e_H265_5",
            "e_H265_5_1",
            "e_H265_5_2",
            "e_H265_6",
            "e_H265_6_1",
            "e_H265_6_2",
            "e_MPEG2_AUTO",
            "e_MPEG2_MAIN",
            "e_MPEG2_HIGH"
          ]
        },
        "encodingLevelV2": {
          "type": "string",
          "description": "Encoding level for video",
          "enum": [
            "e_H264_AUTO",
            "e_H264_1",
            "e_H264_1_1",
            "e_H264_1_2",
            "e_H264_1_3",
            "e_H264_2",
            "e_H264_2_1",
            "e_H264_2_2",
            "e_H264_3",
            "e_H264_3_1",
            "e_H264_3_2",
            "e_H264_4",
            "e_H264_4_1",
            "e_H264_4_2",
            "e_H264_5",
            "e_H264_5_1",
            "e_H264_5_2",
            "e_H265_AUTO",
            "e_H265_1",
            "e_H265_2",
            "e_H265_2_1",
            "e_H265_3",
            "e_H265_3_1",
            "e_H265_4",
            "e_H265_4_1",
            "e_H265_5",
            "e_H265_5_1",
            "e_H265_5_2",
            "e_H265_6",
            "e_H265_6_1",
            "e_H265_6_2",
            "e_MPEG2_AUTO",
            "e_MPEG2_MAIN",
            "e_MPEG2_HIGH"
          ]
        },
        "encodingProfile": {
          "type": "string",
          "description": "Encoding profile for video",
          "enum": [
            "e_H264_HIGH",
            "e_H264_MAIN",
            "e_H264_BASELINE",
            "e_H265_MAIN",
            "e_H265_MAIN_10_BIT",
            "e_MPEG2_MAIN",
            "e_H264_HIGH_422"
          ]
        },
        "framerate": {
          "type": "string",
          "description": "Frame rate of video",
          "enum": [
            "e_25",
            "e_29_97",
            "e_50",
            "e_59_94",
            "e_23_98",
            "e_FOLLOW_INPUT"
          ]
        },
        "gopLenM": {
          "type": "string",
          "description": "GOP Len M",
          "enum": [
            "e_AUTO",
            "e_IP",
            "e_IBP",
            "e_IBBP",
            "e_IBBBP",
            "e_IBBBBBBBP"
          ]
        },
        "gopLenN": {
          "type": "integer",
          "format": "int32",
          "description": "GOP Len N"
        },
        "gopOption": {
          "type": "string",
          "description": "GOP option",
          "enum": [
            "e_OPEN_FIXED",
            "e_OPEN_VARIABLE",
            "e_OPEN_CAPPED",
            "e_CLOSED_FIXED",
            "e_CLOSED_VARIABLE",
            "e_OPEN_FIXED_M",
            "e_CLOSED_FIXED_M"
          ]
        },
        "hdrDynamicMetadataPassthrough": {
          "type": "boolean",
          "description": "Enable the Dolby-Vision 8.1 or AHDR SL-HDR1 metadata passthrough. If the input is HEVC with metadata, the metadata will be passthrough, otherwise they are generated. False by default."
        },
        "hdrMetadataMode": {
          "type": "string",
          "description": "Select HDR10 metadata generation method : manual, auto",
          "enum": [
            "e_MANUAL",
            "e_AUTO"
          ]
        },
        "hdrMetadataPreset": {
          "type": "string",
          "description": "Choose HDR10 preset from selection",
          "enum": [
            "e_BT_2020",
            "e_DCI_P3_THEATER",
            "e_DCI_P3_DISPLAY"
          ]
        },
        "hdrSignaling": {
          "type": "string",
          "description": "HDR Signaling, work with HEVC codec and H265 Main10 encoding Profile",
          "enum": [
            "e_NONE",
            "e_PASSTHROUGH",
            "e_BT_709_HLG",
            "e_BT_709_SDR",
            "e_BT_2020",
            "e_BT_2020_HLG",
            "e_BT_2020_HLG_14",
            "e_BT_2020_HDR10",
            "e_BT_2020_DoVi_5",
            "e_BT_2020_DoVi_8_1",
            "e_BT_2020_DoVi_8_1_ST2094_40",
            "e_BT_2020_DoVi_8_4",
            "e_BT_2020_DoVi_8_4_14",
            "e_BT_2020_ST2094_10",
            "e_BT_2020_ST2094_40",
            "e_BT_2020_ST2094_10_40",
            "e_BT_709_SL_HDR1",
            "e_BT_2020_DR_PASSTHROUGH",
            "e_BT_709_DR_PASSTHROUGH"
          ]
        },
        "idrPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "IDR frame period of video in second"
        },
        "irisVQBoost": {
          "type": "string",
          "description": "Select to improve the VQ by adjusting the on/off/setting of each video filter, based on input frames",
          "enum": [
            "e_DISABLED",
            "e_ENABLED"
          ]
        },
        "keepGfxColorSpace": {
          "type": "boolean",
          "description": "Disable GFX color-space conversion"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of video",
          "items": {
            "type": "string"
          }
        },
        "latencyOption": {
          "type": "string",
          "description": "Set latency mode: low, reduced, default",
          "enum": [
            "e_2_5",
            "e_3_5",
            "e_5_5",
            "e_LOW",
            "e_REDUCED",
            "e_DEFAULT"
          ]
        },
        "lookAheadBuffer": {
          "type": "string",
          "description": "Obsolete, decide by latencyOption, Look ahead buffer size in milliseconds",
          "enum": [
            "e_500",
            "e_1000"
          ]
        },
        "lutHlgBt2020ToSdrBt709": {
          "type": "string",
          "description": "LUT file configuraton for BT.2020 HLG to BT.709 SDR conversion"
        },
        "lutPqBt2020ToSdrBt709": {
          "type": "string",
          "description": "LUT file configuraton for BT.2020 PQ to BT.709 SDR conversion"
        },
        "lutSdrBt709ToHlgBt2020": {
          "type": "string",
          "description": "LUT file configuraton for BT.709 SDR to BT.2020 HLG conversion"
        },
        "lutSdrBt709ToPqBt2020": {
          "type": "string",
          "description": "LUT file configuraton for BT.709 SDR to BT.2020 PQ conversion"
        },
        "maxCll": {
          "type": "integer",
          "format": "int32",
          "description": "Configure maximum content light level for HDR10 metadata"
        },
        "maxFall": {
          "type": "integer",
          "format": "int32",
          "description": "Configure maximum average frame level for HDR10 metadata"
        },
        "maxLuminance": {
          "type": "integer",
          "format": "int32",
          "description": "Configure maximum luminance for HDR10 metadata"
        },
        "minLuminance": {
          "type": "integer",
          "format": "int32",
          "description": "Configure minimum luminance for HDR10 metadata"
        },
        "muteOutputAfd": {
          "type": "boolean",
          "description": "Mute output AFD, default : false"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the video"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 481 if not defined in source grooming (non-TS source for example). Any other value is not recommended and will behave as -1 in current version."
        },
        "outputPipPid": {
          "type": "integer",
          "format": "int32",
          "description": "PIP Output PID of the video"
        },
        "pictureEnhancement": {
          "type": "string",
          "description": "Picture color enhancement control",
          "enum": [
            "e_DISABLE",
            "e_WEAK",
            "e_VERY_WEAK",
            "e_VIVID",
            "e_TONE_EXPANSION",
            "e_TONE_EXPANSION_PRO"
          ]
        },
        "pipBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate of PIP video in bps"
        },
        "pipEncodingLevel": {
          "type": "string",
          "description": "Encoding level for PIP video",
          "enum": [
            "e_H264_AUTO",
            "e_H264_1",
            "e_H264_1_1",
            "e_H264_1_2",
            "e_H264_1_3",
            "e_H265_AUTO",
            "e_H265_2"
          ]
        },
        "pipEncodingProfile": {
          "type": "string",
          "description": "Encoding profile for pip",
          "enum": [
            "e_H264_HIGH",
            "e_H264_MAIN",
            "e_H264_BASELINE",
            "e_H265_MAIN",
            "e_H265_MAIN_10_BIT",
            "e_MPEG2_MAIN"
          ]
        },
        "pipFramerate": {
          "type": "string",
          "description": "Frame rate of PIP video",
          "enum": [
            "e_14_98",
            "e_25",
            "e_29_97"
          ]
        },
        "pipGenerate": {
          "type": "boolean",
          "description": "PIP Generate"
        },
        "pipIsdbt1seg": {
          "type": "boolean",
          "description": "PIP as ISDB-T 1-SEG"
        },
        "pipResolutionHV": {
          "type": "string",
          "description": "Horizontal and Vertical Resolution of PIP video",
          "enum": [
            "e_96x96",
            "e_128x96",
            "e_192x192",
            "e_144x192",
            "e_192x144",
            "e_320x180",
            "e_320x240"
          ]
        },
        "processing": {
          "type": "string",
          "description": "Convert or pass-through video",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "ptsSpacingOption": {
          "type": "string",
          "description": "PTS Spacing Option",
          "enum": [
            "e_COMPLIANT",
            "e_UNCONSTRAINED"
          ]
        },
        "resolution": {
          "type": "string",
          "description": "Vertical Resolution of video",
          "enum": [
            "e_480I",
            "e_576I",
            "e_720P",
            "e_1080I",
            "e_1080P",
            "e_1440P",
            "e_1800P",
            "e_2160P",
            "e_540P"
          ]
        },
        "resolutionHV": {
          "type": "string",
          "description": "Horizontal and Vertical Resolution of video",
          "enum": [
            "e_352x480I",
            "e_480x480I",
            "e_528x480I",
            "e_544x480I",
            "e_640x480I",
            "e_704x480I",
            "e_720x480I",
            "e_352x576I",
            "e_480x576I",
            "e_528x576I",
            "e_544x576I",
            "e_640x576I",
            "e_704x576I",
            "e_720x576I",
            "e_640x720P",
            "e_960x720P",
            "e_1280x720P",
            "e_960x1080I",
            "e_1280x1080I",
            "e_1440x1080I",
            "e_1920x1080I",
            "e_960x1080P",
            "e_1280x1080P",
            "e_1440x1080P",
            "e_1920x1080P",
            "e_2560x1440P",
            "e_3200x1800P",
            "e_3840x2160P",
            "e_960x540P",
            "e_FOLLOW_INPUT"
          ]
        },
        "reverseTelecine": {
          "type": "boolean",
          "description": "Enable Reverse Telecine per service"
        },
        "segmentSize": {
          "type": "integer",
          "format": "int32",
          "description": "Segment size defined with encoder boundary point"
        },
        "slHdr1ConfigFile": {
          "type": "string",
          "description": "AHDR SL-HDR1 Configuration file path"
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of video",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        },
        "stressBias": {
          "type": "string",
          "description": "Controls the stress on the encoded content at various bit rates",
          "enum": [
            "e_CLEAN",
            "e_BALANCED",
            "e_SHARP"
          ]
        },
        "vbvDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete, decide by latencyOption, Video buffering verifier buffer time in miliseconds, and value under 10 represents time in seconds"
        },
        "videoFixedImageConversion": {
          "type": "string",
          "description": "Obsolete",
          "enum": [
            "e_NONE",
            "e_FORCE_CENTER_CUT",
            "e_CONVERT_14_9_PILLARBOX_TO_LETTERBOX",
            "e_SQUEEZE_TO_ANAMORPHIC",
            "e_FORCE_PILLAR",
            "e_FORCE_LETTER",
            "e_REMOVE_LETTER",
            "e_CONVERT_LETTER_TO_PILLAR_14_9",
            "e_ANAMORPHIC"
          ]
        },
        "vqMode": {
          "type": "string",
          "description": "Video quality mode, preference between density and quality",
          "enum": [
            "e_AUTOMATIC",
            "e_HIGH_VQ",
            "e_OBJECTIVE",
            "e_HIGH_DENSITY"
          ]
        }
      },
      "name": "Video"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.HorizontalResolutionRange": {
      "properties": {
        "maxHorizontalResolution": {
          "type": "integer",
          "format": "int32"
        },
        "minHorizontalResolution": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "HorizontalResolutionRange"
    },
    "com.harmonicinc.vos.app.configure.model.SrtConnectionInfo": {
      "properties": {
        "lowerLatencyLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Lower latency limit (based on recommended latency)"
        },
        "rtt": {
          "type": "integer",
          "format": "int32",
          "description": "Round-trip time"
        },
        "upperLatencyLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Upper latency limit"
        }
      },
      "name": "SrtConnectionInfo"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkStatistic": {
      "required": [
        "downlinkInputStatisticList",
        "uplinkOutputStatisticList"
      ],
      "properties": {
        "downlinkInputStatisticList": {
          "type": "array",
          "description": "The event description of the Downlink input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.DownlinkInputStatisticEntry"
          }
        },
        "uplinkOutputStatisticList": {
          "type": "array",
          "description": "The event description of the Uplink output",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkOutputStatisticEntry"
          }
        }
      },
      "name": "UplinkStatistic"
    },
    "com.harmonicinc.vos.app.configure.model.service.DemuxAddon": {
      "properties": {
        "camAddon": {
          "description": "CAM add-on",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.CamAddon"
        },
        "demuxType": {
          "type": "string",
          "description": "e_DVB: monitoring data will include service name, type and provider extracted from SDT. e_ATSC : monitoring data will include short name and major/minor channel number extracted from VCT.",
          "enum": [
            "e_DVB",
            "e_ATSC"
          ]
        },
        "descramblingKeys": {
          "type": "array",
          "description": "List of descrambling keys associated to a program",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DescramblingKey"
          }
        },
        "descramblingPrograms": {
          "type": "array",
          "description": "List of programs to descramble with BISS-CA",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DescramblingProgram"
          }
        },
        "highJitter": {
          "type": "boolean",
          "description": "Enable support of source with high jitter. As a side effect, it increases the demux latency to 1 second"
        }
      },
      "name": "DemuxAddon"
    },
    "com.harmonicinc.vos.mux.model.programlevel.eas.EasChannelInputIdentifier": {
      "required": [
        "inputObjectId",
        "inputProgramNumber"
      ],
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "The sourceId for the eas channel"
        },
        "inputProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Input program number for the eas channel"
        }
      },
      "name": "EasChannelInputIdentifier"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.VerticalResolutionRange": {
      "properties": {
        "maxVerticalResolution": {
          "type": "integer",
          "format": "int32"
        },
        "minVerticalResolution": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "VerticalResolutionRange"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem": {
      "required": [
        "encryptionInterfaceType",
        "id",
        "keyManagementServers",
        "name",
        "requestorId"
      ],
      "properties": {
        "cpixDocumentVersion": {
          "type": "string",
          "description": "CPIX document version",
          "enum": [
            "e_2_2",
            "e_2_3"
          ]
        },
        "customHeader": {
          "description": "Custom Header in HTTP Requests connecting to Harmonic KMS",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmCustomHeader"
        },
        "drmGroups": {
          "type": "array",
          "description": "List of DRM Group",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmGroup"
          }
        },
        "embeddedDrmTrackFilters": {
          "type": "array",
          "description": "Embedded DRM filtering profile properties. It is required in NMS configuration",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.EmbeddedDrmTrackFilter"
          }
        },
        "encryptionInterfaceType": {
          "type": "string",
          "description": "Encryption Intreface Type",
          "enum": [
            "e_HKMS_MIN",
            "e_HKMS_FULL",
            "e_WIDEVINE",
            "e_KSM_CPIX",
            "e_INTERNAL",
            "e_FIXED_KEY",
            "e_VERIMATRIX_CPIX",
            "e_APPLE_CPIX",
            "e_HKMS_CPIX"
          ]
        },
        "enforceKeyEncryptionValidation": {
          "type": "boolean",
          "description": "Boolean value to verify that the key from the Harmonic CPIX response is encrypted"
        },
        "httpMethod": {
          "type": "string",
          "description": "Option to use GET HTTP method for requesting DRM metadata",
          "enum": [
            "POST",
            "GET"
          ]
        },
        "id": {
          "type": "string",
          "description": "ID of DRM System"
        },
        "insertContentKeyPeriodIndex": {
          "type": "boolean",
          "description": "Boolean to force inserting of ContentKeyPeriod@Index into Harmonic CPIX request when key rotation is disabled (for backward compatibility purpose only)"
        },
        "insertDeliveryKeyCertificate": {
          "type": "boolean",
          "description": "Boolean to control inserting of DeliveryKeyCertificate into Harmonic CPIX request"
        },
        "insertDrmSystemIdInRequest": {
          "type": "boolean",
          "description": "Boolean to control inserting DRM system ID or not during key retrieval"
        },
        "keyDefaultValue": {
          "type": "string"
        },
        "keyManagementServers": {
          "type": "array",
          "description": "Key Management Servers",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmKms"
          }
        },
        "keyRequestSign": {
          "type": "boolean",
          "description": "Enabling / disabling digital signature of key requests"
        },
        "keyResponsesSignatureValidate": {
          "type": "boolean",
          "description": "Enabling / disabling the validation of key responses signature"
        },
        "keyRotationSettings": {
          "description": "KeyRotation settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.KeyRotationSettings"
        },
        "kmsRequestHlsTsCommonEncryptionScheme": {
          "type": "string",
          "description": "Common Encryption Scheme for HLS-sTS",
          "enum": [
            "NONE",
            "CBC1",
            "CBCS"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of DRM System"
        },
        "requestorId": {
          "type": "string",
          "description": "Requestor Id"
        },
        "resources": {
          "type": "array",
          "description": "Resources",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmResource"
          }
        },
        "useProxy": {
          "type": "boolean",
          "description": "Boolean value to use / not use Proxy endpoints"
        },
        "widevineConfig": {
          "description": "Widevine-specific configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.WidevineConfig"
        }
      },
      "name": "DrmSystem"
    },
    "com.harmonicinc.vos.app.configure.model.source.TeletextToDvbSubsSetting": {
      "required": [
        "ancillaryPageId",
        "font",
        "forceDDS",
        "language",
        "latency",
        "pageId",
        "pageNumber",
        "teletextTimeout",
        "transparencyLevel"
      ],
      "properties": {
        "ancillaryPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Ancillary Page Id, default: 0, range: 0-255"
        },
        "font": {
          "type": "string",
          "description": "Font name, default: DejaVuSans.ttf.  Value is the file name including dot-extension.  Special case 'dejavu' mapped to 'DejaVuSans.ttf' internally."
        },
        "forceDDS": {
          "type": "boolean",
          "description": "Force DDS, default: false"
        },
        "language": {
          "type": "string",
          "description": "Language, default:English"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency in ms, default: 500, range: 40-1000 ms"
        },
        "pageId": {
          "type": "integer",
          "format": "int32",
          "description": "Page Id, default: 0, range: 0-255"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Page Number, default: 256, range: 256 - 2201, For reference in Hex 0x100 - 0x899"
        },
        "teletextTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Teletext Timeout in ms, default: 10, range: 0-9999 ms"
        },
        "transparencyLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Transparency Level, default: 0, range: 0-100"
        }
      },
      "name": "TeletextToDvbSubsSetting"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorIpSource": {
      "required": [
        "ipAddress",
        "ipPort"
      ],
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive input. IPv4 is supported"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive input"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "MonitorIpSource"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequencePrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "eventType": {
          "type": "string",
          "description": "Event type, File (including recorded file) or Live",
          "enum": [
            "FILE",
            "LIVE",
            "COMMENT"
          ]
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        }
      },
      "name": "InsertSequencePrimaryProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerAssetExport": {
      "properties": {
        "destination": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerExportDestination"
        },
        "outputId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "transcodeExporting": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.TranscodeExporting"
        },
        "type": {
          "type": "string",
          "enum": [
            "PACKAGE",
            "TRANSCODE"
          ]
        }
      },
      "name": "FileServerAssetExport"
    },
    "com.harmonicinc.vos.app.atm.datatypes.Profiles": {
      "required": [
        "profiles"
      ],
      "properties": {
        "profiles": {
          "type": "array",
          "description": "Manifest Filtering Profiles",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.Profile"
          }
        }
      },
      "name": "Profiles"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutVideoConfiguration": {
      "required": [
        "frameRate",
        "resolution"
      ],
      "properties": {
        "captionServiceDescriptor": {
          "description": "Caption Service Descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutCaptionServiceDescriptor"
        },
        "frameRate": {
          "description": "FrameRate of generated video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.FrameRate"
        },
        "resolution": {
          "description": "Resolution of generated video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Resolution"
        }
      },
      "name": "PlayoutVideoConfiguration"
    },
    "com.harmonicinc.vos.app.configure.model.GeneralSettings$Region": {
      "properties": {
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "name": "Region"
    },
    "com.harmonicinc.vos.app.configure.model.source.CloudSourceInput": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "backupPipeId": {
          "type": "string",
          "description": "Identifier pipe the backup source"
        },
        "connectionMode": {
          "type": "string",
          "description": "SRT connetion establishing mode",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "name": {
          "type": "string",
          "description": "CloudSource name the source originates from"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "pipeId": {
          "type": "string",
          "description": "Identifier pipe the source originates from"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "protocol": {
          "type": "string",
          "description": "SRT protocol"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "srtCloudSourceSettings": {
          "description": "Basic cloudSource settings. Used in CloudSource Input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SrtCloudSourceSettings"
        }
      },
      "name": "CloudSourceInput"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.HarmonicUplinkSetting": {
      "properties": {
        "descramblingKey": {
          "type": "string",
          "description": "Descrambling key"
        },
        "descramblingRequired": {
          "type": "boolean",
          "description": "Whether descrambling is required"
        },
        "ipAddress": {
          "type": "string",
          "description": "IPv4 or IPv6 address to receive the input"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP port to receive the input"
        },
        "ipPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port range end used to receive input"
        },
        "pidList": {
          "type": "array",
          "description": "PID list",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "programId": {
          "type": "integer",
          "format": "int32",
          "description": "Program ID"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        },
        "uplinkGroupId": {
          "type": "string",
          "description": "Id of the uplinkGroup"
        },
        "uplinkId": {
          "type": "string",
          "description": "Id of the uplink"
        }
      },
      "name": "HarmonicUplinkSetting"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalAudioSetting": {
      "required": [
        "copyRight"
      ],
      "properties": {
        "copyRight": {
          "type": "string",
          "description": "Specifies copyRight properties of audio",
          "enum": [
            "COPYRIGHTED_ORIGINAL",
            "COPYRIGHTED_COPY",
            "UNCOPYRIGHTED_ORIGINAL",
            "UNCOPYRIGHTED_COPY"
          ]
        }
      },
      "name": "GlobalAudioSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.TtmlToDvbSubtitleConversionProperties": {
      "properties": {
        "bkgColor": {
          "type": "string",
          "description": "Returns the RGBA background color to overwrite all background colors with. Default value is taken from the subtitle"
        },
        "dvbPageTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Returns the DVB PageTimeOut value (in sec) encoded into the page segment. Default: 10"
        },
        "font": {
          "type": "string",
          "description": "Returns the File name of the font to use. Default value is 'dejavu'"
        },
        "fontDensity": {
          "type": "number",
          "format": "float",
          "description": "Returns the horizontal font density. A value of 1.0 corresponds to 40 columns in the display. Default: 1.0"
        },
        "txtOutlineWidth": {
          "type": "number",
          "format": "float",
          "description": "Returns Outline width in pixel. If not specified or 0 outlines are not rendered. Default: 0"
        }
      },
      "name": "TtmlToDvbSubtitleConversionProperties"
    },
    "com.harmonicinc.vos.app.monitor.model.DownlinkOutputStatistic": {
      "required": [
        "outputId",
        "outputStatistic"
      ],
      "properties": {
        "addressAndPort": {
          "type": "string",
          "description": "Output IP address and port."
        },
        "outputId": {
          "type": "string",
          "description": "Output ID"
        },
        "outputStatistic": {
          "type": "array",
          "description": "Output bitrate statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputStatisticEntry"
          }
        }
      },
      "name": "DownlinkOutputStatistic"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Descriptor": {
      "properties": {
        "content": {
          "type": "string",
          "description": "Content of the descriptor based 64 encoded"
        },
        "descriptorTag": {
          "type": "integer",
          "format": "int32",
          "description": "descriptorTag of the descriptor"
        },
        "locator": {
          "description": "Location of the descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Locator"
        },
        "name": {
          "type": "string",
          "description": "Name of the descriptor"
        }
      },
      "name": "Descriptor"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.graphic.UpdateGraphicProperties": {
      "properties": {
        "templateFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.playout.zookeeper.event.TemplateField"
          }
        }
      },
      "name": "UpdateGraphicProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.model.OutputsMediaInfo": {
      "properties": {
        "audioTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.OutputAudioTrack"
          }
        },
        "audioTracksNumber": {
          "type": "integer",
          "format": "int32"
        },
        "empty": {
          "type": "boolean"
        },
        "generalTrackDurationMs": {
          "type": "integer",
          "format": "int64"
        },
        "subtitleTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.OutputSubtitleTrack"
          }
        },
        "subtitleTracksNumber": {
          "type": "integer",
          "format": "int32"
        },
        "transcodingProfileId": {
          "type": "string"
        },
        "videoTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.OutputVideoTrack"
          }
        },
        "videoTracksNumber": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "OutputsMediaInfo"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutInput": {
      "required": [
        "sourceStreams"
      ],
      "properties": {
        "dailySyncTime": {
          "type": "integer",
          "format": "int32",
          "description": "Daily sync time"
        },
        "defaultAssetGrooming": {
          "type": "string",
          "description": "default asset grooming",
          "enum": [
            "NO_DEFAULT_GROOMING_PROFILE",
            "USE_ASSET_GROOMING_PROFILE"
          ]
        },
        "defaultLiveInputName": {
          "type": "string",
          "description": "default live input name"
        },
        "duckLevel": {
          "type": "integer",
          "format": "int32",
          "description": "duck level"
        },
        "enableGap": {
          "type": "boolean",
          "description": "Specifies if gaps in playlist are enabled"
        },
        "gfxAssetDir": {
          "type": "string",
          "description": "graphics assets dir"
        },
        "localTimeZone": {
          "type": "string",
          "description": "Local time zone"
        },
        "maxAssetBitrate": {
          "type": "string",
          "description": "maximum asset bitrate",
          "enum": [
            "e_100MBPS",
            "e_250MBPS",
            "e_600MBPS"
          ]
        },
        "maxNumberAlternateSequencePreloaded": {
          "type": "integer",
          "format": "int32",
          "description": "Max number of sequence to prepare"
        },
        "monitorLiveSourceWithWebRtc": {
          "type": "string",
          "description": "Specifies if live source monitoring with WEBRTC is activated",
          "enum": [
            "e_FORCE_MONITOR_LIVE_SOURCE_WITH_WEB_RTC",
            "e_DO_NOT_MONITOR_LIVE_SOURCE_WITH_WEB_RTC",
            "e_MONITOR_LIVE_SOURCE_WITH_WEB_RTC"
          ]
        },
        "playAssetDir": {
          "type": "string",
          "description": "assets dir"
        },
        "playNAudioChannels": {
          "type": "integer",
          "format": "int32",
          "description": "number of audio channels"
        },
        "playlistOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Playlist offset"
        },
        "playoutControl": {
          "type": "string",
          "enum": [
            "INTERNAL_PLAYOUT_CONTROL",
            "THIRD_PARTY_AUTOMATION"
          ]
        },
        "secondaryDefaultLiveInputName": {
          "type": "string",
          "description": "secondary default live input name"
        },
        "sourceStreams": {
          "description": "Playout source stream settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutSourceStreams"
        },
        "voiceOverLevel": {
          "type": "integer",
          "format": "int32",
          "description": "voice-over level"
        }
      },
      "name": "PlayoutInput"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.StreamSetting": {
      "properties": {
        "egressConnectionLimit": {
          "type": "string"
        },
        "streamId": {
          "type": "string"
        }
      },
      "name": "StreamSetting"
    },
    "com.harmonicinc.vos.app.configure.model.source.CustomSlateSettings": {
      "required": [
        "muteAudio"
      ],
      "properties": {
        "muteAudio": {
          "type": "boolean",
          "description": "Specify the audio should be muted or not when slate is on"
        }
      },
      "name": "CustomSlateSettings"
    },
    "com.harmonicinc.vos.mux.model.programlevel.OutputProgramEitEttRemultiplexing": {
      "required": [
        "enable",
        "inputObjectId",
        "majorChannelNumber",
        "minorChannelNumber"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable EIT/ETT remulitplexing"
        },
        "inputObjectId": {
          "type": "string",
          "description": "Uuid of the source"
        },
        "majorChannelNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Atsc major channel number"
        },
        "minorChannelNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Atsc minor channel number"
        }
      },
      "name": "OutputProgramEitEttRemultiplexing"
    },
    "java.util.HashMapOfstringAndcom.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$SegmentDeliveryPrefix": {
      "type": "object",
      "name": "HashMapOfstringAndSegmentDeliveryPrefix",
      "additionalProperties": {
        "$ref": "#/definitions/SegmentDeliveryPrefix"
      }
    },
    "com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutDestinationProfileProperties": {
      "required": [
        "packagingProfileType"
      ],
      "properties": {
        "dashPackagingProperties": {
          "description": "The Properties of DASH packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutDestinationProfileProperties$DashPackagingProperties"
        },
        "hlsPackagingProperties": {
          "description": "The Properties of HLS packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutDestinationProfileProperties$HlsPackagingProperties"
        },
        "packagingProfileType": {
          "type": "string",
          "description": "The packaging profile type of pure OTT playout channel.",
          "enum": [
            "e_DASH",
            "e_HLS"
          ]
        }
      },
      "name": "PureOttPlayoutDestinationProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestAudioTrack": {
      "properties": {
        "audioTrackType": {
          "type": "string"
        },
        "bitDepth": {
          "type": "integer",
          "format": "int64"
        },
        "bitrate": {
          "type": "integer",
          "format": "int64"
        },
        "bitrateKbps": {
          "type": "integer",
          "format": "int64"
        },
        "bitrateMode": {
          "type": "string"
        },
        "channelS": {
          "type": "string"
        },
        "codec": {
          "type": "string"
        },
        "codecSettings": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "durationSec": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "kindOfStream": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string"
        },
        "resolutionNumber": {
          "type": "integer",
          "format": "int64"
        },
        "samplingRate": {
          "type": "string"
        },
        "skipProcessing": {
          "type": "boolean"
        }
      },
      "name": "RestAudioTrack"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedEgressStatistics": {
      "properties": {
        "egressSessionCount": {
          "type": "integer",
          "format": "int32"
        },
        "egressThroughputInMbps": {
          "type": "number",
          "format": "double"
        }
      },
      "name": "CombinedEgressStatistics"
    },
    "com.harmonicinc.vos.app.configure.model.KantarSnapWatermarkLicenseFile": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Base-64 content of license file"
        },
        "id": {
          "type": "string",
          "description": "Unique ID for the license to be used in the service add-on (set to null to auto-generate one)"
        },
        "name": {
          "type": "string",
          "description": "License name for the UI - must be unique"
        },
        "type": {
          "type": "string",
          "description": "License type (LIC or AUD)",
          "enum": [
            "LIC",
            "AUD"
          ]
        }
      },
      "name": "KantarSnapWatermarkLicenseFile"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiDataGrooming": {
      "properties": {
        "ccConversionMode": {
          "type": "string",
          "description": "Preferred Closed Caption type",
          "enum": [
            "AUTO",
            "EIA608",
            "CEA708"
          ]
        },
        "sdiDataTracks": {
          "type": "array",
          "description": "Essential metadata of sdi data tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiDataTrack"
          }
        }
      },
      "name": "SdiDataGrooming"
    },
    "com.harmonicinc.vos.app.configure.model.source.PcrConstraints": {
      "properties": {
        "maxPcrInterval": {
          "type": "integer",
          "format": "int32",
          "example": "100",
          "description": "Maximum PCR interval in milliseconds. Changing this value will trigger service restart and increase the end-to-end latency.",
          "minimum": 100,
          "maximum": 1000
        },
        "maxPcrJitter": {
          "type": "integer",
          "format": "int32",
          "example": "50",
          "description": "Maximum PCR jitter from real-time in milliseconds. Changing this value will trigger service restart and increase the end-to-end latency.",
          "minimum": 50,
          "maximum": 1000
        }
      },
      "name": "PcrConstraints"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputStatus": {
      "required": [
        "id",
        "outputDeliveryStatus"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a output in UUID format"
        },
        "outputDeliveryStatus": {
          "type": "array",
          "description": "List of delivery status at output",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputDeliveryStatus"
          }
        }
      },
      "name": "OutputStatus"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.AudioTrack": {
      "required": [
        "trackId"
      ],
      "properties": {
        "isDefault": {
          "type": "boolean",
          "description": "Indicate this audio is default"
        },
        "language": {
          "type": "string",
          "description": "Audio track language"
        },
        "skipProcessing": {
          "type": "boolean",
          "description": "Indicate this audio stream will not be processed and will not be mux."
        },
        "streamName": {
          "type": "string",
          "description": "Audio custom stream name"
        },
        "trackId": {
          "type": "integer",
          "format": "int32",
          "description": "PID of the audio track"
        }
      },
      "name": "AudioTrack"
    },
    "com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$AudioStreamSelectionItem": {
      "properties": {
        "audioCodecSelection": {
          "type": "string",
          "description": "audioCodecSelection",
          "enum": [
            "AAC_LC",
            "HE_AAC_V1",
            "HE_AAC_V2",
            "AC_3",
            "E_AC_3",
            "MPEGH",
            "ALL"
          ]
        },
        "audioLanguageSelections": {
          "type": "array",
          "description": "audioLanguageSelections",
          "items": {
            "type": "string"
          }
        },
        "audioTypeSelections": {
          "type": "array",
          "description": "audioTypeSelections",
          "items": {
            "type": "string",
            "enum": [
              "UNDEFINED",
              "CLEAN_EFFECTS",
              "HEARING_IMPAIRED",
              "VISUAL_IMPAIRED_COMMENTARY",
              "PRIMARY",
              "NATIVE"
            ]
          }
        },
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem$AudiobitrateRange"
        }
      },
      "name": "AudioStreamSelectionItem"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange$EsBitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "EsBitrateRange"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.ZixiBroadcasterSetting": {
      "required": [
        "channelName",
        "hostAddress",
        "hostPort",
        "sessionId"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "description": "Zixi broadcaster channel name"
        },
        "decryptionKey": {
          "type": "string",
          "description": "Zixi decryption key"
        },
        "decryptionType": {
          "type": "string",
          "description": "Zixi decryption type",
          "enum": [
            "NONE",
            "ZIXI_AES_128",
            "ZIXI_AES_192",
            "ZIXI_AES_256"
          ]
        },
        "hostAddress": {
          "type": "string",
          "description": "Zixi broadcaster host address"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "description": "Zixi broadcaster host port"
        },
        "password": {
          "type": "string",
          "description": "Zixi broadcaster password"
        },
        "sessionId": {
          "type": "string",
          "description": "Zixi broadcaster session ID"
        }
      },
      "name": "ZixiBroadcasterSetting"
    },
    "com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilter$SCTE35SignalMatchingConfig": {
      "required": [
        "asserts",
        "matchType"
      ],
      "properties": {
        "asserts": {
          "type": "array",
          "description": "Asserts should be valid xpaths",
          "items": {
            "type": "string"
          }
        },
        "effective": {
          "type": "string",
          "description": "Effective should be valid RFC3339 time"
        },
        "expires": {
          "type": "string",
          "description": "Expires should be valid RFC3339 time"
        },
        "matchType": {
          "type": "string",
          "description": "MatchType should be provided",
          "enum": [
            "ANY",
            "ALL"
          ]
        }
      },
      "name": "SCTE35SignalMatchingConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.model.DrmPropertiesEntry": {
      "properties": {
        "drmResourceID": {
          "type": "string"
        },
        "drmSystemID": {
          "type": "string"
        },
        "drmTrackFilter": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "packageType": {
          "type": "string",
          "enum": [
            "HLS",
            "DASH",
            "SS",
            "CMAF",
            "TS",
            "THUMBNAIL"
          ]
        },
        "packagingProfilePropertiesName": {
          "type": "string"
        }
      },
      "name": "DrmPropertiesEntry"
    },
    "com.harmonicinc.vos.app.configure.model.SrtCloudOutputSettings": {
      "properties": {
        "bandwidthOverhead": {
          "type": "integer",
          "format": "int32",
          "description": "Bandwidth overhead"
        },
        "blockingMode": {
          "type": "boolean",
          "description": "Blocking mode"
        },
        "encryptionParam": {
          "description": "Encryption param",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtEncryptionParams"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency"
        },
        "srtConnectionSettingsList": {
          "type": "array",
          "description": "Srt connection settings list",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtConnectionSettings"
          }
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Timeout"
        }
      },
      "name": "SrtCloudOutputSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.Input": {
      "properties": {
        "asiSettings": {
          "description": "Settings of a ASI input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.AsiInput"
        },
        "cloudInputSettings": {
          "description": "Settings of a Cloud input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CloudInputSettings"
        },
        "cloudSourceSetting": {
          "description": "Settings of a CloudSource input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CloudSourceInput"
        },
        "cloudlinkSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HarmonicCloudlinkSetting"
        },
        "delayLineSettings": {
          "description": "Settings of a delay line input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DelayLine_Input"
        },
        "demuxSettings": {
          "description": "Settings of a demux input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DemuxInput"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of an input"
        },
        "ipSettings": {
          "description": "Settings of an IP input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.IP_Input"
        },
        "ipSettingsList": {
          "type": "array",
          "description": "Additional list of settings of IP input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.IP_Input"
          }
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of an input",
          "items": {
            "type": "string"
          }
        },
        "ottPlayoutSettings": {
          "description": "Settings of a OTT Playout input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.OttPlayoutInput"
        },
        "poolSettings": {
          "description": "Settings of a POOL input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PoolInput"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of input to be used. When more than one input avaliable, the one with smaller number will be used as primary input"
        },
        "rfSettingsV2": {
          "description": "Settings of a RF input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.RfInputV2"
        },
        "slateSettings": {
          "description": "Settings of a slate input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SlateInput"
        },
        "srtSettings": {
          "description": "Settings of an SRT input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SrtInput"
        },
        "type": {
          "type": "string",
          "description": "Source input type",
          "enum": [
            "IP",
            "SLATE",
            "ZIXI",
            "SRT",
            "HSP",
            "SDI",
            "PLAYOUT",
            "CLOUDLINK",
            "RTMP",
            "POOL",
            "OTT_PLAYOUT",
            "XOS",
            "RF",
            "WATERMARK",
            "CLOUD",
            "DEMUX",
            "ASI",
            "RIST",
            "DELAYLINE"
          ]
        },
        "zixiSettings": {
          "description": "Settings of an Zixi input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ZixiInput"
        }
      },
      "name": "Input"
    },
    "com.harmonicinc.vos.mux.model.tslevel.GuiSpecific": {
      "properties": {
        "unreferencedPidsGuiEnable": {
          "type": "boolean",
          "description": "Reserved for GUI use, no impact on Mux behavior"
        }
      },
      "name": "GuiSpecific"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AribAmcList": {
      "properties": {
        "mode0x01": {
          "type": "string",
          "description": "Applied when received mode from B.39 is 0x01",
          "enum": [
            "e_Noop",
            "e_Mono_1",
            "e_Stereo_11",
            "e_Stereo_Silence"
          ]
        },
        "mode0x02": {
          "type": "string",
          "description": "Applied when received mode from B.39 is 0x02",
          "enum": [
            "e_Noop",
            "e_Dual_12",
            "e_Stereo_11",
            "e_Stereo_22",
            "e_Mono_1",
            "e_Mono_2",
            "e_Stereo_Silence"
          ]
        },
        "mode0x09": {
          "type": "string",
          "description": "Applied when received mode from B.39 is 0x09",
          "enum": [
            "e_Noop",
            "e_Stereo_12",
            "e_Stereo_Silence"
          ]
        },
        "mode0x0a": {
          "type": "string",
          "description": "Applied when received mode from B.39 is 0x0a",
          "enum": [
            "e_Noop",
            "e_Stereo_12",
            "e_Stereo_34",
            "e_Stereo_78",
            "e_Dual_Down12_Down34",
            "e_Dual_Down12_Down78",
            "e_Stereo_Silence"
          ]
        },
        "mode0x12": {
          "type": "string",
          "description": "Applied when received mode from B.39 is 0x12",
          "enum": [
            "e_Noop",
            "e_Multich51_123456",
            "e_Stereo_Down123456",
            "e_Stereo_78",
            "e_Stereo_Silence"
          ]
        },
        "mode0x15": {
          "type": "string",
          "description": "Applied when received mode from B.39 is 0x15",
          "enum": [
            "e_Noop",
            "e_Multich51_123456",
            "e_Stereo_Down123456",
            "e_Stereo_78",
            "e_Stereo_Silence"
          ]
        },
        "modeBackup": {
          "type": "string",
          "description": "Applied when B.39 is missing",
          "enum": [
            "e_Noop",
            "e_Multich51_123456",
            "e_Stereo_12",
            "e_Stereo_34",
            "e_Dual_12",
            "e_Stereo_Silence"
          ]
        },
        "modeDefault": {
          "type": "string",
          "description": "Applied at the start-up",
          "enum": [
            "e_Multich51_123456",
            "e_Stereo_12",
            "e_Stereo_78",
            "e_Dual_12"
          ]
        },
        "modeUndefined": {
          "type": "string",
          "description": "When value received from B.39 is not defined, this value is used",
          "enum": [
            "e_Noop",
            "e_Dual_12"
          ]
        }
      },
      "name": "AribAmcList"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MptsDestinationProfileProperties": {
      "properties": {
        "encapsulationSettings": {
          "description": "Encapsulation Settings.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MptsEncapsulationSettings"
        },
        "muteOutputOnSignalLoss": {
          "type": "boolean",
          "description": "Mute mux output on input signal loss"
        },
        "serviceRedundancyMode": {
          "type": "string",
          "description": "Service redundancy mode for the MPTS service.",
          "enum": [
            "e_ACTIVE_BACKUP",
            "e_ACTIVE_ACTIVE"
          ]
        }
      },
      "name": "MptsDestinationProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.image.sync.ImageFileSyncConfig": {
      "required": [
        "delay"
      ],
      "properties": {
        "delay": {
          "type": "integer",
          "format": "int64",
          "description": "Delay between sync iterations in minutes"
        }
      },
      "name": "ImageFileSyncConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem": {
      "properties": {
        "audioCodecSelection": {
          "type": "string",
          "description": "audioCodecSelection",
          "enum": [
            "AAC_LC",
            "HE_AAC_V1",
            "HE_AAC_V2",
            "AC_3",
            "E_AC_3",
            "MPEGH",
            "ALL"
          ]
        },
        "audioLanguageSelections": {
          "type": "array",
          "description": "audioLanguageSelections",
          "items": {
            "type": "string"
          }
        },
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem$AudiobitrateRange"
        },
        "withAudioGain": {
          "type": "string",
          "description": "withAudioGain",
          "enum": [
            "ENABLE",
            "DISABLE",
            "ALL"
          ]
        }
      },
      "name": "AudioStreamSelectionItem"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceSecondaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "File name for the graphic to be played, the filename extension is optional"
        },
        "assetStatus": {
          "type": "string",
          "description": "Indicates that the graphic is ready to play, or if there is a problem",
          "enum": [
            "UNKNOWN",
            "AVAILABLE",
            "MISSING",
            "MISSINGGROOMINGPROFILE"
          ]
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the graphic, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "Name of the grooming profile to be used, allows the audio tracks of a .wav file to be selected. Grooming profiles are defined in the Asset Acquisition application"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss), only used when the end mode is Duration"
        },
        "endMode": {
          "type": "string",
          "description": "Determines how the end timing for the secondary event will be calculated. DURATION secondary event will end at the secondary start time + duration, OFFSETFROMEND secondary will end at an offset from the end time of the primary event, NOEND secondary will be terminated by a future secondary event on the same layer",
          "enum": [
            "OFFSETFROMEND",
            "DURATION",
            "NOEND"
          ]
        },
        "endOffset": {
          "type": "string",
          "description": "End offset, ([+-]hh:mm:ss.sss), only used when the end mode is OffsetFromEnd. Can be positive or negative, blank or empty is interpreted as zero offset"
        },
        "id": {
          "type": "string",
          "description": "Event id (UUID)"
        },
        "layer": {
          "type": "integer",
          "format": "int32",
          "description": "Layer used for the logo/graphics, 1 to 8. If missing, the value 1 is used. When graphics overlap, the graphic on the higher layer has priority"
        },
        "origin": {
          "type": "string",
          "description": "Origin (creator) of the event. Events can be created by the operator or traffic/scheduling system",
          "enum": [
            "UNKNOWN",
            "TRAFFIC",
            "OPERATOR"
          ]
        },
        "startMode": {
          "type": "string",
          "description": "Indicates how the start timing for the secondary event will be calculated, offset from the start or end of the primary event",
          "enum": [
            "OFFSETFROMSTART",
            "OFFSETFROMEND"
          ]
        },
        "startOffset": {
          "type": "string",
          "description": "Start offset ([+-]hh:mm:ss.sss), only used when the start mode is OffsetFromStart. Can be positive or negative, blank or empty is interpreted as zero offset"
        },
        "stopAnimationLeadTime": {
          "type": "string",
          "description": "Duration of the graphic's outro sequence (hh:mm:ss.sss), applies to 3-point animation graphics. The outro will be started this time before the secondary event ends"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcEndOffset": {
          "type": "string",
          "description": "Equivalent to endOffset, but in timecode format ([+-]hh:mm:ss[:;]ff)"
        },
        "tcStartOffset": {
          "type": "string",
          "description": "Equivalent to startOffset, but in timecode format ([+-]hh:mm:ss[:;]ff)"
        },
        "tcStopAnimationLeadTime": {
          "type": "string",
          "description": "Equivalent to stopAnimationLeadTime, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "templateFields": {
          "type": "array",
          "description": "Additional information that can be passed to HTML graphic templates",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.playout.zookeeper.event.TemplateField"
          }
        }
      },
      "name": "SequenceSecondaryProperties"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.stream.StreamSettingInput": {
      "properties": {
        "streamId": {
          "type": "string"
        }
      },
      "name": "StreamSettingInput"
    },
    "com.harmonicinc.vos.app.uplink.hub.uplinkchannel.impl.IpOutput": {
      "required": [
        "outputIpAddress",
        "outputPort",
        "rank"
      ],
      "properties": {
        "outputIpAddress": {
          "type": "string",
          "description": "Destination IP address"
        },
        "outputPort": {
          "type": "integer",
          "format": "int32",
          "description": "Destination port"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Destination rank"
        }
      },
      "name": "IpOutput"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$TimeshiftBufferStatus": {
      "properties": {
        "currentLengthInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Current media length in seconds"
        },
        "currentSizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Current storage size of media data"
        }
      },
      "name": "TimeshiftBufferStatus"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiCaptionServiceDescriptor": {
      "properties": {
        "sdiCaptionServiceDescriptorData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiCaptionServiceDescriptorData"
          }
        }
      },
      "name": "SdiCaptionServiceDescriptor"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$PlaybackInfo": {
      "properties": {
        "absoluteCatchUpUrl": {
          "type": "string",
          "description": "URL for playing channel with a specified time range with absolute path"
        },
        "absoluteLiveUrl": {
          "type": "string",
          "description": "URL for playing the channel live with absolute path"
        },
        "absoluteStartOverUrl": {
          "type": "string",
          "description": "URL for playing channel from specified start time with absolute path"
        },
        "catchUpUrl": {
          "type": "string",
          "description": "URL for playing channel with a specified time range"
        },
        "format": {
          "type": "string",
          "description": "Package format"
        },
        "liveEventMonitoringUrl": {
          "type": "string",
          "description": "URL for preview Live Event channel"
        },
        "liveEventUrl": {
          "type": "string",
          "description": "URL for playing clear content"
        },
        "liveUrl": {
          "type": "string",
          "description": "URL for playing the channel live"
        },
        "name": {
          "type": "string",
          "description": "Name of playback"
        },
        "startOverUrl": {
          "type": "string",
          "description": "URL for playing channel from specified start time"
        }
      },
      "name": "PlaybackInfo"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.OutputAsset": {
      "properties": {
        "destinationProfileId": {
          "type": "string"
        },
        "estimationTimeSec": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "originOutput": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.OriginOutput"
        },
        "packagedOutputs": {
          "type": "array",
          "description": "Packaged outputs by the cloud engine",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestPackageOutput"
          }
        },
        "percentage": {
          "type": "integer",
          "format": "int32"
        },
        "playbackUrls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "previewUrls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "profileId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "QUEUED",
            "SUBMITTED",
            "PROCESSING",
            "FINISHED",
            "FAILED",
            "CANCELING",
            "CANCELED",
            "RECONCILING",
            "REJECTED"
          ]
        },
        "vqPassed": {
          "type": "boolean"
        }
      },
      "name": "OutputAsset"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutTeletextTrack": {
      "required": [
        "language",
        "teletextHexPageNum",
        "teletextMagazineNumber",
        "teletextType"
      ],
      "properties": {
        "language": {
          "type": "string",
          "description": "Language code of the teletext page."
        },
        "teletextHexPageNum": {
          "type": "string",
          "description": "Decimal page number as string, range: 00-99. Note that hexadecimal page numbers are not supported for playout, Teletext user pages are only allowing decimal values (0..9 for each digit)."
        },
        "teletextMagazineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Magazine number of the teletext page, range: 1-8."
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of teletext page: 2 (subtitle) or 5 (subtitle for hearing impaired people)."
        }
      },
      "name": "PlayoutTeletextTrack"
    },
    "com.harmonicinc.vos.app.configure.model.source.DemuxInput": {
      "required": [
        "demuxServiceId"
      ],
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "demuxServiceId": {
          "type": "string",
          "description": "Indicates the uuid of the Demux service"
        },
        "disableAutoDelete": {
          "type": "boolean",
          "description": "Disable the automatic deletion of the source when not used anymore after a mux update, False by default"
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        }
      },
      "name": "DemuxInput"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.SrtSource": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Automatic grooming"
        },
        "cloudlinkGroupId": {
          "type": "string",
          "description": "Id of the cloudlink group"
        },
        "cloudlinkId": {
          "type": "string",
          "description": "Id of the cloudlink"
        },
        "connectionMode": {
          "type": "string",
          "description": "Mode for establishing SRT connection",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "descramblingKey": {
          "type": "string",
          "description": "Descrambling key"
        },
        "descramblingRequired": {
          "type": "boolean",
          "description": "Whether descrambling is required"
        },
        "ipAddress": {
          "type": "string",
          "description": "IPv4 or IPv6 address to receive the input"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Local interface for outgoing connections"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP port to receive the input"
        },
        "ipPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port range end used to receive input"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency parameter"
        },
        "pathRedundancyMode": {
          "type": "string",
          "description": "Path redundancy mode",
          "enum": [
            "SRT_SOCKET_GROUP",
            "ST_2022_7"
          ]
        },
        "pidList": {
          "type": "array",
          "description": "PID list",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "programId": {
          "type": "integer",
          "format": "int32",
          "description": "Program ID"
        },
        "srtConnectionSettings": {
          "type": "array",
          "description": "Srt connection setting list",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.SrtConnectionSettings"
          }
        },
        "srtEncryptionParams": {
          "description": "SRT encryption params",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.SrtEncryptionParams"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        },
        "st20227DelayBufferInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Buffer delay for reordering RTP packet"
        },
        "streamIds": {
          "type": "array",
          "description": "StreamId specifications",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "SrtSource"
    },
    "com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutDestinationProfileProperties$DashPackagingProperties": {
      "required": [
        "dvrWindowSize",
        "mpdFileName"
      ],
      "properties": {
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control of the availability of media segment files most recently added to the Media Presentation Description (MPD) file (expressed in seconds)."
        },
        "mpdFileName": {
          "type": "string",
          "description": "The name of Media Presentation Description (MPD) file which is used to describe a Media Presentation."
        }
      },
      "name": "DashPackagingProperties"
    },
    "java.util.MapOfstringAndjava.util.ListOfstring": {
      "type": "object",
      "name": "MapOfstringAndListOfstring",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "com.harmonicinc.vos.mux.model.programlevel.eas.OutputProgramEasLocation": {
      "required": [
        "county",
        "state",
        "subdivision"
      ],
      "properties": {
        "county": {
          "type": "integer",
          "format": "int32",
          "description": "County code"
        },
        "state": {
          "type": "integer",
          "format": "int32",
          "description": "State code"
        },
        "subdivision": {
          "type": "integer",
          "format": "int32",
          "description": "Subdivision code"
        }
      },
      "name": "OutputProgramEasLocation"
    },
    "com.harmonicinc.vos.mux.model.tslevel.ExternalTableGenerators": {
      "required": [
        "ipPort",
        "mainGeneratorId"
      ],
      "properties": {
        "backupGeneratorId": {
          "type": "string",
          "description": "Backup client unique identifier"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "example": "7800",
          "description": "TCP port used to receive input (from 7800 to 7899)"
        },
        "mainGeneratorId": {
          "type": "string",
          "description": "Primary client unique identifier"
        }
      },
      "name": "ExternalTableGenerators"
    },
    "com.harmonicinc.vos.app.monitor.model.SourceStatus": {
      "required": [
        "ccErrorStatistic",
        "id",
        "inputStatus",
        "name",
        "sourceHeight",
        "sourceVideoCodec",
        "sourceWidth",
        "status"
      ],
      "properties": {
        "ccErrorStatistic": {
          "type": "array",
          "description": "The cc error statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.CcErrorStatistic"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a source in UUID format"
        },
        "inputStatus": {
          "type": "array",
          "description": "The status of the input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.InputStatus"
          }
        },
        "name": {
          "type": "string",
          "description": "Display name of a source"
        },
        "sourceHeight": {
          "type": "integer",
          "format": "int32",
          "description": "The video source height"
        },
        "sourceVideoCodec": {
          "type": "string",
          "description": "Source video codec, e.g. AVC, HEVC, JPEGXS",
          "enum": [
            "MP2",
            "AVC",
            "HEVC",
            "JPEGXS",
            "AVS",
            "AVS2",
            "NOTSET"
          ]
        },
        "sourceWidth": {
          "type": "integer",
          "format": "int32",
          "description": "The video source width"
        },
        "status": {
          "type": "string",
          "description": "The status of the source",
          "enum": [
            "ACTIVE",
            "STANDBY",
            "ERROR"
          ]
        }
      },
      "name": "SourceStatus"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.PerPackageResourceId": {
      "required": [
        "publishName",
        "resourceId"
      ],
      "properties": {
        "publishName": {
          "type": "string",
          "description": "Package publish name"
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "name": "PerPackageResourceId"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.FrameRate": {
      "properties": {
        "denominator": {
          "type": "integer",
          "format": "int64"
        },
        "numerator": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "FrameRate"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$StreamBasedAudio": {
      "properties": {
        "aacProfileProperties": {
          "description": "AAC profile properties - AAC meta data",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AACProfileProperties"
        },
        "aribAudioModeChange": {
          "description": "Arib Audio Mode Change Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AribAudioModeChange"
        },
        "audioAUPerPES": {
          "type": "string",
          "description": "Number of audio AU per PES",
          "enum": [
            "e_Auto",
            "e_1AU_per_PES",
            "e_5AU_per_PES",
            "e_6AU_per_PES"
          ]
        },
        "audioLevelAdjustmentProperties": {
          "description": "General Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioLevelAdjustmentProperties"
        },
        "audioMixingProperties": {
          "description": "Settings for audio mixing",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioMixingProperties"
        },
        "audioUpmixerConfig": {
          "description": "Configuration for audio upmixer",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioUpmixerConfig"
        },
        "audioUpmixingProperties": {
          "description": "Settings for audio upmixing",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioUpmixingProperties"
        },
        "bitrate": {
          "type": "string",
          "description": "Audio bitrate in bps",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "bitrateSecondary": {
          "type": "string",
          "description": "Bitrate used with a 5.1 PCM input when it switches to stereo. Ignored if channels is not e_PASSTHROUGH. Ignored if the input is not defined as 5.1 PCM.",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "channels": {
          "type": "string",
          "description": "Audio channel setting for converting",
          "enum": [
            "e_PASSTHROUGH",
            "e_STEREO",
            "e_MONO",
            "e_DOLBY_5_1",
            "e_DUAL_MONO",
            "e_5_1_4"
          ]
        },
        "codec": {
          "type": "string",
          "description": "Audio codec used for converting",
          "enum": [
            "e_AC_4",
            "e_E_AC_3",
            "e_AC_3",
            "e_HE_AAC_v2",
            "e_HE_AAC_v1",
            "e_AAC_LC",
            "e_MPEG1_L2",
            "e_PCM"
          ]
        },
        "descriptorMode": {
          "type": "string",
          "description": "Reserved",
          "enum": [
            "e_LEGACY",
            "e_MANUAL",
            "e_DYNAMIC_PASSTHROUGH"
          ]
        },
        "dialnorm": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio dialogue normalization (average loudness) in dB, applied for AC-4, AC-3, E-AC3 codec"
        },
        "dolbyAC4AdvanceProperties": {
          "description": "Dolby AC4 Advanced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyAC4AdvanceProperties"
        },
        "dolbyPlusAdvanceProperties": {
          "description": "Dolby Plus Adavnced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyPlusAdvanceProperties"
        },
        "fallbackOnSilenceDetection": {
          "type": "boolean",
          "description": "Fallback on silence detection"
        },
        "gain": {
          "type": "integer",
          "format": "int32",
          "description": "Audio gain in dB when LevelMagic leveling is disabled, Dialnorm will be set as default value"
        },
        "halcAudioLevelAdjustementProperties": {
          "description": "HALC Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HALCAudioLevelAdjustementProperties"
        },
        "kantarSnapWatermarkEnabled": {
          "type": "boolean",
          "description": "Enable Kantar Snap watermarking for this channel"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of audio",
          "items": {
            "type": "string"
          }
        },
        "leveling": {
          "type": "boolean",
          "description": "Enable audio LevelMagic leveling"
        },
        "loudnessTarget": {
          "type": "integer",
          "format": "int32",
          "description": "Loudness setting in LKFS when LevelMagic leveling is enabled, Dialnorm will be overridden"
        },
        "mpeg1L2ProfileProperties": {
          "description": "Mpeg1 Layer2 Profile Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Mpeg1L2ProfileProperties"
        },
        "nielsenWatermarkProperties": {
          "description": "Nielsen Watermarking Configurations",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.NielsenWatermarkProperties"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the audio"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID, normal range is 32..8190. If 0 is set, source grooming value (as set during discover process) will be used, or 482 (or higher) if not defined in source grooming (non-TS source for example). If -1 is set, the PID is not present in the output. Any other value is not recommended and will behave as 0 in current version."
        },
        "outputPipPid": {
          "type": "integer",
          "format": "int32",
          "description": "PIP Output PID of the audio"
        },
        "processing": {
          "type": "string",
          "description": "Convert or pass-through audio",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "sampleRate": {
          "type": "string",
          "description": "Audio sampling rate in Hz",
          "enum": [
            "e_16",
            "e_32",
            "e_44",
            "e_48"
          ]
        },
        "secondSourceLabels": {
          "type": "array",
          "description": "List of label of the second source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "sourceAudioProcessingMode": {
          "type": "string",
          "description": "Audio Stream Processing Mode",
          "enum": [
            "e_SWITCH",
            "e_MIX",
            "e_UPMIX"
          ]
        },
        "sourceChannel": {
          "type": "string",
          "description": "Audio M1L2 source channel used for converting",
          "enum": [
            "e_LEFT",
            "e_RIGHT"
          ]
        },
        "sourceDolbyEProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Source DolbyE program number for the audio"
        },
        "sourceLabel": {
          "type": "string",
          "description": "(Deprecrated) Label of the source stream to be processed"
        },
        "sourceLabels": {
          "type": "array",
          "description": "List of label of the source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of audio",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        },
        "thirdSourceLabels": {
          "type": "array",
          "description": "List of label of the third source stream to be processed",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "StreamBasedAudio"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiAudioGrooming": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of audio tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiAudioTrack"
          }
        }
      },
      "name": "SdiAudioGrooming"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.CloneParameters": {
      "properties": {
        "replace": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        }
      },
      "name": "CloneParameters"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.SubtitlesAssetFileServer": {
      "properties": {
        "fileServerId": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "pacParams": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.SubtitlesAssetFileServer$PacParams"
        },
        "path": {
          "type": "string"
        },
        "subtitleType": {
          "type": "string",
          "enum": [
            "NORMAL",
            "HARD_OF_HEARING",
            "FORCED"
          ]
        }
      },
      "name": "SubtitlesAssetFileServer"
    },
    "com.harmonicinc.vos.asset.acquisition.model.OutputVideoTrack": {
      "properties": {
        "bitrateKbps": {
          "type": "integer",
          "format": "int64"
        },
        "bitrateMode": {
          "type": "string"
        },
        "codec": {
          "type": "string"
        },
        "codecProfile": {
          "type": "string"
        },
        "colorSpace": {
          "type": "string"
        },
        "durationSec": {
          "type": "integer",
          "format": "int64"
        },
        "dynamicRange": {
          "type": "string"
        },
        "frameRate": {
          "type": "number",
          "format": "double"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "maximumBitrateKbps": {
          "type": "integer",
          "format": "int64"
        },
        "resolution": {
          "type": "string"
        },
        "transferCharacteristics": {
          "type": "string"
        },
        "videoFrameRate": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.FrameRate"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "OutputVideoTrack"
    },
    "com.harmonicinc.vos.app.configure.model.source.HspAuthenticationHeader": {
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "Key"
        },
        "value": {
          "type": "string",
          "description": "Value"
        }
      },
      "name": "HspAuthenticationHeader"
    },
    "com.harmonicinc.vos.labwizard.rest.model.FtAbrCommonSettings": {
      "required": [
        "encryption",
        "loud_norm",
        "segment_duration"
      ],
      "properties": {
        "cloudNorm": {
          "type": "string",
          "enum": [
            "no",
            "yes"
          ]
        },
        "encryption": {
          "type": "string",
          "description": "Enable encryption",
          "enum": [
            "no",
            "yes"
          ]
        },
        "encryption_iv": {
          "type": "string",
          "description": "Encryption Initialization Vector\n32 hexidecimal characters ([0-9a-f])"
        },
        "encryption_key": {
          "type": "string",
          "description": "Encryption key\n32 hexidecimal characters ([0-9a-f])"
        },
        "encryption_key_file": {
          "type": "string",
          "description": "Encryption Key File URL\nValid URL"
        },
        "encryption_method": {
          "type": "string",
          "description": "Encryption method: aes-128-cbc or sample-aes",
          "enum": [
            "aes-128-cbc",
            "sample-aes"
          ]
        },
        "loud_norm": {
          "type": "string",
          "description": "Audio loud normalization according to EBU standard R128. Does not apply to passthrough audio.",
          "enum": [
            "no",
            "yes"
          ]
        },
        "segment_duration": {
          "type": "string",
          "description": "Segment duration to split media (in seconds)\nNon-negative integer"
        }
      },
      "name": "FtAbrCommonSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.TeletextDescriptorData": {
      "required": [
        "language",
        "teletextMagazineNumber",
        "teletextPageNumber",
        "teletextType"
      ],
      "properties": {
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "teletextHexPageNum": {
          "type": "string",
          "description": "Verbatim hexadecimal page number of teletext stream - should be used if not null"
        },
        "teletextMagazineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Magazine number of teletext stream"
        },
        "teletextPageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete decimal page number of teletext stream - does not support pages in the range [A-F]"
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of teletext"
        }
      },
      "name": "TeletextDescriptorData"
    },
    "com.harmonicinc.vos.app.atm.datatypes.DvrFilterByScte35": {
      "properties": {
        "matchStart": {
          "description": "filter start of manifest by scte35 signal.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.MatchSignal"
        }
      },
      "name": "DvrFilterByScte35"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestDrmSystemSettings": {
      "properties": {
        "drmContentId": {
          "type": "string"
        },
        "drmSystemID": {
          "type": "string"
        },
        "packagingProfilePropertiesName": {
          "type": "string"
        }
      },
      "name": "RestDrmSystemSettings"
    },
    "com.harmonicinc.vos.app.monitor.model.SlateStatus": {
      "required": [
        "errorMsg",
        "recommendation",
        "serviceId",
        "slateState"
      ],
      "properties": {
        "errorMsg": {
          "type": "string",
          "description": "Error Message"
        },
        "recommendation": {
          "type": "string",
          "description": "Recommendation"
        },
        "serviceId": {
          "type": "string",
          "description": "Service Id"
        },
        "slateState": {
          "type": "string",
          "description": "Slate Status",
          "enum": [
            "ON",
            "OFF",
            "ERROR"
          ]
        }
      },
      "name": "SlateStatus"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AES3AudioProperties": {
      "required": [
        "aes3StreamTypeList",
        "numberOfChannels",
        "sampleRate"
      ],
      "properties": {
        "aes3StreamTypeList": {
          "type": "array",
          "description": "AES3 streams type",
          "items": {
            "type": "string",
            "enum": [
              "PCM",
              "DOLBY_EAC3",
              "DOLBY_E",
              "DOLBY_AC3"
            ]
          }
        },
        "numberOfChannels": {
          "type": "integer",
          "format": "int32",
          "description": "Number of channels at aes3 audio stream"
        },
        "sampleRate": {
          "type": "integer",
          "format": "int32",
          "description": "Sample rate at aes3 audio stream"
        }
      },
      "name": "AES3AudioProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HlsPackagingProperties": {
      "required": [
        "dvrWindowSize",
        "enableCodecsAttributeInVariantPlaylist",
        "enableKeyRotation",
        "enablePackageBasedKeyRotation",
        "floatingPointDurationInPlaylist",
        "generateAudioOnlyStream",
        "generateIFrameOnlyPlaylist",
        "hlsEncryptionMethod",
        "indexFileNameForIFrameOnlyStreamForFlattenedMode",
        "indexFileNameForMediaStreamForFlattenedMode",
        "keyChangePeriod",
        "lateBindingAudio",
        "richSegmentUriInfo",
        "segmentFileNamePrefixForFlattenedMode",
        "segmentLengthInMillisecond",
        "segmentRetentionPeriod",
        "subtitleNamePattern",
        "urlOrderOfVariantPlaylist",
        "variantPlaylistFileName"
      ],
      "properties": {
        "absoluteIFrameOnlyPlaylistFileName": {
          "type": "string",
          "description": "Absolute I-frame only playlist filename pattern, which is supported as listed below.\r\n\r\nSupported escape pattern:\r\n%streamid Stream ID\r\n%streamid:streamIdFormat=%0{number}llu Stream ID in some format, for example %01llu. %02llu is the default.\r\n\r\nSample configuration: %streamid-iframe\r\nResultant file name: 01-iframe.m3u8\r\nSample configuration: %streamid:streamIdFormat=%01llu-iframe\r\nResultant file name: 1-iframe.m3u8"
        },
        "absoluteMediaPlaylistFileName": {
          "type": "string",
          "description": "Absolute media playlist filename. Value is a suffix to relative media playlist filename if absoluteMediaPlaylistFileNameAsSuffix is true. Otherwise, the value is the absolute media playlist filename pattern, which is supported as listed below.\r\n\r\nSupported escape pattern:\r\n%streamid Stream ID\r\n%streamid:streamIdFormat=%0{number}llu Stream ID in some format, for example %01llu. %02llu is the default.\r\n\r\nSample configuration: %streamid\r\nResultant file name: 01.m3u8\r\nSample configuration: %streamid:streamIdFormat=%01llu\r\nResultant file name: 1.m3u8"
        },
        "absoluteMediaPlaylistFileNameAsSuffix": {
          "type": "boolean",
          "description": "Indicate whether absolute media playlist filename is specified as suffix or pattern"
        },
        "absoluteVariantPlaylistFileName": {
          "type": "string",
          "description": "Absolute master playlist filename"
        },
        "altWatermarkOutputPrefix": {
          "type": "string",
          "description": "Alternative watermark output prefix, all the playlists and segments will be appended with this prefix."
        },
        "attributeCustomizationProfileId": {
          "type": "string",
          "description": "Specify the Variant Customization Profile to tune the HLS playlist attributes."
        },
        "bandwidthBasedOnEsBitrate": {
          "type": "boolean",
          "description": "To base the BANDWIDTH attribute on ES bitrate instead of TS bitrate in variant playlist"
        },
        "chunkDurationInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the CMAF chunk in milliseconds"
        },
        "closedCaptionHandling": {
          "type": "array",
          "description": "The way to handle Closed Caption. Can be passthrough and/or converted to WebVTT, and/or converted to IMSC1. Empty list implies to ignore closed caption",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_WEBVTT",
              "e_PASSTHROUGH",
              "e_TO_IMSC1"
            ]
          }
        },
        "commonEncryptionScheme": {
          "type": "string",
          "description": "Common encryption scheme",
          "enum": [
            "CENC_CBCS",
            "CENC_CENC"
          ]
        },
        "contentSteeringPlaylistFileName": {
          "type": "string",
          "description": "Content steering master playlist filename"
        },
        "customGroupingProfileId": {
          "type": "string",
          "description": "Specify the HLS Audio Grouping Profile to customize the HLS playlist audio and video grouping."
        },
        "decodeTimeShiftToPlayTime": {
          "type": "boolean",
          "description": "Enable to shift decoding timeline to match the presentation timeline, resulting in same first DTS and PTS for each segment, as well as potential negative CTO in segment. Take effect only on fMP4 package output"
        },
        "disableRawLines": {
          "type": "boolean",
          "description": "Disable usage of Raw lines PSM and split lines algo for OCR"
        },
        "displayHResolutionRounding": {
          "type": "string",
          "description": "The function that will be used to round the display horizontal resolution.",
          "enum": [
            "e_TO_FLOOR",
            "e_TO_CLOSEST_EVEN"
          ]
        },
        "displayHdcpLevelAttribute": {
          "type": "boolean",
          "description": "Specify whether to show HDCP-LEVEL attribute for each stream on HLS master playlist."
        },
        "dropSgpdBox": {
          "type": "boolean",
          "description": "Drop sgpd and sbgp box in fMP4"
        },
        "dvbSubtitleHandling": {
          "type": "array",
          "description": "The way to handle DVB subtitle. Can be passthrough and/or converted to SMPTE-TT (in ID3), and/or converted to Webvtt thanks to OCR. Empty list implies to ignore DVB subtitle",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_SMPTE_TT",
              "e_PASSTHROUGH",
              "e_TO_WEBVTT_OCR",
              "e_TO_IMSC1"
            ]
          }
        },
        "dvbTtmlHandling": {
          "type": "array",
          "description": "The way to handle DVB TTML. Can be converted to WebVTT. Empty list implies to ignore DVB TTML",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_WEBVTT",
              "e_TO_IMSC1"
            ]
          }
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control the availability of media segment files most recently added to the index file (in seconds)."
        },
        "enableAbsoluteSegmentURL": {
          "type": "boolean",
          "description": "Enable absolute URL in media playlist to reference stream playlist"
        },
        "enableAbsoluteURL": {
          "type": "boolean",
          "description": "Enable absolute URL in master playlist to reference stream playlist"
        },
        "enableAverageBandwidthAttribute": {
          "type": "boolean",
          "description": "Enable AVERAGE-BANDWIDTH attribute in variant playlist"
        },
        "enableCcDeclaration": {
          "type": "boolean",
          "description": "Declare CC in playlist"
        },
        "enableChunkedCMAF": {
          "type": "boolean",
          "description": "Enable chunked CMAF to support low latency OTT delivery"
        },
        "enableCodecsAttributeInVariantPlaylist": {
          "type": "boolean",
          "description": "Whether to specify CODECS attribute in EXT-X-STREAM-INF in variant playlist"
        },
        "enableCommonSegmentUrlDelivery": {
          "type": "boolean",
          "description": "Enable common segment URL delivery."
        },
        "enableContentSteeringPlaylist": {
          "type": "boolean",
          "description": "Enable the content steering master playlist to check cluster status and steer the content to the available cluster."
        },
        "enableCountryCode": {
          "type": "boolean",
          "description": "Use ISO Country Code in language identification"
        },
        "enableDiscreteIframeSegmentEncryption": {
          "type": "boolean",
          "description": "Enable discrete I-frame segment encryption"
        },
        "enableExtXGapTag": {
          "type": "boolean",
          "description": "Enable the insertion of a GAP tag in the playlist during periods of content loss. This helps indicate missing content segments in the HLS stream."
        },
        "enableKeyRotation": {
          "type": "boolean",
          "description": "Enable key rotation."
        },
        "enableLegacySpliceInsertHandle": {
          "type": "boolean",
          "description": "Enable handle splice insert with no segmentation descriptor in STANDARD mode. Default is false"
        },
        "enableLowLatencyMode": {
          "type": "boolean",
          "description": "Obsolete"
        },
        "enableOttWatermark": {
          "type": "boolean",
          "description": "(Deprecated) Enable OTT watermarking. When this parameter is true, two set of AB outputs will be generated with only filename difference."
        },
        "enablePackageBasedKeyRotation": {
          "type": "boolean",
          "description": "Override the DRM global setting and enable customized per Package output key rotation setting"
        },
        "enablePartialSegment": {
          "type": "boolean",
          "description": "Obsolete"
        },
        "enablePlaylistTypeEventTag": {
          "type": "boolean",
          "description": "Enable inserion of \"EXT-X-PLAYLIST-TYPE:EVENT\" tag in Start-over mode"
        },
        "enableSubFolderMode": {
          "type": "boolean",
          "description": "Use sub-folder mode for HLS in WebDav Mode"
        },
        "enableWebVttSourcePositioning": {
          "type": "boolean",
          "description": "Enable source positioning for WebVTT"
        },
        "enableWebVttStyling": {
          "type": "boolean",
          "description": "Enable styling for WebVTT"
        },
        "encryptSEI": {
          "type": "boolean",
          "description": "Enable SEI encryption for HLS fmp4 package output, if value is false, encryption of SEI entry will be skipped"
        },
        "fakeSegmentationType": {
          "type": "integer",
          "format": "int32",
          "description": "Which segmentation type to use for fake segmentation when enableLegacySpliceInsertHandle is true. Default is 54 (0x36 Distributor Placement Opportunity Start)"
        },
        "firstSegmentProgramDateTime": {
          "type": "boolean",
          "description": "When this parameter is true, only the first segment has EXT-X-PROGRAM-DATE-TIME tag. Otherwise, program data time tags are set for every segment."
        },
        "floatingPointDurationInPlaylist": {
          "type": "boolean",
          "description": "The EXTINF tag value will be presented in floating point."
        },
        "generateAudioOnlyStream": {
          "type": "boolean",
          "description": "Generate audio-only stream"
        },
        "generateIFrameOnlyPlaylist": {
          "type": "boolean",
          "description": "Enable generating I-frame only playlist."
        },
        "hlsEncryptionMethod": {
          "type": "string",
          "description": "Specify which encryption method should be used when integrate with DRM.",
          "enum": [
            "e_HLS_SAMPLE_AES",
            "e_AUTHENTEC_PLAYREADY",
            "e_COMMON_ENCRYPTION",
            "e_DISCRETIX_PLAYREADY",
            "e_IRDETO_PLAYREADY",
            "e_HLS_AES",
            "e_FAIRPLAY",
            "e_SECURE_MEDIA",
            "e_CLEAR"
          ]
        },
        "hlsScte35GenericProperties": {
          "description": "SCTE-35 Generic Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsScte35GenericProperties"
        },
        "iframeCodec": {
          "type": "string",
          "description": "The codec used for I-frame only segment",
          "enum": [
            "e_VIDEO",
            "e_MJPG",
            "e_BOTH"
          ]
        },
        "iframeDiscreteSegmentInterval": {
          "type": "string",
          "description": "The interval to generate discrete I-frame based on the IDR for VOD I-frame only playlist",
          "enum": [
            "e_PER_SEGMENT",
            "e_PER_IDR"
          ]
        },
        "iframeEnableInitSection": {
          "type": "boolean",
          "description": "Enable to add EXT-X-MAP in I-frame only playlist. Value only takes effect for package in TS"
        },
        "iframeMjpegSegmentInterval": {
          "type": "string",
          "description": "The interval to generate thumbnails based on the IDR for I-frame only playlist for MJPEG codecs.",
          "enum": [
            "e_PER_SEGMENT",
            "e_PER_IDR"
          ]
        },
        "iframeSegmentHandling": {
          "type": "string",
          "description": "The method to record the IDR for I-frame only playlist.",
          "enum": [
            "e_BYTE_RANGE",
            "e_IDR_SEGMENT"
          ]
        },
        "indexFileNameForIFrameOnlyStreamForFlattenedMode": {
          "type": "string",
          "description": "An index file is an ordered list of media URLs and informational tags. Each media URL refers to a media file which is a segment of a I-Frame Only stream. This setting specifies the file name of the index file for each variant stream excluding file extension (i.e. .m3u8).\r\n\r\nSupported escape pattern:\r\n%streamid Stream ID\r\n\r\nSample configuration: %streamid\r\nResultant file name: 01.m3u8"
        },
        "indexFileNameForMediaStreamForFlattenedMode": {
          "type": "string",
          "description": "An index file is an ordered list of media URLs and informational tags. Each media URL refers to a media file which is a segment of a single contiguous stream. This setting specifies the file name of the index file for each variant stream excluding file extension (i.e. .m3u8).\r\n\r\nSupported escape pattern:\r\n%streamid Stream ID\r\n%streamid:streamIdFormat=%0{number}llu Stream ID in some format, for example %01llu. %02llu is the default.\r\n\r\nSample configuration: %streamid\r\nResultant file name: 01.m3u8\r\nSample configuration: %streamid:streamIdFormat=%01llu\r\nResultant file name: 1.m3u8"
        },
        "indexPlaylistCustomization": {
          "description": "Index Playlist customization settings",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.hlsCustomization.IndexPlaylistCustomization"
        },
        "insertAudioChannels": {
          "type": "boolean",
          "description": "Specify whether the CHANNEL value must be inserted in master playlist for each audio track."
        },
        "insertCustomStreamName": {
          "type": "boolean",
          "description": "Insert custom name to NAME attribute of EXT-X-MEDIA tag in HLS manifest."
        },
        "insertPlaylistCustomTag": {
          "type": "boolean",
          "description": "Insert custom tag in Master playlist header"
        },
        "isoLanguageCode": {
          "type": "string",
          "description": "Define ISO language code to use for audio and subtitles.",
          "enum": [
            "e_ISO_639_1",
            "e_ISO_639_2_3"
          ]
        },
        "keepOverlayPlcmtOppInClear": {
          "type": "boolean",
          "description": "Keep Overlay Placement Opportunity in Clear"
        },
        "keyChangePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The key change period for key rotation (expressed in seconds)."
        },
        "lateBindingAudio": {
          "type": "string",
          "description": "Enable late binding audio at manifest. If set to Both, two variant playlists will be generated.",
          "enum": [
            "e_ENABLE_LATE_BINDING_AUDIO",
            "e_DISABLE_LATE_BINDING_AUDIO",
            "e_BOTH"
          ]
        },
        "masterPlaylistCustomization": {
          "description": "Master Playlist customization settings",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.hlsCustomization.MasterPlaylistCustomization"
        },
        "nameAttribute": {
          "type": "string",
          "description": "Name attribute",
          "enum": [
            "DEFAULT",
            "IN_ENGLISH",
            "IN_NATIVE"
          ]
        },
        "noExtXKeyTagForUnencryptedStreams": {
          "type": "boolean",
          "description": "No EXT-X-KEY tag for unencrypted streams"
        },
        "packagingEncryptionProfileId": {
          "type": "string",
          "description": "Enable packaging encryption"
        },
        "partHoldBackInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Set the part hold back duration in low-latency HLS playlist (in milliseconds). -1 means 3 x part target duration"
        },
        "partTargetDurationInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Set the part target duration in low-latency HLS playlist (in milliseconds). 0 means auto"
        },
        "passThroughParameterSets": {
          "type": "boolean",
          "description": "Pass-through Parameter Sets. When this parameter is true, the video parameter sets store in the sample entry and the samples, and the sample entry name is 'hev1' for HEVC or 'avc3' for AVC. Otherwise, the video parameter sets store only in the sample entry, and the sample entry name is 'hvc1' for HEVC or 'avc1' for AVC."
        },
        "playlistCustomTag": {
          "type": "string",
          "description": "Insert custom string tag in HLS manifest."
        },
        "richSegmentUriInfo": {
          "type": "boolean",
          "description": "Rich Segment URI Info option provides an alternative playlist generation method which is easier for publishing destinations to parse the playlists."
        },
        "scte27SubtitleHandling": {
          "type": "array",
          "description": "The way to handle SCTE-27 subtitles. Can be converted to SMPTE-TT. Empty list implies to ignore SCTE-27 subtitle.",
          "items": {
            "type": "string",
            "enum": [
              "e_TO_SMPTE_TT",
              "e_TO_WEBVTT_OCR"
            ]
          }
        },
        "scte35AnnotationTag": {
          "type": "string",
          "description": "Control the tag for annotating SCTE35 message on HLS playlist",
          "enum": [
            "e_SCTE35",
            "e_DATERANGE",
            "e_ALL_ANNOTATION"
          ]
        },
        "scte35CIDPassthrough": {
          "type": "boolean",
          "description": "Enable SCTE35 ContentID Handling. When this parameter is true, the Content ID signal will be pass-through by inserting a event message with base64 string on the manifest."
        },
        "scte35DaterangeTagsInMs": {
          "type": "boolean",
          "description": "Use milliseconds for SCTE-35 EXT-X-DATERANGE tag"
        },
        "scte35DefaultAutoReturnDuration": {
          "type": "integer",
          "format": "int32",
          "description": "SCTE-35 Default Auto-return Duration, for signaling mode e_STANDARD, e_GOOGLE_DOUBLE_CLICK, e_UK_1, e_NBC and e_HULU only."
        },
        "scte35GoogleHlsVodAnnotationType": {
          "type": "string",
          "description": "The way of handling Google Double Click VOD SCTE35 messages. 'NONE' means ignoring the messages; 'e_placementOpportunity' means when a SCTE-35 message provider placement opportunity start with duration=0 is received, the PTS in this message will be used to start a new segment and the #EXT-X-PLACEMENT-OPPORTUNITY tag, will be inserted in the manifest for this segment.",
          "enum": [
            "e_NONE",
            "e_PLACEMENT_OPPORTUNITY"
          ]
        },
        "scte35RetainProgramChapterStart": {
          "type": "boolean",
          "description": "Retain program/chapter start SCTE-35 messages in NBC mode"
        },
        "scte35Signaling": {
          "type": "string",
          "description": "The way of handling SCTE35 messages. 'NONE' means ignoring the messages; 'BASE64' means writing the SCTE35 data to playlist in base64 format.; 'STANDARD' means writing the SCTE35 data to playlist in SCTE35 Standard format; 'GOOGLE DOUBLE CLICK' means writing the SCTE35 data to playlist in Google Double Click format; 'UK 1' means writing the SCTE35 data to playlist in UK 1 format; 'NBC' means writing the SCTE35 data to playlist in NBC annotation; 'HULU' means writing the SCTE35 data to playlist in Hulu annotation; Default is 'NONE'",
          "enum": [
            "e_NONE",
            "e_BASE64",
            "e_STANDARD",
            "e_GOOGLE_DOUBLE_CLICK",
            "e_UK_1",
            "e_NBC",
            "e_HULU",
            "e_SAMSUNG_TV_PLUS",
            "e_GENERIC"
          ]
        },
        "segmentFileNamePrefixForFlattenedMode": {
          "type": "string",
          "description": "The file name prefix of the media segment files.\r\n\r\nSupported escape pattern:\r\n%starttime Publishing session start time\r\n%sequence Media segment sequence number\r\n%streamid Stream ID\r\n%time - Segment start time\r\n\r\nSample configuration: %starttime-%streamid-%sequence\r\nResultant file name: 20120108T035411-01-13949.ts"
        },
        "segmentLength": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecated) The duration of the media segment files (in seconds)."
        },
        "segmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the media segment files (in milliseconds)."
        },
        "segmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the media segment files actually retain in the publishing server (in minutes)."
        },
        "skipDuplicateExtXKeyTag": {
          "type": "boolean",
          "description": "Skip duplicate EXT-X-KEY tags"
        },
        "specifyStartingLivePoint": {
          "type": "boolean",
          "description": "Specify starting live point"
        },
        "startingLivePoint": {
          "type": "integer",
          "format": "int32",
          "description": "Starting live point in seconds. A positive number indicates a time offset from the beginning of the Playlist. A negative number indicates a negative time offset from the end of the last Media Segment in the Playlist."
        },
        "subtitleNamePattern": {
          "type": "string",
          "description": "The subtitle name pattern.\r\n\r\nSupported escape pattern:\r\n%LANG Subtitle language code in uppercase\r\n%lang Subtitle language code in uppercase\r\n%index Subtitle track index\r\n\r\nSample configuration: Sub%lang or Sub%LANG or Sub%index or Sub%LANG%index (for language: ita)\r\nResultant subtitle name: Subita or SubITA or Sub1 or SubITA1"
        },
        "targetDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Set the target duration in playlist (in seconds). 0 means follow segment duration"
        },
        "teletextHandling": {
          "type": "string",
          "description": "(Deprecated) The way to handle teletext. Can be converted to WebVTT or passthrough",
          "enum": [
            "e_NONE",
            "e_TO_WEBVTT",
            "e_PASSTHROUGH",
            "e_TO_IMSC1"
          ]
        },
        "teletextHandlingList": {
          "type": "array",
          "description": "The way to handle teletext. Can be passthrough and/or converted to WebVTT, and/or converted to IMSC1",
          "items": {
            "type": "string",
            "enum": [
              "e_NONE",
              "e_TO_WEBVTT",
              "e_PASSTHROUGH",
              "e_TO_IMSC1"
            ]
          }
        },
        "ttmlTemplate": {
          "type": "string",
          "description": "The TTML template. String in XML that allows to control how output TTML looks like"
        },
        "urlOrderOfVariantPlaylist": {
          "type": "string",
          "description": "Specify how the playlist URLs are arranged in the variant playlist.",
          "enum": [
            "e_BITRATE_ASCENDING",
            "e_BITRATE_DESCENDING"
          ]
        },
        "useCmaf": {
          "type": "boolean",
          "description": "Package in fMP4"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "The variant playlist lists the URLs of each variant stream to allow clients to switch between encodings dynamically. This setting specifies the file name of the variant playlist excluding file extension (i.e. .m3u8). For example, if this value is set to 'master' (excluding ''), the actual file name will be 'master.m3u8'."
        }
      },
      "name": "HlsPackagingProperties"
    },
    "com.harmonicinc.vos.app.monitor.liveevent.model.LiveEventUpdateRequest": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Live Event end time in UTC"
        },
        "prerollDuration": {
          "type": "integer",
          "format": "int64",
          "description": "Live Event preroll duration in seconds"
        },
        "prerollSlate": {
          "type": "string",
          "description": "Live Event preroll slate image ID"
        },
        "startTime": {
          "type": "string",
          "description": "Live Event start time in UTC"
        }
      },
      "name": "LiveEventUpdateRequest"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.RtpStatistics": {
      "properties": {
        "inputRtpPacketsDropped": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "RtpStatistics"
    },
    "com.harmonicinc.vos.app.atm.datatypes.AudioStreamSelection": {
      "required": [
        "audioCodecSelection",
        "bitrateRange"
      ],
      "properties": {
        "audioCodecSelection": {
          "type": "string",
          "description": "Settings of Audio Codec Selection",
          "enum": [
            "AAC_LC",
            "HE_AAC_V1",
            "HE_AAC_V2",
            "AC_3",
            "E_AC_3",
            "ALL"
          ]
        },
        "bitrateRange": {
          "description": "Filtering bitrate - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.AudioStreamSelection$BitrateRange"
        },
        "indexRanges": {
          "type": "array",
          "description": "Filtering index - min and max",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.IndexRange"
          }
        },
        "languageCodes": {
          "type": "array",
          "description": "Filtering audios with language codes, case intensive, match by same character number",
          "items": {
            "type": "string"
          }
        },
        "withAudioGain": {
          "type": "string",
          "description": "Filtering audios with gain applied at the transcoding stage and audios without",
          "enum": [
            "ENABLE",
            "DISABLE",
            "ALL"
          ]
        }
      },
      "name": "AudioStreamSelection"
    },
    "com.harmonicinc.vos.app.configure.model.DescramblingKeyPair": {
      "properties": {
        "entitlementKeyId": {
          "type": "string",
          "example": "0123456789ABCDEF",
          "description": "16 hexadecimal characters long representation of the EntitlementKeyId. The EntitlementKeyId is generated from the public key as described in the EBU Tech 3292s1 document. It is used to identify the key in the entitlement system."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the key pair"
        },
        "mode": {
          "type": "string",
          "example": "INJECTED_KEY",
          "description": "Identifies how is generated the key pair. The possible values are: INJECTED_KEY (injected by user) or BURIED_KEY (buried at factory).",
          "enum": [
            "INJECTED_KEY",
            "BURIED_KEY"
          ]
        }
      },
      "name": "DescramblingKeyPair"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequencePrimaryElement": {
      "properties": {
        "primaryData": {
          "description": "sequence primary event properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequencePrimaryProperties"
        },
        "secondaries": {
          "type": "array",
          "description": "list of sequence secondary events",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceSecondaryElement"
          }
        }
      },
      "name": "SequencePrimaryElement"
    },
    "com.harmonicinc.vos.esam.pois.config.EsamConfig": {
      "required": [
        "numberOfInstances"
      ],
      "properties": {
        "numberOfInstances": {
          "type": "integer",
          "format": "int32",
          "description": "Number of instances of ESAM Pod, set to 1 to enable and 0 to disable ESAM Pod",
          "minimum": 0,
          "maximum": 1
        }
      },
      "name": "EsamConfig"
    },
    "com.harmonicinc.vos.app.uplink.hub.uplinkchannel.HspInput": {
      "type": "object",
      "properties": {
        "endpointUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ipInputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.uplinkchannel.impl.IpInput"
          }
        },
        "variantPlaylistFileName": {
          "type": "string"
        }
      },
      "name": "HspInput"
    },
    "com.harmonicinc.vos.asset.acquisition.model.ExternalStorageUsageStatistics": {
      "properties": {
        "endpointName": {
          "type": "string"
        },
        "externalAssetStorageName": {
          "type": "string"
        },
        "externalAssetStorageType": {
          "type": "string"
        },
        "externalAssetStorageUsageInBytes": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "instanceId": {
          "type": "string"
        },
        "reportTime": {
          "type": "string"
        }
      },
      "name": "ExternalStorageUsageStatistics"
    },
    "com.harmonicinc.vos.app.configure.model.service.PatConfig": {
      "name": "PatConfig"
    },
    "com.harmonicinc.vos.app.atm.rest.model.AtmScalingConfig": {
      "properties": {
        "atmAutoScalingConfig": {
          "description": "The KEDA auto scaling setting of ATM pod",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmAutoScalingConfig"
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of ATM pod replicas"
        }
      },
      "name": "AtmScalingConfig"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.LiveSourceMonitoringProperties": {
      "properties": {
        "sources": {
          "type": "array",
          "description": "List of monitoring sources",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.LiveSourceMonitoringStatus"
          }
        }
      },
      "name": "LiveSourceMonitoringProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties": {
      "properties": {
        "audioStreamSelections": {
          "type": "array",
          "description": "audioStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$AudioStreamSelectionItem"
          }
        },
        "videoStreamSelections": {
          "type": "array",
          "description": "videoStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$VideoStreamSelectionItem"
          }
        }
      },
      "name": "InputStreamSelectionProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.GeneralSettings": {
      "properties": {
        "applyDefaultDecision": {
          "type": "boolean"
        },
        "applyS3Refresher": {
          "type": "boolean"
        },
        "cdnPlaybackProtocol": {
          "type": "string",
          "enum": [
            "HTTP",
            "HTTPS"
          ]
        },
        "copySourceFilesFromS3": {
          "type": "boolean"
        },
        "decisionTemplate": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.DecisionTemplate"
        },
        "defaultFileServerId": {
          "type": "string"
        },
        "disableDefaultDecisionPath": {
          "type": "string"
        },
        "drmSettings": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestDrmSettings"
        },
        "enableThumbnailIndexing": {
          "type": "boolean"
        },
        "eraseInputFiles": {
          "type": "boolean"
        },
        "externalStorageUsageCollectionPeriodInHours": {
          "type": "integer",
          "format": "int32"
        },
        "fileFormatConversionProfileId": {
          "type": "string"
        },
        "generatePreview": {
          "type": "boolean"
        },
        "keepSourceFiles": {
          "type": "boolean"
        },
        "localCopyRevisePeriod": {
          "type": "integer",
          "format": "int32"
        },
        "logoTemplateId": {
          "type": "string"
        },
        "originPlaybackUrlSecured": {
          "type": "boolean"
        },
        "previewProfileId": {
          "type": "string"
        },
        "s3CopyFileSizeLimit": {
          "type": "integer",
          "format": "int64"
        },
        "s3RefresherInitialDelay": {
          "type": "integer",
          "format": "int32"
        },
        "s3RefresherUpdatePeriod": {
          "type": "integer",
          "format": "int32"
        },
        "storageUsageCollectionPeriodInHours": {
          "type": "integer",
          "format": "int32"
        },
        "subtitlesLanguageCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "GeneralSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenVideoProfile": {
      "properties": {
        "aspectRatio": {
          "type": "string",
          "description": "Obsolete",
          "enum": [
            "e_16_9",
            "e_4_3",
            "e_PASSTHROUGH"
          ]
        },
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate of video in bps"
        },
        "codec": {
          "type": "string",
          "description": "Video codec used for converting",
          "enum": [
            "e_HEVC",
            "e_AVC",
            "e_VVC"
          ]
        },
        "descriptorMode": {
          "type": "string",
          "description": "Reserved",
          "enum": [
            "e_LEGACY",
            "e_MANUAL",
            "e_DYNAMIC_PASSTHROUGH"
          ]
        },
        "enableOutputAfd": {
          "type": "boolean",
          "description": "Obsolete"
        },
        "enableVMAFEstimation": {
          "type": "boolean",
          "description": "Alpha Feature: Enable/Disable VMAF estimation. When enabled, the VMAF estimation will be shown in Kibana for AVC 1080P/1080I."
        },
        "enableVitcOutput": {
          "type": "boolean",
          "description": "Enable VITC output"
        },
        "encodingLevel": {
          "type": "string",
          "description": "Encoding level for video",
          "enum": [
            "e_H264_AUTO",
            "e_H264_1",
            "e_H264_1_1",
            "e_H264_1_2",
            "e_H264_1_3",
            "e_H264_2",
            "e_H264_2_1",
            "e_H264_2_2",
            "e_H264_3",
            "e_H264_3_1",
            "e_H264_3_2",
            "e_H264_4",
            "e_H264_4_1",
            "e_H264_4_2",
            "e_H264_5",
            "e_H264_5_1",
            "e_H265_AUTO",
            "e_H265_1",
            "e_H265_2",
            "e_H265_2_1",
            "e_H265_3",
            "e_H265_3_1",
            "e_H265_4",
            "e_H265_4_1",
            "e_H265_5",
            "e_H265_5_1",
            "e_H264_5_2",
            "e_H265_5_2",
            "e_H265_6",
            "e_H265_6_1",
            "e_H265_6_2",
            "e_H266_AUTO"
          ]
        },
        "encodingProfile": {
          "type": "string",
          "description": "Encoding profile for video",
          "enum": [
            "e_H264_HIGH",
            "e_H264_MAIN",
            "e_H264_BASELINE",
            "e_H265_MAIN",
            "e_H265_MAIN_10_BIT",
            "e_H266_MAIN10_10_BIT"
          ]
        },
        "framerate": {
          "type": "string",
          "description": "Frame rate of video",
          "enum": [
            "e_1",
            "e_FOLLOW_SOURCE",
            "e_HALF",
            "e_QUARTER",
            "e_24",
            "e_25",
            "e_29_97",
            "e_50",
            "e_59_94"
          ]
        },
        "gopLenM": {
          "type": "string",
          "description": "GOP Len M",
          "enum": [
            "e_AUTO",
            "e_IP",
            "e_IBP",
            "e_IBBP",
            "e_IBBBP",
            "e_IBBBBBBBP",
            "e_IDR"
          ]
        },
        "gopLenN": {
          "type": "integer",
          "format": "int32",
          "description": "GOP Len N"
        },
        "gopOption": {
          "type": "string",
          "description": "GOP option",
          "enum": [
            "e_OPEN_FIXED",
            "e_OPEN_VARIABLE",
            "e_OPEN_CAPPED",
            "e_CLOSED_FIXED",
            "e_CLOSED_VARIABLE",
            "e_OPEN_FIXED_M",
            "e_CLOSED_FIXED_M"
          ]
        },
        "hResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Resolution of horizontal video"
        },
        "hdrDynamicMetadataPassthrough": {
          "type": "boolean",
          "description": "Enable the Dolby-Vision 8.1 or AHDR SL-HDR1 metadata passthrough. If the input is HEVC with metadata, the metadata will be passthrough, otherwise they are generated. False by default."
        },
        "hdrSignaling": {
          "type": "string",
          "description": "HDR Signaling, work with HEVC codec and H265 Main10 encoding Profile",
          "enum": [
            "e_NONE",
            "e_PASSTHROUGH",
            "e_BT_709_HLG",
            "e_BT_709_SDR",
            "e_BT_2020",
            "e_BT_2020_HLG",
            "e_BT_2020_HLG_14",
            "e_BT_2020_HDR10",
            "e_BT_2020_DoVi_5",
            "e_BT_2020_DoVi_8_1",
            "e_BT_2020_DoVi_8_1_ST2094_40",
            "e_BT_2020_DoVi_8_4",
            "e_BT_2020_DoVi_8_4_14",
            "e_BT_2020_ST2094_10",
            "e_BT_2020_ST2094_40",
            "e_BT_2020_ST2094_10_40",
            "e_BT_709_SL_HDR1",
            "e_BT_2020_DR_PASSTHROUGH",
            "e_BT_709_DR_PASSTHROUGH"
          ]
        },
        "idrPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "IDR frame period of video in second"
        },
        "idrPeriodMs": {
          "type": "integer",
          "format": "int32",
          "description": "IDR frame period of video in millisecond"
        },
        "interlace": {
          "type": "boolean",
          "description": "Interlace Output"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of video",
          "items": {
            "type": "string"
          }
        },
        "lcevcParam": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$LcevcParam"
        },
        "logoSlateGroupLabel": {
          "type": "string",
          "description": "Logo and Slate Group label for per profile insertion"
        },
        "mmsGroup": {
          "type": "integer",
          "format": "int32",
          "description": "MmsGroup ID"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the video"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 481 if not defined in source grooming (non-TS source for example). Any other value is not recommended and will behave as -1 in current version."
        },
        "profileIndex": {
          "type": "integer",
          "format": "int32",
          "description": "When not null, profides ordering among output profiles, with value starting from 1. When null, order in the JSON is used."
        },
        "rateControl": {
          "type": "string",
          "description": "Rate Control",
          "enum": [
            "e_ABR",
            "e_EYEQ",
            "e_CBR"
          ]
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of video",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        },
        "vResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Resolution of vertical video"
        },
        "vbvDelay": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Video buffering verifier buffer time in miliseconds, and value under 10 represents time in seconds"
        },
        "videoKey": {
          "type": "string",
          "description": "Video key to match the audio or data list. If null, default algorithm is used"
        }
      },
      "name": "MultiscreenVideoProfile"
    },
    "com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon": {
      "properties": {
        "callbackServer": {
          "description": "The request settings used by callback server",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$CallbackServer"
        },
        "callbackUrl": {
          "type": "string",
          "description": "The callback endpoint used to listen on the parental control insertion status"
        },
        "channelId": {
          "type": "string",
          "description": "The ID is used by Parental Control API to identify the service"
        },
        "commandScheduler": {
          "description": "The request settings used by command scheduler",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$CommandScheduler"
        },
        "hlsID3Pid": {
          "type": "integer",
          "format": "int32",
          "description": "The HLS parental control ID3 PID"
        }
      },
      "name": "ParentalControlAddon"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmCustomHeader": {
      "required": [
        "fieldName",
        "fieldValue"
      ],
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "Custom Header Field Name"
        },
        "fieldValue": {
          "type": "string",
          "description": "Custom Header Field Value"
        }
      },
      "name": "DrmCustomHeader"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.UpdateSequencePrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        }
      },
      "name": "UpdateSequencePrimaryProperties"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.billing.SaasServiceDetail": {
      "properties": {
        "lrsRegions": {
          "type": "array",
          "description": "List of LRS Regions",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.billing.LrsRegion"
          }
        }
      },
      "name": "SaasServiceDetail"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalSourceSetting": {
      "properties": {
        "autoSlateDisableConditions": {
          "type": "array",
          "description": "Specify the auto slate disable conditions",
          "items": {
            "type": "string",
            "enum": [
              "e_SCRAMBLED_PID"
            ]
          }
        },
        "playoutLiveSourceProtocol": {
          "type": "string",
          "description": "Specify live source protocol for playout",
          "enum": [
            "SRT",
            "IP"
          ]
        },
        "sourceCloudlinkDefaultProtocol": {
          "type": "string",
          "enum": [
            "ZIXI",
            "HSP"
          ]
        },
        "sourceDefaultVideoBitrateSizeInMB": {
          "type": "integer",
          "format": "int32",
          "description": "Specify the Size for video bitrate for pass through profile case if the source is not groomed, default value is 20MB",
          "minimum": 0,
          "maximum": 1024000
        },
        "sourceFailoverConditions": {
          "type": "array",
          "description": "Specify the source failover conditions, source data loss will be applied by default",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SourceFailoverCondition"
          }
        },
        "sourceHspIngestPointSizeInMB": {
          "type": "integer",
          "format": "int32",
          "description": "Specify the Size for HSP ingest point, default value is 1200MB",
          "minimum": 0,
          "maximum": 1024000
        },
        "useFragmentingDownloadForHsp": {
          "type": "boolean",
          "description": "Specify whether to use fragmenting download for HSP input"
        },
        "visualArtifactWatchdog": {
          "type": "boolean",
          "description": "Specify enable or disable watchdog for source visual artifact"
        }
      },
      "name": "GlobalSourceSetting"
    },
    "com.harmonicinc.vos.app.configure.model.service.DecoderSettings": {
      "properties": {
        "latency": {
          "description": "The SDI latency parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Latency"
        }
      },
      "name": "DecoderSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutProfileProperties": {
      "required": [
        "packagingProfileType"
      ],
      "properties": {
        "dashManifest": {
          "type": "string",
          "description": "A serialized DASH manifest which defines desired video, audio, subtitle adaptation set. Will be used only if the packagingProfileType equals \"e_DASH\"."
        },
        "hlsVariantPlaylist": {
          "type": "string",
          "description": "A serialized HLS variant playlist which defines desired video, audio, subtitle streams. Will be used only if the packagingProfileType equals \"e_HLS\"."
        },
        "packagingProfileType": {
          "type": "string",
          "description": "The packaging profile type of pure OTT playout channel.",
          "enum": [
            "e_DASH",
            "e_HLS"
          ]
        }
      },
      "name": "PureOttPlayoutProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalCloudDestinationSettings": {
      "properties": {
        "dejitterDelayMsec": {
          "type": "integer",
          "format": "int32",
          "description": "Buffer in milliseconds used to accumulate data before streaming."
        },
        "downloadRetryPeriodSec": {
          "type": "integer",
          "format": "int32",
          "description": "Downloadable time period for data. If the data has not been downloaded during this period, it is discarded."
        }
      },
      "name": "GlobalCloudDestinationSettings"
    },
    "com.harmonicinc.vos.app.atm.rest.model.ContentReplacementChannel": {
      "required": [
        "upstreamURL"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "description": "The channel name of the variant channel. Must be unique. "
        },
        "contentSegmentDeliveryPrefix": {
          "description": "Delivery prefixes for origin contents",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix"
        },
        "deliveryMode": {
          "type": "string",
          "description": "Delivery mode. If the value is null or DEFAULT, RELATIVE for VCM and RELATIVE_MASTER for PMM. Options: DEFAULT, RELATIVE_MASTER, ABSOLUTE, ABSOLUTE_MASTER, RELATIVE",
          "enum": [
            "DEFAULT",
            "ABSOLUTE",
            "ABSOLUTE_MASTER",
            "RELATIVE",
            "RELATIVE_MASTER"
          ]
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "DVR Window Size in Seconds."
        },
        "enableDeltaUpdate": {
          "type": "boolean",
          "description": "Enable delta update of manipulated manifests."
        },
        "enableIFrame": {
          "type": "boolean",
          "description": "True when enable IFrame stream in the resulting manifests. Supported for HLS only."
        },
        "enableImageStream": {
          "type": "boolean",
          "description": "True when enable image stream in the resulting manifests. Supported for HLS only."
        },
        "enableSCTE35Signal": {
          "type": "boolean",
          "description": "True when including SCTE35 signals in the resulting manifests."
        },
        "enableSubtitle": {
          "type": "boolean",
          "description": "True when stitching the subtitle into the resulting manifests. Supported for HLS only."
        },
        "manifestVariantDeliveryPrefix": {
          "type": "string",
          "description": "Delivery prefixes for HLS master variant URL"
        },
        "mediaID": {
          "type": "string",
          "description": "The SCTE224 Media ID"
        },
        "segmentDeliveryPrefix": {
          "type": "object",
          "description": "Delivery prefixes for origin content",
          "additionalProperties": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$SegmentDeliveryPrefix"
          }
        },
        "upstreamURL": {
          "type": "string",
          "description": "The Content Source URL. (Only the manifest path, with manifest filename. Should end with '/')"
        }
      },
      "name": "ContentReplacementChannel"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.bitrate.TsBitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "Max bitrate in bps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "Min bitrate in bps"
        }
      },
      "name": "TsBitrateRange"
    },
    "com.harmonicinc.vos.app.configure.model.destination.Output": {
      "required": [
        "id",
        "outputType",
        "rank",
        "redundancyMode"
      ],
      "properties": {
        "asiSettings": {
          "description": "Settings of an ASI output",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.AsiOutput"
        },
        "hspSettings": {
          "description": "Settings of an HSP output",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.HSP_Output"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of an output in UUID format"
        },
        "ipSettings": {
          "description": "Settings of an IP output",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.IP_Output"
        },
        "originSettings": {
          "description": "Settings of an origin output",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.OriginOutput"
        },
        "outputType": {
          "type": "string",
          "description": "Type of the output",
          "enum": [
            "IP",
            "ORIGIN",
            "HARMONIC_CLOUDLINK",
            "ZIXI",
            "HSP",
            "OTT_PLAYOUT",
            "SRT",
            "CLOUD",
            "ASI",
            "SDI"
          ]
        },
        "psiSiTableSpoolingConfig": {
          "type": "array",
          "description": "Settings of PSI/SI table Spooling",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.PsiSiTableSpoolingConfig"
          }
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of output to be used"
        },
        "redundancyMode": {
          "type": "string",
          "description": "The output Redundancy mode",
          "enum": [
            "MANDATORY",
            "STANDBY",
            "DISABLED"
          ]
        },
        "sdiSettings": {
          "description": "Settings of an SDI output",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.SDI_Output"
        }
      },
      "name": "Output"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmResource": {
      "required": [
        "id",
        "name",
        "packagingType",
        "resourceId"
      ],
      "properties": {
        "drmTrackFilterId": {
          "type": "string",
          "description": "DRM filtering profile Id"
        },
        "id": {
          "type": "string",
          "description": "ID of DRM Resource"
        },
        "name": {
          "type": "string",
          "description": "Resource Name"
        },
        "packagingType": {
          "type": "string",
          "description": "Packaging Type",
          "enum": [
            "e_HLS",
            "e_DASH",
            "e_SS",
            "e_CMAF"
          ]
        },
        "resourceId": {
          "type": "string",
          "description": "Resource Id"
        },
        "widevineCustomContentProtection": {
          "type": "string",
          "description": "Widevine Custom Content Protection"
        }
      },
      "name": "DrmResource"
    },
    "com.harmonicinc.vos.app.configure.model.service.Service": {
      "required": [
        "profileId"
      ],
      "properties": {
        "addons": {
          "description": "Add-ons to a service; e.g. Logo",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Addons"
        },
        "availabilityZone": {
          "type": "string",
          "description": "Availability zone where the service shall run"
        },
        "controlState": {
          "type": "string",
          "description": "Control state of a service",
          "enum": [
            "ACTIVATED",
            "TEST",
            "OFF"
          ]
        },
        "deploymentInformation": {
          "description": "Additional deployment information",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.deployment.DeploymentInformation"
        },
        "destinationId": {
          "type": "string",
          "description": "Id of destination connected to a service"
        },
        "destinationsId": {
          "type": "array",
          "description": "List of destination connected to a service",
          "items": {
            "type": "string"
          }
        },
        "dynamicProgramMode": {
          "type": "string",
          "description": "Specify the dynamic program mode of a service",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "extraVideoDelay": {
          "type": "integer",
          "format": "int32",
          "description": "This overrides the same param in LabWizard profile"
        },
        "geoRedundancyMode": {
          "type": "string",
          "description": "Specify the geographic redundancy mode of a service",
          "enum": [
            "ON",
            "OFF",
            "AUTO"
          ]
        },
        "geoRedundancyTimeReference": {
          "type": "string",
          "description": "Specify the geographic redundancy time reference of a service",
          "enum": [
            "AUTO",
            "VITC"
          ]
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a service in UUID format"
        },
        "labels": {
          "type": "array",
          "description": "Labels attached to service for identification",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Display name of a service"
        },
        "orchestrationLabels": {
          "type": "array",
          "description": "Labels for service orchestration",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.OrchestrationLabel"
          }
        },
        "orchestrationNodeSelectors": {
          "type": "array",
          "description": "Labels for service node selector",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.OrchestrationNodeSelector"
          }
        },
        "pauseGeoRedundancy": {
          "type": "boolean",
          "description": "Declare if Geo redundancy is paused."
        },
        "priority": {
          "type": "string",
          "description": "Priority of a service (low, normal, high)",
          "enum": [
            "LOW",
            "NORMAL",
            "HIGH"
          ]
        },
        "processingParameters": {
          "description": "Processing parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ProcessingParameters"
        },
        "profileId": {
          "type": "string",
          "description": "Id of profile used by a service"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of a service"
        },
        "redundancyMode": {
          "type": "string",
          "description": "Specify the redundancy mode of a service; Service rank will take effect if it's on",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "sdiAudioFormats": {
          "type": "array",
          "description": "list of output sdi audio format (maximum 8 audio formats)",
          "items": {
            "type": "string",
            "enum": [
              "PCM_stereo",
              "PCM_5_1",
              "Passthrough"
            ]
          }
        },
        "serviceSources": {
          "type": "array",
          "description": "Sources connected to a service",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ServiceSource"
          }
        },
        "serviceTrackingMode": {
          "type": "string",
          "description": "Specify the service tracking mode of a service",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "serviceTrackingSetting": {
          "description": "Specify the service tracking settings of a service",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ServiceTrackingSetting"
        },
        "serviceType": {
          "type": "string",
          "description": "Type of service. Specifies if the SSPE POD should be kept alive after service become OFFLINE",
          "enum": [
            "LIVE",
            "LIVE_EVENT"
          ]
        },
        "sourceFailoverConditions": {
          "type": "array",
          "description": "Specify type of SourceFailoverCondition of a service",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SourceFailoverCondition"
          }
        },
        "sourceSwitchSetting": {
          "description": "Source switch setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.SourceSwitchSetting"
        },
        "subServices": {
          "type": "array",
          "description": "Multi Encoding Profiles Sevice",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.SubService"
          }
        }
      },
      "name": "Service"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.DrmSetting": {
      "required": [
        "enableDrm"
      ],
      "properties": {
        "enableDrm": {
          "type": "boolean",
          "description": "Enable / Disable encryption"
        },
        "perPackageDrmSystemIdList": {
          "type": "array",
          "description": "Specify list of DRM System ID per package. For differentiate KMS endpoint for different packaging profiles",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.PerPackageDrmSystemId"
          }
        },
        "perPackageDrmTrackFilterList": {
          "type": "array",
          "description": "Specify list of DRM track filter per package. For assign different DRM track filter for different packages",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.PerPackageDrmTrackFilter"
          }
        },
        "perPackageResourceIdList": {
          "type": "array",
          "description": "Specify list of resource ID per package. For assign different resource ID for different packages",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.PerPackageResourceId"
          }
        },
        "resourceId": {
          "type": "string",
          "description": "Per asset encryption resource ID. Data-path will generate a random one if not specified or empty"
        }
      },
      "name": "DrmSetting"
    },
    "com.harmonicinc.vos.app.atm.rest.model.RegionalAdsChannel": {
      "required": [
        "upstreamURL"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "description": "The channel name of the variant channel. Must be unique. "
        },
        "contentSegmentDeliveryPrefix": {
          "description": "Delivery prefixes for origin contents",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix"
        },
        "deliveryMode": {
          "type": "string",
          "description": "Delivery mode. If the value is null or DEFAULT, RELATIVE for VCM and RELATIVE_MASTER for PMM. Options: DEFAULT, RELATIVE_MASTER, ABSOLUTE, ABSOLUTE_MASTER, RELATIVE",
          "enum": [
            "DEFAULT",
            "ABSOLUTE",
            "ABSOLUTE_MASTER",
            "RELATIVE",
            "RELATIVE_MASTER"
          ]
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "DVR Window Size in Seconds."
        },
        "enableDeltaUpdate": {
          "type": "boolean",
          "description": "Enable delta update of manipulated manifests."
        },
        "enableIFrame": {
          "type": "boolean",
          "description": "True when enable IFrame stream in the resulting manifests. Supported for HLS only."
        },
        "enableImageStream": {
          "type": "boolean",
          "description": "True when enable image stream in the resulting manifests. Supported for HLS only."
        },
        "enableSCTE35Signal": {
          "type": "boolean",
          "description": "True when including SCTE35 signals in the resulting manifests."
        },
        "enableSubtitle": {
          "type": "boolean",
          "description": "True when stitching the subtitle into the resulting manifests. Supported for HLS only."
        },
        "geoSyncEnable": {
          "type": "boolean",
          "description": "Enable redundancy mode for VCM channel"
        },
        "manifestVariantDeliveryPrefix": {
          "type": "string",
          "description": "Delivery prefixes for HLS master variant URL"
        },
        "mediaID": {
          "type": "string",
          "description": "The SCTE224 Media ID"
        },
        "regionalAdTxProfile": {
          "type": "string",
          "description": "The ID of transcoding profile of regional ads."
        },
        "segmentDeliveryPrefix": {
          "type": "object",
          "description": "Delivery prefixes for origin content",
          "additionalProperties": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$SegmentDeliveryPrefix"
          }
        },
        "upstreamURL": {
          "type": "string",
          "description": "The Content Source URL. (Only the manifest path, with manifest filename. Should end with '/')"
        }
      },
      "name": "RegionalAdsChannel"
    },
    "com.harmonicinc.vos.mux.model.componentlevel.ComponentInputIdentifier": {
      "required": [
        "inputObjectId",
        "inputPid",
        "inputType"
      ],
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "The serviceId of the service for a transcoded service or sourceId for a passthrough service"
        },
        "inputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Input PID"
        },
        "inputProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Input Program number for a pass through service, MUST be null for a transcoded service"
        },
        "inputType": {
          "type": "string",
          "description": "Input Type : ENCODING_SERVICE, TS_SOURCE",
          "enum": [
            "ENCODING_SERVICE",
            "TS_SOURCE"
          ]
        }
      },
      "name": "ComponentInputIdentifier"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.DataGrooming": {
      "properties": {
        "ccConversionMode": {
          "type": "string",
          "description": "Prefered Closed Caption type",
          "enum": [
            "AUTO",
            "EIA608",
            "CEA708"
          ]
        },
        "tracks": {
          "type": "array",
          "description": "Essential metadata of data tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.DataTrack"
          }
        }
      },
      "name": "DataGrooming"
    },
    "com.harmonicinc.vos.notification.rest.model.NotificationScheduleFixParam": {
      "required": [
        "acknowledgedBy",
        "scheduleFixInstruction",
        "scheduleFixTime"
      ],
      "properties": {
        "acknowledgedBy": {
          "type": "string",
          "description": "Username of the user who responsible for the schedule fix"
        },
        "scheduleFixInstruction": {
          "type": "string",
          "description": "Schedule fix remark"
        },
        "scheduleFixTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the schedule fix"
        }
      },
      "name": "NotificationScheduleFixParam"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.CaptionServiceDescriptorData": {
      "required": [
        "captionServiceNumber",
        "digitalCc",
        "language",
        "streamName"
      ],
      "properties": {
        "captionServiceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Caption service number of caption service in the range [1..63] if digital_cc == 1. It has no meaning if digital_cc == 0"
        },
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the caption service stream is the stream for default subtitle"
        },
        "digitalCc": {
          "type": "integer",
          "format": "int32",
          "description": "Digital CC of caption service: 0=\u003E608, 1=\u003E708"
        },
        "language": {
          "type": "string",
          "description": "ISO 639.2/B 3 character language code of caption service. It has no meaning if digital_cc == 0"
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name to insert to HLS/DASH/CMAF manifest"
        }
      },
      "name": "CaptionServiceDescriptorData"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorAsiSource": {
      "required": [
        "asiCard",
        "asiPort"
      ],
      "properties": {
        "asiCard": {
          "type": "integer",
          "format": "int32",
          "description": "ASI card used to receive the input (value 0 for card 1, and so on)."
        },
        "asiPort": {
          "type": "integer",
          "format": "int32",
          "description": "ASI port used to receive the input (value 0 for port 1, and so on)."
        }
      },
      "name": "MonitorAsiSource"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmGroup": {
      "required": [
        "drms",
        "id",
        "name",
        "packagingType"
      ],
      "properties": {
        "drms": {
          "type": "array",
          "description": "List of DRM system id",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "ID of DRM Group"
        },
        "name": {
          "type": "string",
          "description": "DRM Group Name"
        },
        "packagingType": {
          "type": "string",
          "description": "Packaging Type",
          "enum": [
            "e_HLS",
            "e_DASH",
            "e_SS",
            "e_CMAF"
          ]
        }
      },
      "name": "DrmGroup"
    },
    "com.harmonicinc.vos.app.configure.model.source.DtmfProfile": {
      "required": [
        "command",
        "duration",
        "preRollTime",
        "spliceMode",
        "spliceType"
      ],
      "properties": {
        "command": {
          "type": "string",
          "description": "6-character command string built from the character set [0-9,*,#]."
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "For duration-based splice points, duration time in milliseconds."
        },
        "preRollTime": {
          "type": "integer",
          "format": "int32",
          "description": "For normal splices points, pre-roll time in milliseconds, within range [4000, 25000], default: 4000."
        },
        "spliceMode": {
          "type": "string",
          "description": "Splice mode: NO_DURATION, AUTO_RETURN, NO_AUTO_RETURN",
          "enum": [
            "NO_DURATION",
            "AUTO_RETURN",
            "NO_AUTO_RETURN"
          ]
        },
        "spliceType": {
          "type": "string",
          "description": "Splice type: START_NORMAL, START_IMMEDIATE, END_NORMAL, END_IMMEDIATE",
          "enum": [
            "START_NORMAL",
            "START_IMMEDIATE",
            "END_NORMAL",
            "END_IMMEDIATE"
          ]
        }
      },
      "name": "DtmfProfile"
    },
    "com.harmonicinc.vos.app.configure.model.service.AffiliateAddon": {
      "properties": {
        "affiliateId": {
          "type": "string",
          "description": "Id of affiliate"
        }
      },
      "name": "AffiliateAddon"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorHspSource": {
      "required": [
        "hspEndpoint"
      ],
      "properties": {
        "hspEndpoint": {
          "type": "string",
          "description": "Live ingest endpoint of the source"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Network interface for downling the source. Applicable for XOS and VOS CNS only"
        }
      },
      "name": "MonitorHspSource"
    },
    "com.harmonicinc.vos.app.configure.model.source.TeletextDescriptor": {
      "required": [
        "teletextDescriptorData"
      ],
      "properties": {
        "teletextDescriptorData": {
          "type": "array",
          "description": "Data of Teletext Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TeletextDescriptorData"
          }
        }
      },
      "name": "TeletextDescriptor"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.InputGrooming": {
      "properties": {
        "audioGrooming": {
          "description": "Essential metadata of audio",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.AudioGrooming"
        },
        "dataGrooming": {
          "description": "Essential metadata of data services",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.DataGrooming"
        }
      },
      "name": "InputGrooming"
    },
    "com.harmonicinc.vos.app.configure.model.service.BroadcasterIdAddon": {
      "properties": {
        "origin": {
          "type": "string",
          "description": "Id of affiliate",
          "enum": [
            "ATSC",
            "USER_DEFINED"
          ]
        }
      },
      "name": "BroadcasterIdAddon"
    },
    "com.harmonicinc.vos.app.configure.model.pool.Pool": {
      "properties": {
        "divitrackIP": {
          "type": "string",
          "description": "IP address for the divitrack rate message"
        },
        "divitrackIpNetworkAddress": {
          "type": "string",
          "description": "Interface address for sending and receiving divitrack messages"
        },
        "divitrackPoolBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate for the divitrack pool in bps"
        },
        "divitrackPoolId": {
          "type": "integer",
          "format": "int32",
          "description": "Divitrack pool id"
        },
        "divitrackPoolLatencyMode": {
          "type": "string",
          "description": "Latency mode for a divitrack pool",
          "enum": [
            "DEFAULT",
            "REDUCED",
            "EXTENDED"
          ]
        },
        "divitrackPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the divitrack rate message"
        },
        "downstreamComplexityIpDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Network delay for the downstream complexity message"
        },
        "downstreamIpDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Downstream network delay"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a pool. If specified, pool source will not be created automatically."
        },
        "labels": {
          "type": "array",
          "description": "Labels attached to a pool for identification",
          "items": {
            "type": "string"
          }
        },
        "maxSourcesDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum sources delay"
        },
        "muxAddress": {
          "type": "array",
          "description": "IP addresses of the mux",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Display name of a pool"
        },
        "poolMode": {
          "type": "string",
          "description": "Rate mode for the pool",
          "enum": [
            "VBR",
            "CBR"
          ]
        },
        "stcIp": {
          "type": "string",
          "description": "IP address for the divitrack STC message"
        },
        "stcPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the divitrack STC message"
        },
        "upstreamIpDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Upstream network delay"
        },
        "useNominalBitrate": {
          "type": "boolean",
          "description": "Use the provisioned nominal bitrate by user in destination object. If this value is false or absent, nominal bitrate will be determined automatically. (For internal use)"
        }
      },
      "name": "Pool"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.graphic.StartGraphicProperties": {
      "properties": {
        "name": {
          "type": "string"
        },
        "templateFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.playout.zookeeper.event.TemplateField"
          }
        }
      },
      "name": "StartGraphicProperties"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.IPSource": {
      "required": [
        "ip",
        "ipPort"
      ],
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Automatic grooming"
        },
        "descramblingKey": {
          "type": "string",
          "description": "Descrambling key"
        },
        "ip": {
          "type": "string",
          "description": "IP Address of input"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network Address used to receive the stream"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP Port of input"
        },
        "ssm": {
          "type": "array",
          "description": "SSM Address List of Input",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "IPSource"
    },
    "com.harmonicinc.vos.mux.monitor.model.eas.EasOutputProgramState": {
      "required": [
        "outputProgramId",
        "state"
      ],
      "properties": {
        "outputProgramId": {
          "type": "string",
          "description": "UUID of the output program where the eas is enabled"
        },
        "state": {
          "type": "string",
          "description": "Eas state",
          "enum": [
            "e_ORIGINAL",
            "e_EAS_CHANNEL"
          ]
        }
      },
      "name": "EasOutputProgramState"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentList": {
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "name": "RestSegmentList"
    },
    "com.harmonicinc.vos.labwizard.rest.model.PackagingProfileProperties": {
      "required": [
        "name",
        "packagingProfileType"
      ],
      "properties": {
        "cmafPackagingProperties": {
          "description": "The Properties of CMAF packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.CmafPackagingProperties"
        },
        "dashPackagingProperties": {
          "description": "The Properties of Dash packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DashPackagingProperties"
        },
        "hlsPackagingProperties": {
          "description": "The Properties of HLS packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsPackagingProperties"
        },
        "inputStreamSelectionProfileId": {
          "type": "string",
          "description": "Specify the id of stream selection profile."
        },
        "internalPackagingProperties": {
          "description": "The settings for internal packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.InternalPackagingProperties"
        },
        "manipulationProfileIds": {
          "type": "array",
          "description": "The List of manipulation profile Ids.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The unique name of packaging profile. it is used to differentiate packaging profile"
        },
        "ottSetTopBoxProfileId": {
          "type": "string",
          "description": "Specify the id of packaging destination specific ott set top box profile."
        },
        "packagingProfileType": {
          "type": "string",
          "description": "The type of packaging profile.",
          "enum": [
            "e_DASH",
            "e_HLS",
            "e_SS",
            "e_INTERNAL",
            "e_RAW_TS",
            "e_RTMP",
            "e_CMAF",
            "e_THUMBNAIL"
          ]
        },
        "rawTsPackagingProperties": {
          "description": "The settings for Raw TS packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.RawTsPackagingProperties"
        },
        "rtmpPackagingProperties": {
          "description": "The settings for RTMP packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.RtmpPackagingProperties"
        },
        "ssPackagingProperties": {
          "description": "The Properties of Smooth Streaming packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.SsPackagingProperties"
        },
        "thumbnailPackagingProperties": {
          "description": "The Properties of thumbnail packaging.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ThumbnailPackagingProperties"
        }
      },
      "name": "PackagingProfileProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenAudio": {
      "properties": {
        "audioTrackIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Audio track index used to map the audio track in input audio grooming"
        },
        "language": {
          "type": "string",
          "description": "Used for mapping audio source with processing profile, 'All Language', means the setting of 1st language will overwrite all the setting for other languages"
        },
        "languageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Audio index used to mapping the languages defined in Configure app's setting, support up to 16 audio tracks, range 1~16"
        },
        "profiles": {
          "type": "array",
          "description": "List of multiscreen audio processing setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenAudioProfile"
          }
        },
        "sourceLabel": {
          "type": "string",
          "description": "(Deprecrated) Label of the source stream to be processed"
        }
      },
      "name": "MultiscreenAudio"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties": {
      "properties": {
        "bitrateMode": {
          "type": "string",
          "description": "Bitrate mode of stream, e.g. constant bitrate or ouput for evolved Multimedia Broadcast Multicast Services",
          "enum": [
            "e_CBR",
            "e_eMBMS",
            "e_ABR",
            "e_HVQ"
          ]
        },
        "cc608TO708": {
          "type": "string",
          "description": "Specifiy the conversion of CEA-608 captions to CEA-708 captions",
          "enum": [
            "e_AUTOSENSE",
            "e_ALWAYS",
            "e_NEVER"
          ]
        },
        "cc608To708": {
          "type": "string",
          "enum": [
            "e_AUTOSENSE",
            "e_ALWAYS",
            "e_NEVER"
          ]
        },
        "closedCaption": {
          "type": "string",
          "description": "Packetize the closed captioning data if it's present in the input stream",
          "enum": [
            "e_ATSC",
            "e_SCTE_20",
            "e_DIVICOM",
            "e_NADBS",
            "e_DTVLACC",
            "e_608FROM708",
            "e_SCTE_20_ATSC",
            "e_SCTE_20_MOT_DVS_157",
            "e_CHINA_CC",
            "e_NONE"
          ]
        },
        "descriptors": {
          "type": "array",
          "description": "Define the stream descriptors",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Descriptor"
          }
        },
        "disableAc3DescGeneration": {
          "type": "boolean",
          "description": "disable AC3/EAC3 descriptor generation"
        },
        "dpi": {
          "description": "Configure DPI of stream if SCTE 35 messages are carried in input source, e.g. filter mode or should handle stream conditioning or splicing",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$DPI"
        },
        "mappingType": {
          "type": "string",
          "enum": [
            "e_PID_BASED",
            "e_PROGRAM_NUMBER_BASED"
          ]
        },
        "pidBaseMap": {
          "description": "Remap the output pid based on base and offset value, outputPid=basePid+pidOffset(++)",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$PidBaseMap"
        },
        "profileType": {
          "type": "string",
          "enum": [
            "e_IPTV",
            "e_MULTISCREEN"
          ]
        },
        "programNumberMap": {
          "description": "Remap the output pid based on program number, multiplier and offset value, outputPid=(programNumber*multiplier)+pidOffset(++)",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$ProgramNumberMap"
        },
        "restrictions": {
          "type": "array",
          "description": "Define the special rules to process this particular STB profile",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Restriction"
          }
        },
        "subtitling": {
          "description": "Configure Subtitling of the stream, e.g. input selection of DVB or EBU or any, specify the expected output format",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Subtitling"
        },
        "teletext": {
          "description": "Configure Teletext of the stream, e.g. input selection of DVB or VBI or any, specify the expected output format",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Teletext"
        }
      },
      "name": "STBProfileProperties"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedIngressStatistics": {
      "properties": {
        "bitrate": {
          "type": "number",
          "format": "double"
        },
        "packetLost": {
          "type": "integer",
          "format": "int64"
        },
        "packetReceived": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "CombinedIngressStatistics"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmScheduleInternal": {
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmEventInternal"
          }
        }
      },
      "name": "PreWarmScheduleInternal"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.channelmanager.ChannelSetProperties": {
      "properties": {
        "channelOverride": {
          "type": "string",
          "description": "Allow to enable the channel override feature",
          "enum": [
            "OFF",
            "ON"
          ]
        },
        "liveSourceLockoutTime": {
          "type": "integer",
          "format": "int32",
          "description": "Live input lockout time, in seconds [1..30 mn] default 300 seconds, Used by the automation to lock monitoring of live source used by the playlist"
        },
        "scheduleReplacementLockoutTime": {
          "type": "integer",
          "format": "int32",
          "description": "Lockout time applied to replace a schedule"
        }
      },
      "name": "ChannelSetProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAsset": {
      "required": [
        "ingestEndTime",
        "ingestStartTime",
        "sourceUri"
      ],
      "properties": {
        "adminState": {
          "type": "string",
          "description": "Control an asset is online (i.e. available for egress) or not. Default is ONLINE",
          "enum": [
            "ONLINE",
            "OFFLINE"
          ]
        },
        "drmSetting": {
          "description": "Encryption settings",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.DrmSetting"
        },
        "errorMessage": {
          "type": "string",
          "description": "Message describing the reason if there is error"
        },
        "id": {
          "type": "string",
          "description": "UUID will be generated if not specified"
        },
        "ingestEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the LLCU asset, with format yyyy-MM-ddTHH:mm:ss.SSSZ"
        },
        "ingestPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "LLCU extraction progress in percentage unit"
        },
        "ingestStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the LLCU asset, with format yyyy-MM-ddTHH:mm:ss.SSSZ"
        },
        "opState": {
          "type": "string",
          "description": "Reflects the current state of the asset. CREATED if ingestStartTime is not reached; INGESTING if ingestStartTime is passed; INGESTED if asset is indexed; ERROR otherwise",
          "enum": [
            "CREATED",
            "INGESTING",
            "INGESTED",
            "DELETING",
            "ERROR"
          ]
        },
        "packages": {
          "type": "array",
          "description": "Package related info",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.potfserver.configlib.datamodel.rest.PackageInfo"
          }
        },
        "path": {
          "type": "string",
          "description": "Storage path of LLCU asset"
        },
        "reindexSetting": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.ReindexSetting"
        },
        "sourceUri": {
          "type": "string",
          "description": "Service ID. The service source which LLCU asset will be extracted from"
        }
      },
      "name": "LlcuAsset"
    },
    "com.harmonicinc.vos.labwizard.rest.model.Scte35GenericProperties": {
      "properties": {
        "periodTimingSpecification": {
          "type": "array",
          "description": "Period Timing Specification for VOD (generic signalling mode)",
          "items": {
            "type": "string",
            "enum": [
              "e_BY_START_ATTRIBUTE",
              "e_BY_DURATION_ATTRIBUTE"
            ]
          }
        },
        "scte35Carriage": {
          "type": "array",
          "description": "SCTE-35 carriage (generic signalling mode)",
          "items": {
            "type": "string",
            "enum": [
              "e_INBAND_SEGMENT_BINARY",
              "e_IN_MPD_BASE64"
            ]
          }
        }
      },
      "name": "Scte35GenericProperties"
    },
    "com.harmonicinc.vos.app.monitor.model.SlateRequestConfig": {
      "required": [
        "slateState"
      ],
      "properties": {
        "slateState": {
          "type": "string",
          "description": "Slate Status",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "time": {
          "type": "string",
          "description": "Slate request time in UTC (Format: 2011-12-03T10:15:30Z), must be no later than 1 minute from current time"
        }
      },
      "name": "SlateRequestConfig"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkOutputStatisticEntry": {
      "required": [
        "outputBitrate",
        "time"
      ],
      "properties": {
        "outputBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The bitrate (bps) of output"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic, e.g. 2015-11-04T09:11:33Z"
        }
      },
      "name": "UplinkOutputStatisticEntry"
    },
    "com.harmonicinc.vos.app.configure.model.service.ResourceSettingsAddon": {
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double"
        },
        "cpuLimit": {
          "type": "number",
          "format": "double"
        },
        "gpu": {
          "type": "number",
          "format": "double"
        },
        "memory": {
          "type": "number",
          "format": "double"
        }
      },
      "name": "ResourceSettingsAddon"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.SecondaryElement": {
      "properties": {
        "secondaryData": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.SecondaryProperties"
        }
      },
      "name": "SecondaryElement"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Restriction": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the restriction"
        },
        "name": {
          "type": "string",
          "description": "Name of the restriction"
        },
        "options": {
          "type": "string",
          "description": "Options of Restriction"
        },
        "restrictionType": {
          "type": "string",
          "description": "Type of the restriction",
          "enum": [
            "e_VIDEO_ENCODING",
            "e_AUDIO_ENDCODING",
            "e_GENERAL"
          ]
        },
        "script": {
          "type": "string",
          "description": "Restriction express in java script"
        },
        "type": {
          "type": "string",
          "description": "Restriction to which data format",
          "enum": [
            "e_NUMBER",
            "e_STRING",
            "e_ENUM"
          ]
        }
      },
      "name": "Restriction"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Avs2Properties": {
      "required": [
        "avs2Level",
        "avs2Profile"
      ],
      "properties": {
        "avs2Level": {
          "type": "string",
          "description": "Level of AVS2 stream",
          "enum": [
            "LEVEL_2_0_15",
            "LEVEL_2_0_30",
            "LEVEL_2_0_60",
            "LEVEL_4_0_30",
            "LEVEL_4_0_60",
            "LEVEL_6_0_30",
            "LEVEL_6_2_30",
            "LEVEL_6_0_60",
            "LEVEL_6_2_60",
            "LEVEL_6_0_120",
            "LEVEL_6_2_120",
            "LEVEL_8_0_30",
            "LEVEL_8_2_30",
            "LEVEL_8_0_60",
            "LEVEL_8_2_60",
            "LEVEL_8_0_120",
            "LEVEL_8_2_120",
            "LEVEL_10_0_30",
            "LEVEL_10_2_30",
            "LEVEL_10_0_60",
            "LEVEL_10_2_60",
            "LEVEL_10_0_120",
            "LEVEL_10_2_120"
          ]
        },
        "avs2Profile": {
          "type": "string",
          "description": "Profile of AVS2 stream",
          "enum": [
            "PROFILE_MAIN_PICTURE",
            "PROFILE_MAIN",
            "PROFILE_MAIN_10"
          ]
        }
      },
      "name": "Avs2Properties"
    },
    "com.harmonicinc.vos.app.configure.model.source.ISO639DescriptorData": {
      "required": [
        "iso639AudioType",
        "language"
      ],
      "properties": {
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the ISO639 data stream is the stream for default subtitle"
        },
        "iso639AudioType": {
          "type": "string",
          "description": "Audio Type of audio stream",
          "enum": [
            "UNDEFINED",
            "CLEAN_EFFECTS",
            "HEARING_IMPAIRED",
            "VISUAL_IMPAIRED_COMMENTARY",
            "PRIMARY",
            "NATIVE"
          ]
        },
        "language": {
          "type": "string",
          "description": "Language code of stream"
        }
      },
      "name": "ISO639DescriptorData"
    },
    "com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix": {
      "properties": {
        "DASH": {
          "type": "string",
          "description": "Delivery prefix for DASH package type"
        },
        "HLS": {
          "type": "string",
          "description": "Delivery prefix for HLS package type"
        }
      },
      "name": "DeliveryPrefix"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerSubtitle": {
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subtitlesAssetFileServer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.SubtitlesAssetFileServer"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "name": "FileServerSubtitle"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.StorageSettings": {
      "properties": {
        "mgs3fsCachePoolSizeRatio": {
          "type": "number",
          "format": "double",
          "description": "Ratio of memory configured in mgs3fs cache pool size"
        },
        "mgs3fsWorkerThreads": {
          "type": "integer",
          "format": "int32",
          "description": "Number of worker threads for MGS3FS, set to null for MGS3FS' default"
        },
        "preferred": {
          "type": "string",
          "description": "The preferred storage to use for serving timeshift content",
          "enum": [
            "PRIMARY",
            "BACKUP"
          ]
        }
      },
      "name": "StorageSettings"
    },
    "com.harmonicinc.vos.app.atm.rest.model.LiveEventClippingChannel": {
      "required": [
        "upstreamURL"
      ],
      "properties": {
        "channelName": {
          "type": "string",
          "description": "The channel name of the variant channel. Must be unique. "
        },
        "contentSegmentDeliveryPrefix": {
          "description": "Delivery prefixes for origin contents",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix"
        },
        "deliveryMode": {
          "type": "string",
          "description": "Delivery mode. If the value is null or DEFAULT, RELATIVE for VCM and RELATIVE_MASTER for PMM. Options: DEFAULT, RELATIVE_MASTER, ABSOLUTE, ABSOLUTE_MASTER, RELATIVE",
          "enum": [
            "DEFAULT",
            "ABSOLUTE",
            "ABSOLUTE_MASTER",
            "RELATIVE",
            "RELATIVE_MASTER"
          ]
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "DVR Window Size in Seconds."
        },
        "enableDeltaUpdate": {
          "type": "boolean",
          "description": "Enable delta update of manipulated manifests."
        },
        "enableIFrame": {
          "type": "boolean",
          "description": "True when enable IFrame stream in the resulting manifests. Supported for HLS only."
        },
        "enableImageStream": {
          "type": "boolean",
          "description": "True when enable image stream in the resulting manifests. Supported for HLS only."
        },
        "enableSCTE35Signal": {
          "type": "boolean",
          "description": "True when including SCTE35 signals in the resulting manifests."
        },
        "enableSubtitle": {
          "type": "boolean",
          "description": "True when stitching the subtitle into the resulting manifests. Supported for HLS only."
        },
        "manifestVariantDeliveryPrefix": {
          "type": "string",
          "description": "Delivery prefixes for HLS master variant URL"
        },
        "segmentDeliveryPrefix": {
          "type": "object",
          "description": "Delivery prefixes for origin content",
          "additionalProperties": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$SegmentDeliveryPrefix"
          }
        },
        "upstreamURL": {
          "type": "string",
          "description": "The Content Source URL. (Only the manifest path, with manifest filename. Should end with '/')"
        }
      },
      "name": "LiveEventClippingChannel"
    },
    "com.harmonicinc.vos.app.configure.model.source.HspEndpointSettings": {
      "required": [
        "hspEndpoint",
        "variantPlaylistFileName"
      ],
      "properties": {
        "authenticationHeader": {
          "description": "Authentication header",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HspAuthenticationHeader"
        },
        "hspEndpoint": {
          "type": "string",
          "description": "Internal Live ingest endpoint of the source"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Network interface for downling the source. Applicable for XOS and VOS CNS only"
        },
        "publicHspEndpoint": {
          "type": "string",
          "description": "Public Live ingest endpoint of the source"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Playlist File Name of the source"
        }
      },
      "name": "HspEndpointSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenVideoWatermark": {
      "properties": {
        "irdetoProperties": {
          "description": "Multiscreen Irdeto watermark properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IrdetoWatermarkProperties"
        },
        "nagraNglmProperties": {
          "description": "Multiscreen Nagra Nexguard watermark properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.NagraNglmWatermarkProperties"
        },
        "type": {
          "type": "string",
          "description": "Multiscreen video watermark type",
          "enum": [
            "e_NONE",
            "e_NAGRA_NGLM",
            "e_IRDETO"
          ]
        }
      },
      "name": "MultiscreenVideoWatermark"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.PlayReadyHeaderObject": {
      "properties": {
        "customAttributes": {
          "type": "string",
          "description": "Arbitrary XML: CUSTOMATTRIBUTES"
        },
        "dsId": {
          "type": "string",
          "description": "Service ID for the domain service: DS_ID"
        },
        "includeChecksum": {
          "type": "boolean",
          "description": "To include checksum or not in PlayReady Header Object: CHECKSUM"
        },
        "kid": {
          "type": "string",
          "description": "Key ID in Base64 representation: KID"
        },
        "laUrl": {
          "type": "string",
          "description": "URL for the license acquisition Web service: LA_URL"
        },
        "luiUrl": {
          "type": "string",
          "description": "URL for a non-silent license acquisition Web page: LUI_URL"
        }
      },
      "name": "PlayReadyHeaderObject"
    },
    "com.harmonicinc.vos.app.configure.model.source.CroppingSettings": {
      "properties": {
        "bottom": {
          "type": "integer",
          "format": "int32",
          "description": "Number of pixels to crop at the bottom of the input video. Shall not be negative. Input height minus 'top' and 'bottom' shall be greater than 64."
        },
        "left": {
          "type": "integer",
          "format": "int32",
          "description": "Number of pixels to crop at the left of the input video. Shall not be negative. Width minus 'left' and 'right' shall be greater than 64."
        },
        "right": {
          "type": "integer",
          "format": "int32",
          "description": "Number of pixels to crop at the right of the input video. Shall not be negative. Width minus 'left' and 'right' shall be greater than 64."
        },
        "top": {
          "type": "integer",
          "format": "int32",
          "description": "Number of pixels to crop at the top of the input video. Shall not be negative. Input height minus 'top' and 'bottom' shall be greater than 64."
        }
      },
      "name": "CroppingSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.ActionResponse": {
      "properties": {
        "assetId": {
          "type": "string"
        },
        "transcodingJobs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "ActionResponse"
    },
    "com.harmonicinc.vos.asset.acquisition.model.SubtitlesGrooming": {
      "properties": {
        "dvbSubtitleHandling": {
          "type": "string",
          "enum": [
            "PASSTHROUGH",
            "OCR_TO_WEBVTT"
          ]
        },
        "ocrConversionBackgroundColor": {
          "type": "string"
        },
        "subtitles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingSubtitleTrack"
          }
        }
      },
      "name": "SubtitlesGrooming"
    },
    "com.harmonicinc.vos.app.configure.model.source.InputGrooming": {
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate of the input"
        },
        "pcrCompliant": {
          "type": "boolean",
          "description": "Not supported, for future use"
        },
        "pmtPid": {
          "type": "integer",
          "format": "int32",
          "description": "PMT PID number of selected program"
        },
        "programName": {
          "type": "string",
          "description": "Program name of the input"
        }
      },
      "name": "InputGrooming"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.audio.AudioStreamSelectionItem": {
      "properties": {
        "audioCodecSelection": {
          "type": "string",
          "description": "audioCodecSelection",
          "enum": [
            "AAC_LC",
            "HE_AAC_V1",
            "HE_AAC_V2",
            "AC_3",
            "E_AC_3",
            "ALL"
          ]
        },
        "audioLanguageSelections": {
          "type": "array",
          "description": "audioLanguageSelections",
          "items": {
            "type": "string"
          }
        },
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.audio.AudioBitrateRange"
        }
      },
      "name": "AudioStreamSelectionItem"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$AdditionalHeaderConfig$AdditionalHeader": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "name": "AdditionalHeader"
    },
    "com.harmonicinc.vos.mux.model.programlevel.OutputProgram": {
      "required": [
        "outputProgramParameters"
      ],
      "properties": {
        "components": {
          "type": "array",
          "description": "components",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.componentlevel.OutputComponent"
          }
        },
        "controlState": {
          "type": "string",
          "description": "control state : ON_AIR, OFF_AIR",
          "enum": [
            "ON_AIR",
            "OFF_AIR"
          ]
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a program in UUID format"
        },
        "inputIdentifier": {
          "description": "input identifier",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.InputIdentifier"
        },
        "outputProgramParameters": {
          "description": "output program parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.OutputProgramParameters"
        }
      },
      "name": "OutputProgram"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.CloudSource": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Automatic grooming"
        },
        "cloudInputType": {
          "type": "string",
          "description": "Cloud input type",
          "enum": [
            "CLOUD_SOURCE",
            "CLOUD_EDGE"
          ]
        },
        "cloudSourceType": {
          "type": "string",
          "description": "Cloud source type",
          "enum": [
            "SRT",
            "RTMP",
            "RIST"
          ]
        },
        "egressId": {
          "type": "string",
          "description": "Id of the cloud egress"
        },
        "region": {
          "type": "string",
          "description": "Region of the cloud egress"
        },
        "resourceMode": {
          "type": "string",
          "description": "Cloud resource mode, determines whether a single stream or multiple different streams are used",
          "enum": [
            "SHARED",
            "DEDICATED"
          ]
        },
        "sourceId": {
          "type": "string",
          "description": "Id of cloud source"
        },
        "srtSource": {
          "description": "Srt source settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.SrtSource"
        },
        "userStreamId": {
          "type": "string",
          "description": "Stream ID for cloud resource"
        }
      },
      "name": "CloudSource"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAssetList": {
      "required": [
        "llcuAssets"
      ],
      "properties": {
        "llcuAssets": {
          "type": "array",
          "description": "List of LLCU asset details",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.LlcuAsset"
          }
        },
        "queryId": {
          "type": "string",
          "description": "For query the next page of asset list if value is specified"
        }
      },
      "name": "LlcuAssetList"
    },
    "com.harmonicinc.vos.labwizard.rest.model.VideoBasedScheme": {
      "required": [
        "interval",
        "videoPidAddend"
      ],
      "properties": {
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "PID to PID interval"
        },
        "videoPidAddend": {
          "type": "integer",
          "format": "int32",
          "description": "video PID addend"
        }
      },
      "name": "VideoBasedScheme"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentationData": {
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentTitled"
          }
        },
        "segmentsLists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentList"
          }
        }
      },
      "name": "RestSegmentationData"
    },
    "com.harmonicinc.vos.app.configure.model.source.DtmfSettings": {
      "required": [
        "audioSourceLabel",
        "profiles"
      ],
      "properties": {
        "audioSourceLabel": {
          "type": "string",
          "description": "Label of audio track carrying the DTMF signal"
        },
        "profiles": {
          "type": "array",
          "description": "List of DTMF profiles (min. 1, max. 6)",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DtmfProfile"
          }
        }
      },
      "name": "DtmfSettings"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.SrtConnectionSettings": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Ip address"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Interface"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency parameter"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port"
        },
        "srtEncryptionParams": {
          "description": "SRT encryption params",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.SrtEncryptionParams"
        },
        "streamId": {
          "type": "string",
          "description": "StreamId specification"
        }
      },
      "name": "SrtConnectionSettings"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsResource$SsDrm": {
      "properties": {
        "manifestHeader": {
          "type": "string",
          "description": "The manifestHeader of DrmFixedSsResource"
        },
        "name": {
          "type": "string",
          "description": "The name of DrmFixedSsResource"
        },
        "playReadyHeaderObject": {
          "description": "The playReadyHeaderObject of DrmFixedSsResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.PlayReadyHeaderObject"
        },
        "psshBox": {
          "type": "string",
          "description": "The psshBox of DrmFixedSsResource"
        },
        "systemId": {
          "type": "string",
          "description": "The systemId of DrmFixedSsResource"
        }
      },
      "name": "SsDrm"
    },
    "com.harmonicinc.vos.app.monitor.model.AudioProfileStatus": {
      "required": [
        "outputAudioProfiles",
        "srcCodec"
      ],
      "properties": {
        "outputAudioProfiles": {
          "type": "array",
          "description": "List of output audio profile information",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputAudioProfile"
          }
        },
        "srcCodec": {
          "type": "string",
          "description": "Input audio codec"
        }
      },
      "name": "AudioProfileStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.ThumbnailExporterAddon": {
      "required": [
        "generationInterval"
      ],
      "properties": {
        "exportPath": {
          "type": "string",
          "description": "The path to write the Thumbnails"
        },
        "generationInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Wanted generation interval for the thumbnails"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Vertical size of the thumbnails"
        },
        "password": {
          "type": "string",
          "description": "Credentials for FTP server"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix to name the generated thumbnails"
        },
        "suffix": {
          "type": "string",
          "description": "The suffix mode for the thumbnail filenames",
          "enum": [
            "e_TIMESTAMP",
            "e_NONE"
          ]
        },
        "userName": {
          "type": "string",
          "description": "Credentials for FTP server"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Horizontal size of the thumbnails"
        }
      },
      "name": "ThumbnailExporterAddon"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.checker.MissingAssetInfo": {
      "properties": {
        "assetId": {
          "type": "string"
        },
        "assetType": {
          "type": "string",
          "enum": [
            "PRIMARY",
            "SECONDARY"
          ]
        },
        "firstScheduleTimeTc": {
          "type": "string"
        },
        "numTimesInSchedule": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "MissingAssetInfo"
    },
    "com.harmonicinc.vos.labwizard.rest.model.Scte27ToDvbSubtitleConversionProperties": {
      "properties": {
        "forceDdsOn": {
          "type": "boolean",
          "description": "Force DDS On, default: false"
        },
        "language": {
          "type": "string",
          "description": "Output DVB Subtitle Language. default:ENG",
          "enum": [
            "ENG",
            "DEU",
            "SWE",
            "FIN",
            "HUN",
            "ITA",
            "FRA",
            "POR",
            "SPA",
            "CES",
            "SLK",
            "POL",
            "TUR",
            "SRP",
            "HRV",
            "SLV",
            "RON",
            "EST",
            "LAV",
            "LIT",
            "RUS",
            "BUL",
            "UKR",
            "ELL",
            "ARA",
            "HEB"
          ]
        },
        "pageId": {
          "type": "integer",
          "format": "int32",
          "description": "Page Id, default: 1, range: 0-255"
        },
        "subtitleType": {
          "type": "string",
          "description": "Output DVB subtitle descriptor type. default:e_NORMAL_0x10",
          "enum": [
            "e_NORMAL_0x10",
            "e_NORMAL_4_3_0x11",
            "e_NORMAL_16_9_0x12",
            "e_NORMAL_2_21_1_0x13",
            "e_NORMAL_HD_0x14",
            "e_HEARING_0x20",
            "e_HEARING_4_3_0x21",
            "e_HEARING_16_9_0x22",
            "e_HEARING_2_21_1_0x23",
            "e_HEARING_HD_0x24"
          ]
        }
      },
      "name": "Scte27ToDvbSubtitleConversionProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.VideoStreamSelectionItem": {
      "properties": {
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.bitrate.BitrateRange"
        },
        "frameRateRange": {
          "description": "frameRateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.FrameRateRange"
        },
        "horizontalResolutionRange": {
          "description": "horizontalResolutionRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.HorizontalResolutionRange"
        },
        "verticalResolutionRange": {
          "description": "verticalResolutionRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.VerticalResolutionRange"
        },
        "videoCodecSelection": {
          "type": "string",
          "description": "videoCodecSelection",
          "enum": [
            "H_265",
            "H_264",
            "ALL"
          ]
        }
      },
      "name": "VideoStreamSelectionItem"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$HorizontalResolutionRange": {
      "properties": {
        "maxHorizaontalResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete"
        },
        "maxHorizontalResolution": {
          "type": "integer",
          "format": "int32"
        },
        "minHorizaontalResolution": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete"
        },
        "minHorizontalResolution": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "HorizontalResolutionRange"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$KedaAutoscalerConfig": {
      "properties": {
        "cronTrigger": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$CronTrigger"
        },
        "responseTimeThresholdForFullScaleUp": {
          "type": "number",
          "format": "double"
        },
        "scaleDownPolicy": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$KedaScalePolicy"
        },
        "scaleDownStabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "targetCpuPercent": {
          "type": "integer",
          "format": "int32"
        },
        "targetRequestRate": {
          "type": "integer",
          "format": "int32"
        },
        "targetThroughputMbps": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "KedaAutoscalerConfig"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsPlayReadyResource$RootLicense": {
      "properties": {
        "systemData": {
          "type": "string",
          "description": "The systemData of RootLicense"
        },
        "systemId": {
          "type": "string",
          "description": "The systemId of RootLicense"
        }
      },
      "name": "RootLicense"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestVideoTrack": {
      "properties": {
        "bitDepth": {
          "type": "integer",
          "format": "int64"
        },
        "bitrate": {
          "type": "integer",
          "format": "int64"
        },
        "bitrateKbps": {
          "type": "integer",
          "format": "int64"
        },
        "bitrateMode": {
          "type": "string"
        },
        "chromaSubsampling": {
          "type": "string"
        },
        "codec": {
          "type": "string"
        },
        "codecProfile": {
          "type": "string"
        },
        "colorPrimaries": {
          "type": "string"
        },
        "colorSpace": {
          "type": "string"
        },
        "colorimetry": {
          "type": "string"
        },
        "compressionMode": {
          "type": "string"
        },
        "displayAspectRatio": {
          "type": "string"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "durationSec": {
          "type": "integer",
          "format": "int64"
        },
        "dynamicRange": {
          "type": "string"
        },
        "firstFrameTimeCode": {
          "type": "string"
        },
        "frameRate": {
          "type": "number",
          "format": "double"
        },
        "height": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "interlacement": {
          "type": "string"
        },
        "kindOfStream": {
          "type": "string"
        },
        "matrixCoefficient": {
          "type": "string"
        },
        "maximumBitrateMode": {
          "type": "integer",
          "format": "int64"
        },
        "maximumBitrateModeKbps": {
          "type": "integer",
          "format": "int64"
        },
        "resolution": {
          "type": "string"
        },
        "resolutionNumber": {
          "type": "integer",
          "format": "int64"
        },
        "scanOrder": {
          "type": "string"
        },
        "scanType": {
          "type": "string"
        },
        "transferCharacteristics": {
          "type": "string"
        },
        "videoFrameRate": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.FrameRate"
        },
        "width": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "RestVideoTrack"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.OutputDestinationProfileUpdate": {
      "properties": {
        "destinationProfileId": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        }
      },
      "name": "OutputDestinationProfileUpdate"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.region.AvailabilityZoneDetails": {
      "properties": {
        "apiName": {
          "type": "string",
          "description": "Region API name"
        },
        "displayName": {
          "type": "string",
          "description": "Display name"
        },
        "physicalAzId": {
          "type": "string",
          "description": "Physical AZ ID"
        }
      },
      "name": "AvailabilityZoneDetails"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AACAudioProperties": {
      "required": [
        "numberOfChannels",
        "sampleRate"
      ],
      "properties": {
        "aacAudioType": {
          "type": "string",
          "description": "AAC audio type of aac audio stream",
          "enum": [
            "AAC",
            "AAC_LATM"
          ]
        },
        "numberOfChannels": {
          "type": "integer",
          "format": "int32",
          "description": "Number of channels at aac audio stream"
        },
        "sampleRate": {
          "type": "integer",
          "format": "int32",
          "description": "Sample rate at aac audio stream"
        }
      },
      "name": "AACAudioProperties"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.StartLiveSourceMonitoringProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Source id to associate to the player"
        },
        "name": {
          "type": "string",
          "description": "Source name to associate to the player"
        }
      },
      "name": "StartLiveSourceMonitoringProperties"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputTS": {
      "required": [
        "inputObjectId",
        "inputObjectName",
        "inputType",
        "isCamMissing",
        "muxServiceId",
        "muxServiceName",
        "originalNetworkId",
        "syncLost",
        "tsId",
        "type"
      ],
      "properties": {
        "asiSource": {
          "description": "Asi Source parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorAsiSource"
        },
        "hspSource": {
          "description": "Hsp Source parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorHspSource"
        },
        "inputObjectId": {
          "type": "string",
          "description": "The serviceId for an ENCODING_SERVICE, or sourceId for a TS_SOURCE"
        },
        "inputObjectName": {
          "type": "string",
          "description": "The input object name, the input source name for a TS_SOURCE and the service name for a ENCODING_SERVICE"
        },
        "inputPrograms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputProgram"
          }
        },
        "inputType": {
          "type": "string",
          "description": "Input Type : ENCODING_SERVICE, TS_SOURCE",
          "enum": [
            "ENCODING_SERVICE",
            "TS_SOURCE"
          ]
        },
        "ipSource": {
          "description": "Ip Source parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorIpSource"
        },
        "isCamMissing": {
          "type": "boolean",
          "description": "CAM missing status, true if a CAM is intended to be used but is missing, false else"
        },
        "muxServiceId": {
          "type": "string",
          "description": "mux/demux service ID"
        },
        "muxServiceName": {
          "type": "string",
          "description": "mux/demux service name"
        },
        "originalNetworkId": {
          "type": "integer",
          "format": "int32",
          "description": "Label identifying the network_id of the originating delivery system ( null if not SDT in the TS INPUT TBD)"
        },
        "rfSource": {
          "description": "Rf Source parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorRfSource"
        },
        "sourceStatus": {
          "type": "string",
          "description": "Source status",
          "enum": [
            "e_OFFAIR",
            "e_ONAIR"
          ]
        },
        "sourceType": {
          "type": "string",
          "description": "Source type : e_IP, e_RF, e_ASI, e_SRT, e_HSP -  available for demux only",
          "enum": [
            "e_IP",
            "e_RF",
            "e_ASI",
            "e_SRT",
            "e_HSP"
          ]
        },
        "syncLost": {
          "type": "boolean",
          "description": "Synchro lost status, true if the TS INPUT is in synchro Lost, false else"
        },
        "tsId": {
          "type": "integer",
          "format": "int32",
          "description": "Transport stream id of the input TS"
        },
        "type": {
          "type": "string",
          "description": "Service type",
          "enum": [
            "e_MUX",
            "e_DEMUX"
          ]
        }
      },
      "name": "MonitorInputTS"
    },
    "com.harmonicinc.vos.app.monitor.model.Smpte2022_7TsEntry": {
      "required": [
        "lostRtpPrimary",
        "lostRtpSecondary"
      ],
      "properties": {
        "lostRtpPrimary": {
          "type": "integer",
          "format": "int32",
          "description": "Seamless SMPTE 2022-7: number of lost RTP packets on the primary input"
        },
        "lostRtpSecondary": {
          "type": "integer",
          "format": "int32",
          "description": "Seamless SMPTE 2022-7: number of lost RTP packets on the secondary input"
        }
      },
      "name": "Smpte2022_7TsEntry"
    },
    "com.harmonicinc.vos.app.monitor.model.Service": {
      "required": [
        "activeInstanceId",
        "destinationStatus",
        "downlinkOutputStatus",
        "id",
        "muteOperationData",
        "name",
        "originStatus",
        "outputTsStatus",
        "outputVideoPorfileStatus",
        "processingDockerImage",
        "processingEngine",
        "processingStatus",
        "sourceStatus"
      ],
      "properties": {
        "activeInstanceId": {
          "type": "string",
          "description": "The active instance ID of service"
        },
        "destinationStatus": {
          "description": "The status of destination",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.DestinationStatus"
        },
        "downlinkOutputStatus": {
          "description": "The status of downlink output",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.DownlinkOutputStatus"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a service in UUID format"
        },
        "muteOperationData": {
          "description": "The mute operation data in operator action addon",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.MuteOperationData"
        },
        "name": {
          "type": "string",
          "description": "Display name of a service"
        },
        "originStatus": {
          "description": "The status of origin",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OriginStatus"
        },
        "outputTsStatus": {
          "type": "array",
          "description": "Display output PIDs and related input PIDs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputTsStatus"
          }
        },
        "outputVideoPorfileStatus": {
          "type": "array",
          "description": "The processing profile",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.VideoProfileStatus"
          }
        },
        "processingDockerImage": {
          "type": "string",
          "description": "Custom processing docker image using by the service."
        },
        "processingEngine": {
          "type": "string",
          "description": "App key of the processing engine used by the service."
        },
        "processingStatus": {
          "description": "The status of processing",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ProcessingStatus"
        },
        "sourceStatus": {
          "type": "array",
          "description": "The status of source",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SourceStatus"
          }
        }
      },
      "name": "Service"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DpiProcessingProperties": {
      "properties": {
        "discontinuityAtSplicePt": {
          "type": "boolean",
          "description": "Insert Dicsontinuity indicator in the video stream at splice point"
        },
        "dpiPidIndex": {
          "type": "integer",
          "format": "int32",
          "description": "For this DPI component, only output SCTE35 messages related to SCTE104 messages with a matching DPI_PID_INDEX field. It is used to generate multi SCTE3( PIDs from one SCTE104 transport"
        },
        "dpiProcessingMode": {
          "type": "string",
          "description": " ['e_PASS_THROUGH','e_REGENERATION' ,'e_ENCODING_ONLY' ] dpiProcessingMode='e_PASS_THROUGH' for transcode with SCTE35\n\t\tdpiProcessingMode='e_ENCODING_ONLY' is necesary for SCTE104 (deprecated, use dpiProcessingOption instead)",
          "enum": [
            "e_PASS_THROUGH",
            "e_REGENERATION",
            "e_ENCODING_ONLY"
          ]
        },
        "dpiProcessingOption": {
          "type": "string",
          "description": "['e_IB_PASSTHROUGH_ONLY', 'e_OOB_ESAM_ONLY', 'e_IB_ESAM_OOB_ESAM', 'e_IB_PASSTHROUGH_OOB_ESAM','e_DSMCC'] Determine the behavior of in-band (IB) and out-of-band (OOB) ESAM, or set to DSMCC stream",
          "enum": [
            "e_IB_PASSTHROUGH_ONLY",
            "e_OOB_ESAM_ONLY",
            "e_IB_ESAM_OOB_ESAM",
            "e_IB_PASSTHROUGH_OOB_ESAM",
            "e_DSMCC"
          ]
        },
        "dpiSource": {
          "type": "string",
          "description": "['e_IP', 'e_ESAM', 'e_UMP_AS', ' e_VANC' , 'e_DTMF', 'e_ESAM_AND_UMP_AS'] dpiSource ='e_VANC' is necesary for SCTE104 over SDI (deprecated, use dpiProcessingOption instead)",
          "enum": [
            "e_IP",
            "e_ESAM",
            "e_UMP_AS",
            "e_VANC",
            "e_DTMF",
            "e_ESAM_AND_UMP_AS"
          ]
        },
        "dpiStbMode": {
          "type": "string",
          "description": "e_PROPRIETARY_MODE_1 enables proprietary tier and time-signal keep-alive handling, e_PROPRIETARY_MODE_2 enables pre-roll extended to 30 seconds for SCTE-104 commands",
          "enum": [
            "e_STANDARD",
            "e_PROPRIETARY_MODE_1",
            "e_PROPRIETARY_MODE_2"
          ]
        },
        "dpiTimeOffset": {
          "type": "integer",
          "format": "int32",
          "description": "parameter in milliseconds to adjust Splice timing in the video stream. Default is 0ms."
        },
        "enableSpliceAutoReturn": {
          "type": "boolean",
          "description": "generate automatic splice-in message for SCTE 104 splice insert command. Default is true."
        },
        "enableSpliceInsertRepetition": {
          "type": "boolean",
          "description": "Controls splice_insert() messages repetition every second during the 5s preroll period. Default is true."
        },
        "enableSpliceNull": {
          "type": "boolean",
          "description": "generates splice_null() SCTE35 messages in this DPI component"
        },
        "enableTimeDescriptor": {
          "type": "boolean",
          "description": "Enable time_descriptor() optional extension to the splice_insert(), splice_null() and time_signal() commands that allows a programmer's wall clock time to be sent to a client"
        },
        "ignoreSpliceCmdList": {
          "type": "array",
          "description": "list of splice command types of SCTE35 messages to be filtered out for this DPI component ",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ignoreSpliceInsert": {
          "type": "boolean",
          "description": "filter-out splice_insert SCTE35 messages for this DPI component"
        },
        "ignoreTimeSignal": {
          "type": "boolean",
          "description": "filter-out time_signal SCTE35 messages for this DPI component "
        },
        "insertIDR": {
          "type": "boolean",
          "description": "controls IDR insert for this DPI component. Default is true."
        },
        "scte104PrerollMode": {
          "type": "string",
          "description": "Minimum pre-roll required for this DPI component. Default is e_4_SEC. e_0_SEC/e_1_SEC allows support of low pre-roll component at the expense of longer video latency. Applicable use cases include baseband inputs (SCTE-104), TS inputs (SCTE-35 and SCTE-104 over ST-2038), and out-of-band inputs (SCTE-104, ESAM).",
          "enum": [
            "e_4_SEC",
            "e_1_SEC",
            "e_0_SEC"
          ]
        },
        "timeDescriptorOffset": {
          "type": "integer",
          "format": "int32",
          "description": "paratemer required to adjust programmer's wall clock time to be sent to a client with time_descriptor() optionnal mesages"
        }
      },
      "name": "DpiProcessingProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerExportDestination": {
      "properties": {
        "fileServerId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "name": "FileServerExportDestination"
    },
    "com.harmonicinc.vos.backuprestore.rest.BackupInfo": {
      "properties": {
        "backupId": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "imageSoftwareVersion": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "softwareVersion": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "IN_PROGRESS",
            "COMPLETED",
            "FAILED"
          ]
        }
      },
      "name": "BackupInfo"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PrimaryElement": {
      "properties": {
        "primaryData": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PrimaryProperties"
        },
        "secondaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.SecondaryElement"
          }
        }
      },
      "name": "PrimaryElement"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerAsset": {
      "properties": {
        "id": {
          "type": "string"
        },
        "inputAssetFileServer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.InputAssetFileServer"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subtitlesAssetFileServer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.SubtitlesAssetFileServer"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "name": "FileServerAsset"
    },
    "java.util.MapOfstringAndjava.util.ListOfcom.harmonicinc.vos.app.monitor.model.AudioProfileStatus": {
      "type": "object",
      "name": "MapOfstringAndListOfAudioProfileStatus",
      "additionalProperties": {
        "$ref": "#/definitions/List"
      }
    },
    "com.harmonicinc.vos.asset.acquisition.model.CuePointInfo": {
      "properties": {
        "cueIn": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "cueOut": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "cueOutCont": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "name": "CuePointInfo"
    },
    "com.harmonicinc.rumba.core.DeploymentEnvInfo": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of deployment environment"
        },
        "name": {
          "type": "string",
          "description": "Name of deployment environment"
        },
        "version": {
          "type": "string",
          "description": "Version of deployment template"
        }
      },
      "name": "DeploymentEnvInfo"
    },
    "com.harmonicinc.externalassetpotf.model.rest.settings.PotfServerScalingConfig$KedaAutoscalerConfig": {
      "properties": {
        "responseTimeThresholdForFullScaleUp": {
          "type": "number",
          "format": "double"
        },
        "scaleDownPolicy": {
          "$ref": "#/definitions/com.harmonicinc.externalassetpotf.model.rest.settings.PotfServerScalingConfig$KedaScalePolicy"
        },
        "scaleDownStabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "targetCpuPercent": {
          "type": "integer",
          "format": "int32"
        },
        "targetRequestRate": {
          "type": "integer",
          "format": "int32"
        },
        "targetThroughputMbps": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "KedaAutoscalerConfig"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.ContainerResourceConfig": {
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double",
          "description": "Number of CPU cores or units of virtual CPU"
        },
        "cpuLimitRatio": {
          "type": "number",
          "format": "double",
          "description": "Ratio of CPU usage limit to allocated amount"
        },
        "mallocArenaMax": {
          "type": "integer",
          "format": "int32",
          "description": "Number of malloc arena for C/C++ application inside container"
        },
        "memInMB": {
          "type": "number",
          "format": "double",
          "description": "Memory in MiB, this value should include the size of cache if memory-backed cache is enabled"
        }
      },
      "name": "ContainerResourceConfig"
    },
    "com.harmonicinc.vos.app.configure.model.service.LogoAddon$LogoForLogosList": {
      "required": [
        "imageId"
      ],
      "properties": {
        "horizontalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Horizontal offset relative to placement in pixel"
        },
        "imageId": {
          "type": "string",
          "description": "Id of an image in the system"
        },
        "placement": {
          "type": "string",
          "description": "Image placement",
          "enum": [
            "BOTTOM_LEFT",
            "BOTTOM_RIGHT",
            "TOP_LEFT",
            "TOP_RIGHT"
          ]
        },
        "uuid": {
          "type": "string"
        },
        "verticalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Vertical offset relative to placement in pixel"
        }
      },
      "name": "LogoForLogosList"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiOverIpInputParam": {
      "required": [
        "ipAddress",
        "ipPort"
      ],
      "properties": {
        "disableFec": {
          "type": "boolean",
          "description": "Disable input FEC"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive input. IPv4 and IPv6 are supported"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive input"
        },
        "smpte2110TransportProperties": {
          "description": "SMPTE2110 related transport level properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110TransportProperties"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "SdiOverIpInputParam"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.DrmSettings": {
      "properties": {
        "enableDrm": {
          "type": "boolean"
        },
        "perPackageDrmSystemIdList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.PerPackageDrmSystemId"
          }
        },
        "perPackageDrmTrackFilterList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.PerPackageDrmTrackFilter"
          }
        },
        "perPackageResourceIdList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.PerPackageResourceId"
          }
        },
        "resourceId": {
          "type": "string"
        }
      },
      "name": "DrmSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties": {
      "properties": {
        "audioStreamSelections": {
          "type": "array",
          "description": "audioStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties$AudioStreamSelectionItem"
          }
        },
        "videoStreamSelections": {
          "type": "array",
          "description": "videoStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties$VideoStreamSelectionItem"
          }
        }
      },
      "name": "HlsGroupingProfileProperties"
    },
    "com.harmonicinc.vos.app.monitor.liveevent.model.LiveEventResponse": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Live Event end time in UTC"
        },
        "esamPoisOobPosted": {
          "type": "boolean",
          "description": "Live Event esam pois oob message posted status (true/false)"
        },
        "prerollDuration": {
          "type": "integer",
          "format": "int64",
          "description": "Live Event preroll duration in seconds"
        },
        "prerollSlate": {
          "type": "string",
          "description": "Live Event preroll slate image ID"
        },
        "startTime": {
          "type": "string",
          "description": "Live Event start time in UTC"
        }
      },
      "name": "LiveEventResponse"
    },
    "com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$CallbackServer": {
      "properties": {
        "authentication": {
          "description": "The authentication settings of callback server",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$Authentication"
        }
      },
      "name": "CallbackServer"
    },
    "com.harmonicinc.vos.mux.model.programlevel.eas.OutputProgramEasChannel": {
      "required": [
        "cbrBitrate"
      ],
      "properties": {
        "cbrBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Cbr bitrate"
        },
        "inputIdentifier": {
          "description": "Eas input identifier",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.eas.EasChannelInputIdentifier"
        }
      },
      "name": "OutputProgramEasChannel"
    },
    "com.harmonicinc.vos.app.monitor.model.RedundanyGroupRequestConfig": {
      "required": [
        "instanceId",
        "redunState"
      ],
      "properties": {
        "instanceId": {
          "type": "string",
          "description": "Instance ID"
        },
        "redunState": {
          "type": "string",
          "description": "Redundany Group Status",
          "enum": [
            "JOIN",
            "QUIT"
          ]
        }
      },
      "name": "RedundanyGroupRequestConfig"
    },
    "com.harmonicinc.vos.mux.model.tslevel.GlobalSettings": {
      "required": [
        "tsId"
      ],
      "properties": {
        "atscSettings": {
          "description": "ATSC settings",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.AtscSettings"
        },
        "dvbSettings": {
          "description": "DVB Settings",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.DvbSettings"
        },
        "dvbSisDsaSettings": {
          "description": "DVB SIS DSA settings",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.DvbSisDsaSettings"
        },
        "emmStreams": {
          "type": "array",
          "description": "EMM streams",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.EmmStream"
          }
        },
        "externalTableGenerators": {
          "description": "External Table Generators",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.ExternalTableGenerators"
        },
        "timezoneId": {
          "type": "string",
          "example": "US/Pacific",
          "description": "Timezone Id"
        },
        "tsId": {
          "type": "integer",
          "format": "int32",
          "description": "TS ID"
        }
      },
      "name": "GlobalSettings"
    },
    "com.harmonicinc.vos.app.configure.model.service.NielsenWatermarkProperties": {
      "properties": {
        "cbetCheckDigits": {
          "type": "string",
          "description": "CBET CheckDigits"
        },
        "cbetSid": {
          "type": "integer",
          "format": "int32",
          "description": "CBET Sid"
        },
        "checkDigits": {
          "type": "string",
          "description": "Check Digits"
        },
        "sid": {
          "type": "integer",
          "format": "int32",
          "description": "Sid"
        }
      },
      "name": "NielsenWatermarkProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Scheduling": {
      "properties": {
        "blackoutScheduling": {
          "type": "boolean",
          "description": "Enable blackout scheduling"
        }
      },
      "name": "Scheduling"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Audio": {
      "properties": {
        "audioTrackIndex": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio track index used to map the audio track in input audio grooming"
        },
        "bitrate": {
          "type": "string",
          "description": "(Deprecrated) Audio bitrate in bps",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "channels": {
          "type": "string",
          "description": "(Deprecrated) Audio channel setting for converting",
          "enum": [
            "e_PASSTHROUGH",
            "e_STEREO",
            "e_MONO",
            "e_DOLBY_5_1",
            "e_DUAL_MONO",
            "e_5_1_4"
          ]
        },
        "codec": {
          "type": "string",
          "description": "(Deprecrated) Audio codec used for converting",
          "enum": [
            "e_AC_4",
            "e_E_AC_3",
            "e_AC_3",
            "e_HE_AAC_v2",
            "e_HE_AAC_v1",
            "e_AAC_LC",
            "e_MPEG1_L2",
            "e_PCM"
          ]
        },
        "dialnorm": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio dialogue normalization (average loudness) in dB, applied for AC-4, AC-3, E-AC3 codec"
        },
        "gain": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio gain in dB when LevelMagic leveling is disabled, Dialnorm will be set as default value"
        },
        "labels": {
          "type": "array",
          "description": "(Deprecrated) Labels identifier of audio",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "Used for mapping audio source with processing profile"
        },
        "languageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Audio index used to mapping the languages defined in Configure app's setting, support up to 16 audio tracks, range 1~16"
        },
        "leveling": {
          "type": "boolean",
          "description": "(Deprecrated) Enable audio LevelMagic leveling"
        },
        "loudnessTarget": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Loudness setting in LKFS when LevelMagic leveling is enabled, Dialnorm will be overridden"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the audio"
        },
        "processing": {
          "type": "string",
          "description": "(Deprecrated) Convert or pass-through audio",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "profiles": {
          "type": "array",
          "description": "List of audio processing setting.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$AudioProfile"
          }
        },
        "sampleRate": {
          "type": "string",
          "description": "(Deprecrated) Audio sampling rate in Hz",
          "enum": [
            "e_16",
            "e_32",
            "e_44",
            "e_48"
          ]
        },
        "sourceLabel": {
          "type": "string",
          "description": "(Deprecrated) Label of the source stream to be processed"
        }
      },
      "name": "Audio"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkInputStatisticEntry": {
      "required": [
        "inputBitrate",
        "time"
      ],
      "properties": {
        "inputBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The ingest bitrate (bps) of input"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic, e.g. 2015-11-04T09:11:33Z"
        }
      },
      "name": "UplinkInputStatisticEntry"
    },
    "com.harmonicinc.vos.app.configure.model.service.ProcessingParameters$DataProperties": {
      "properties": {
        "cc608To708Translation": {
          "type": "string",
          "description": "e_NEVER : output CEA-708 is the input CEA-708, e_ALWAYS: the input CEA-708 is always ignored and output CEA-708 is generated from input CEA-608, and no input CEA-608 means no output CEA-708 and e_AUTOSENSE :  strategy automatically defined. Default behavior depends on STBmode.",
          "enum": [
            "e_AUTOSENSE",
            "e_ALWAYS",
            "e_NEVER"
          ]
        },
        "generateTimecode": {
          "type": "string",
          "description": "Enable Timecode Generation. When it is enabled, the generated timecode will replace the timecode in the source and override enableVitcOutput to true. The generated timecode does not works with geo-sync because of up to few hundred ms of inaccuracy. Default is 'e_DISABLED'",
          "enum": [
            "e_DISABLED",
            "e_UTC"
          ]
        },
        "teletextOverSdiOutput": {
          "type": "string",
          "description": "The setting for teletext output format. Default is 'e_OP_47'",
          "enum": [
            "e_WST",
            "e_OP_47",
            "e_OP_42",
            "e_SMPTE_2031"
          ]
        }
      },
      "name": "DataProperties"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.UpdateSequenceProperties": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True if the sequence is enabled. A sequence enabled means that it can be inserted in the playlist manually or by a trigger"
        },
        "name": {
          "type": "string",
          "description": "Name of the sequence"
        },
        "primaries": {
          "type": "array",
          "description": "List of sequence primary events",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequencePrimaryElement"
          }
        },
        "startTrigger": {
          "type": "string",
          "description": "Name of the trigger that can be used to insert the sequence into the playlist"
        },
        "stopTrigger": {
          "type": "string",
          "description": "Name of the trigger that can be used to stop a sequence"
        }
      },
      "name": "UpdateSequenceProperties"
    },
    "com.harmonicinc.vos.app.configure.model.destination.PoolBinding": {
      "properties": {
        "complexityIp": {
          "type": "string",
          "description": "IP address for the divitrack complexity message"
        },
        "complexityPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port for the divitrack complexity message"
        },
        "divitrackCircuitId": {
          "type": "integer",
          "format": "int32",
          "description": "Divitrack circuit Id"
        },
        "divitrackMaxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum bitrate for the VBR output in bps"
        },
        "divitrackMinBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum bitrate for the VBR output in bps"
        },
        "divitrackNominalBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Nominal bitrate for the VBR output in bps"
        },
        "divitrackPriority": {
          "type": "string",
          "description": "Divitrack priority",
          "enum": [
            "VERY_HIGH",
            "HIGH",
            "MEDIUM",
            "LOW",
            "VERY_LOW"
          ]
        },
        "divitrackStillImageBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "StillImage bitrate for the VBR output in bps"
        },
        "noDivitrack": {
          "type": "boolean",
          "description": "Flag to indicate it is a special statmux destination type that does not run DiviTrack protocol (e.g. Used by DTA service)"
        },
        "operationMode": {
          "type": "string",
          "description": "Divitrack operation mode",
          "enum": [
            "STATMUX_VBR",
            "STATMUX_CBR"
          ]
        },
        "poolId": {
          "type": "string",
          "description": "Id of the pool associated with this destination"
        },
        "stillImageDetectionMode": {
          "type": "string",
          "description": "Divitrack still image detection mode",
          "enum": [
            "DETECTION_OFF",
            "DETECTION_ON"
          ]
        }
      },
      "name": "PoolBinding"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.WidevineCencHeader": {
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Encryption Algorithm",
          "enum": [
            "UNENCRYPTED",
            "AESCTR"
          ]
        },
        "contentId": {
          "type": "string",
          "description": "A content identifier which is specified by content provider"
        },
        "keyId": {
          "type": "string",
          "description": "Key ID"
        },
        "policy": {
          "type": "string",
          "description": "The name of a registered policy to be used for this asset"
        },
        "provider": {
          "type": "string",
          "description": "Content provider name"
        },
        "trackType": {
          "type": "string",
          "description": "Track type which is used to differentiate content keys used by an asset"
        }
      },
      "name": "WidevineCencHeader"
    },
    "com.harmonicinc.vos.app.configure.model.service.HourlyLogoInsertionEvent": {
      "properties": {
        "endMinute": {
          "type": "integer",
          "format": "int32"
        },
        "endSecond": {
          "type": "integer",
          "format": "int32"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32"
        },
        "startSecond": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "HourlyLogoInsertionEvent"
    },
    "com.harmonicinc.vos.app.configure.model.service.OrchestrationLabel": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "name": "OrchestrationLabel"
    },
    "com.harmonicinc.vos.app.monitor.model.LogoRequestConfig": {
      "properties": {
        "logoGroupStates": {
          "type": "array",
          "description": "List of LogoGroupState for each logo/slate group",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogoGroupState"
          }
        },
        "logoState": {
          "type": "string",
          "description": "Global service logo status, if logoState = OFF, all logos will be disabled, if logoState = ON the logo will be enable according to the logoGroupStates",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "logosListStates": {
          "type": "array",
          "description": "List of LogosListState for each logo",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogosListState"
          }
        }
      },
      "name": "LogoRequestConfig"
    },
    "com.harmonicinc.vos.app.atm.rest.model.VariantChannelsFilterStatus": {
      "properties": {
        "existingFilterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Existing number of variant channels filters in the database."
        },
        "maxFilterCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of variant channels filters allowed in the database."
        }
      },
      "name": "VariantChannelsFilterStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.LogoAddon$LogoForGroupMode": {
      "required": [
        "imageId",
        "logoSlateGroupLabel"
      ],
      "properties": {
        "horizontalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Horizontal offset relative to placement in pixel"
        },
        "imageId": {
          "type": "string",
          "description": "Id of an image in the system"
        },
        "logoSlateGroupLabel": {
          "type": "string",
          "description": "label of the profile group to have logo inserted per profile"
        },
        "placement": {
          "type": "string",
          "description": "Image placement",
          "enum": [
            "BOTTOM_LEFT",
            "BOTTOM_RIGHT",
            "TOP_LEFT",
            "TOP_RIGHT"
          ]
        },
        "verticalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Vertical offset relative to placement in pixel"
        }
      },
      "name": "LogoForGroupMode"
    },
    "com.harmonicinc.vos.app.configure.model.source.PoolInput": {
      "required": [
        "poolId"
      ],
      "properties": {
        "poolId": {
          "type": "string",
          "description": "Pool ID of pool object; one pool per source"
        }
      },
      "name": "PoolInput"
    },
    "com.harmonicinc.vos.asset.acquisition.model.PeriodicalJobStatistics": {
      "properties": {
        "assetIngestStatistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.AssetIngestStatistics"
        },
        "jobsCompleted": {
          "type": "integer",
          "format": "int32"
        },
        "jobsFailed": {
          "type": "integer",
          "format": "int32"
        },
        "outputDurationSec": {
          "type": "integer",
          "format": "int64"
        },
        "readyQueueJobsCount": {
          "type": "integer",
          "format": "int32"
        },
        "readyQueueSourceDurationInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "transcodedSourcesSizeInBytes": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "PeriodicalJobStatistics"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkInputStatus": {
      "required": [
        "id",
        "pidStatisticsList",
        "uplinkEventReportingList",
        "uplinkInputStatistic",
        "uplinkStreamingStatus"
      ],
      "properties": {
        "activeInputIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of active ip input"
        },
        "fecStatistics": {
          "description": "Fec statistic",
          "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.FecStatistic"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a UplinkInput in UUID format"
        },
        "pidStatisticsList": {
          "type": "array",
          "description": "Cloudlink Pid Statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.PidStatistics"
          }
        },
        "rtpStatistics": {
          "description": "Rtp statistic",
          "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.RtpStatistics"
        },
        "uplinkEventReportingList": {
          "type": "array",
          "description": "Event reports of uplink input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkEventReporting"
          }
        },
        "uplinkInputStatistic": {
          "type": "array",
          "description": "The event description of of the input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkInputStatisticEntry"
          }
        },
        "uplinkStreamingStatus": {
          "type": "string",
          "description": "The status of the output of uplink, ERROR means no stream output which is not expected.",
          "enum": [
            "ACTIVE",
            "ERROR"
          ]
        }
      },
      "name": "UplinkInputStatus"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.ConnectionDrainingConfig": {
      "properties": {
        "durationInSeconds": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "ConnectionDrainingConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.audio.AudioBitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "Max bitrate in bps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "Min bitrate in bps"
        }
      },
      "name": "AudioBitrateRange"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalLiveIngestSetting": {
      "properties": {
        "liveIngestStoragePerService": {
          "type": "boolean",
          "description": "Support at K8S env only. Live data output will be stored at per service storage with in sspe pod."
        },
        "minPvcProvisionedIOPS": {
          "type": "integer",
          "format": "int32",
          "description": "Support at K8S env only. Minimum provisioned IOPS for PVC."
        },
        "minPvcProvisionedThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Support at K8S env only. Minimum provisioned throughput in MB/second for PVC."
        },
        "minRequiredMemoryInMB": {
          "type": "integer",
          "format": "int32",
          "description": "Support at K8S env only. The minimum required memory in MB for LIO processes within sspe pod."
        },
        "useDiskAsStorage": {
          "type": "boolean",
          "description": "Support at K8S env only. Live data output will be stored to Azure Disk instead of RAM."
        }
      },
      "name": "GlobalLiveIngestSetting"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.channelmanager.DefaultLiveSourceSettings": {
      "required": [
        "active",
        "primary"
      ],
      "properties": {
        "active": {
          "type": "string",
          "description": "PRIMARY when using the default live source, SECONDARY when using the secondary default live source.",
          "enum": [
            "PRIMARY",
            "SECONDARY"
          ]
        },
        "primary": {
          "type": "string",
          "description": "default live input name defined in playout input of the source of the service."
        },
        "secondary": {
          "type": "string",
          "description": "secondaryDefaultLiveInputName defined in playout input of the source of the service (absent if not defined)."
        }
      },
      "name": "DefaultLiveSourceSettings"
    },
    "com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$TriggerRepublishOnEmptySchedule": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "The boolean to determine if enable trigger republish on empty schedule"
        },
        "intervalInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "The interval in minutes to trigger republish on empty schedule"
        }
      },
      "name": "TriggerRepublishOnEmptySchedule"
    },
    "com.harmonicinc.vos.asset.acquisition.model.AudioChannel": {
      "properties": {
        "audioType": {
          "type": "string",
          "enum": [
            "UNDEFINED",
            "CLEAN_EFFECTS",
            "HEARING_IMPAIRED",
            "VISUAL_IMPAIRED_COMMENTARY"
          ]
        },
        "ignore": {
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string"
        },
        "position": {
          "type": "string",
          "description": "[@Deprecated FRONT_LEFT (Use LEFT_SURROUND instead). @Deprecated FRONT_RIGHT (Use RIGHT_SURROUND instead). @Deprecated BACK_LEFT (Use LEFT_BACK_SURROUND instead). @Deprecated BACK_RIGHT (Use RIGHT_BACK_SURROUND instead).]",
          "enum": [
            "LEFT",
            "RIGHT",
            "CENTER",
            "LFE",
            "LEFT_SURROUND",
            "RIGHT_SURROUND",
            "LEFT_BACK_SURROUND",
            "RIGHT_BACK_SURROUND",
            "FRONT_LEFT",
            "FRONT_RIGHT",
            "BACK_LEFT",
            "BACK_RIGHT"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "AUDIO_1_0",
            "AUDIO_2_0",
            "AUDIO_5_1",
            "AUDIO_7_1"
          ]
        }
      },
      "name": "AudioChannel"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalEsamSetting": {
      "properties": {
        "defaultFallbackTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Default timeout value (seconds) for ESAM source redundancy safety fallback mechanism, a mechanism to fallback to primary source from secondary source if there is no message from POIS, range from 10 to 300, default value is equal to 120"
        },
        "defaultPoisEndpoint": {
          "type": "string",
          "description": "Default POIS endpoint URL. Can be overridden in per-service ESAM configuration."
        },
        "enableOobEsam": {
          "type": "boolean",
          "description": "Enable out-of-band esam server"
        },
        "oobEsamProtocol": {
          "type": "string",
          "description": "(Deprecated) HTTP Protocol of out-of-band esam server",
          "enum": [
            "HTTP",
            "HTTPS"
          ]
        },
        "oobMessagePreroll": {
          "type": "integer",
          "format": "int32",
          "description": "Pre-roll time for OOB ESAM messages in seconds ranges from 4 to 60, defaults to 4, overrides splice repetition to false if larger than 4"
        },
        "scte35PassthruUponEsamUnreachable": {
          "type": "boolean",
          "description": "Global option to allow in-band SCTE-35 to passthrough to output if the ESAM POIS is unreachable"
        }
      },
      "name": "GlobalEsamSetting"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$ResourceValue": {
      "properties": {
        "limit": {
          "type": "number",
          "format": "double"
        },
        "request": {
          "type": "number",
          "format": "double"
        }
      },
      "name": "ResourceValue"
    },
    "java.util.MapOfstringAndstring": {
      "type": "object",
      "name": "MapOfstringAndstring",
      "additionalProperties": {
        "type": "string"
      }
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutAudioTrack": {
      "required": [
        "language",
        "type"
      ],
      "properties": {
        "labels": {
          "type": "array",
          "description": "Labels of playout source",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "3 letter langauge code similar to that of language descriptor"
        },
        "type": {
          "type": "string",
          "description": "Audio codec of playout source",
          "enum": [
            "MPEG",
            "AAC",
            "DOLBY_E",
            "DOLBY_DIGITAL",
            "DOLBY_DIGITAL_PLUS",
            "DOLBY_AC4",
            "AES3",
            "PCM"
          ]
        }
      },
      "name": "PlayoutAudioTrack"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorRfSource": {
      "properties": {
        "adapter": {
          "type": "integer",
          "format": "int32",
          "description": "Adapter, from 0 to 7, corresponds to tuners 1 to 8 (adapter 0 is tuner 1)"
        },
        "frontend": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend : 0 corresponds to the first card"
        }
      },
      "name": "MonitorRfSource"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AttributeCustomizationProperties": {
      "properties": {
        "bandwidthTune": {
          "description": "bandwidthTune",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.BandwidthTune"
        },
        "streamSelectionGroup": {
          "description": "streamSelectionGroup",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.streamFiltering.StreamSelectionGroup"
        }
      },
      "name": "AttributeCustomizationProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestPackageOutput": {
      "properties": {
        "destinationProfileId": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "format": {
          "type": "string",
          "enum": [
            "DASH",
            "HLS",
            "SS",
            "CMAF",
            "RAW_TS",
            "THUMBNAIL",
            "MP4"
          ]
        },
        "url": {
          "type": "string"
        }
      },
      "name": "RestPackageOutput"
    },
    "com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputProgram": {
      "properties": {
        "inputComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.tsinput.MonitorInputComponent"
          }
        },
        "majorChannelNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Applicable only for ATSC"
        },
        "minorChannelNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Applicable only for ATSC"
        },
        "name": {
          "type": "string",
          "description": "Name from the SDT (DVB), or Short Name from the VCT (ATSC)"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "pcrPid": {
          "type": "integer",
          "format": "int32"
        },
        "pmtPid": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "MonitorInputProgram"
    },
    "com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$MasterPlaylistCustomization": {
      "properties": {
        "customExtXStreamInfTagPattern": {
          "type": "string",
          "description": "EXT-X-STREAM-INF tag pattern. Possible values: \r\n %BANDWIDTH\r\n %AVERAGE-BANDWIDTH\r\n %CODECS\r\n %PROGRAM-ID\r\n %RESOLUTION \r\n %FRAME-RATE\r\n %HDCP-LEVEL\r\n %AUDIO\r\n%VIDEO\r\n%SUBTITLES\r\n%CLOSED-CAPTIONS\r\n %SUPPLEMENTAL-CODECS\r\n %URI\r\n %VIDEO-RANGE\r\n Empty by default.\r\n Separator-','"
        },
        "enableExtXIndependentSegmentsTag": {
          "type": "boolean",
          "description": "Insert EXT-X-INDEPENDENT-SEGMENTS tag to the playlist"
        }
      },
      "name": "MasterPlaylistCustomization"
    },
    "com.harmonicinc.vos.app.configure.model.service.Scheduler360Addon": {
      "properties": {
        "channelId": {
          "type": "string",
          "description": "This ID is used connect Scheduler 360"
        }
      },
      "name": "Scheduler360Addon"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputTsStatus": {
      "required": [
        "outputPids"
      ],
      "properties": {
        "outputPids": {
          "type": "array",
          "description": "List of output PIDs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputPid"
          }
        }
      },
      "name": "OutputTsStatus"
    },
    "com.harmonicinc.vos.app.configure.model.source.St2038Track": {
      "properties": {
        "labels": {
          "type": "array",
          "description": "Labels identifier of the data stream",
          "items": {
            "type": "string"
          }
        },
        "lineNumber": {
          "type": "array",
          "description": "Specifies the line(s) where the data is embedded",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "scte104OverrideDidSdid": {
          "type": "string",
          "description": "When STBmode == STBP_MBR_DPI_PROPRIETARY, SCTE-104 will be decoded from VANC packets with DID == 0x45 and SDID 0x01, INSTEAD of the SCTE-104 standard DID == 0x41 and SDID 0x07",
          "enum": [
            "e_41_07",
            "e_45_01"
          ]
        },
        "sourceFormat": {
          "type": "string",
          "description": "Format of the ANC data",
          "enum": [
            "SCTE_104",
            "OP_47",
            "SMPTE_2031",
            "AFD",
            "VITC",
            "CLOSED_CAPTION"
          ]
        },
        "teletextDescriptions": {
          "type": "array",
          "description": "Descriptions of teletext components in source",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TeletextDescription"
          }
        },
        "teletextMode": {
          "type": "string",
          "description": "Specifies which teletext mode is used",
          "enum": [
            "NORMAL",
            "LOW_DELAY"
          ]
        }
      },
      "name": "St2038Track"
    },
    "com.harmonicinc.vos.app.configure.model.destination.SrtOutputSettings": {
      "properties": {
        "bandwidthOverhead": {
          "type": "integer",
          "format": "int32",
          "description": "Srt bandwidth overhead"
        },
        "blockingMode": {
          "type": "boolean",
          "description": "Srt blocking mode"
        },
        "channelId": {
          "type": "string",
          "description": "Srt channel id"
        },
        "channelName": {
          "type": "string",
          "description": "Srt channel name"
        },
        "connectionMode": {
          "type": "string",
          "description": "SRT connetion establishing mode",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "encryptionParam": {
          "description": "Srt encryption params",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtEncryptionParams"
        },
        "endpointSettings": {
          "type": "array",
          "description": "Endpoints used for transmitting SRT stream.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ZixiEndPointSetting"
          }
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Srt latency"
        },
        "streamId": {
          "type": "string"
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Srt timeout"
        }
      },
      "name": "SrtOutputSettings"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.ReindexSetting": {
      "properties": {
        "inputGrooming": {
          "description": "The re-index setting if set before and asset is not yet re-indexed. After re-indexing, this setting becomes null if no new re-index setting is set",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.grooming.InputGrooming"
        }
      },
      "name": "ReindexSetting"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig": {
      "required": [
        "enabled",
        "minNumServers"
      ],
      "properties": {
        "coolDownPeriodSec": {
          "type": "integer",
          "format": "int32",
          "description": "The cool-down period after scale-up / scale-down where no further scaling will take place"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether auto-scaling based on loading is enabled"
        },
        "ignoreNodeCountLimit": {
          "type": "boolean",
          "description": "Whether or not nodes can be scaled beyond the number of available cluster nodes"
        },
        "kedaAutoscaler": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$KedaAutoscalerConfig"
        },
        "maxNumServers": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of total origin nodes to spawn when auto-scaling is enabled"
        },
        "minNumServers": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of origin nodes to maintain, applies regardless of value of enabled field"
        },
        "mode": {
          "type": "string",
          "enum": [
            "LEGACY",
            "KEDA"
          ]
        },
        "scaleDownCondition": {
          "description": "Condition to trigger scale-down",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ScaleDownCondition"
        },
        "scaleDownStepPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of number of existing nodes to remove during scale-down"
        },
        "scaleUpCondition": {
          "description": "Condition to trigger scale-up",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ScaleUpCondition"
        },
        "scaleUpStepPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of number of existing nodes to add during scale-up"
        }
      },
      "name": "AutoScalingConfig"
    },
    "com.harmonicinc.vos.app.configure.model.service.MuxAddon": {
      "properties": {
        "bandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate of output stream in bps"
        }
      },
      "name": "MuxAddon"
    },
    "com.harmonicinc.externalassetpotf.model.rest.settings.PotfServerScalingConfig": {
      "properties": {
        "ignoreNodeCountLimit": {
          "type": "boolean"
        },
        "kedaAutoscaler": {
          "$ref": "#/definitions/com.harmonicinc.externalassetpotf.model.rest.settings.PotfServerScalingConfig$KedaAutoscalerConfig"
        },
        "maxNumServers": {
          "type": "integer",
          "format": "int32"
        },
        "minNumServers": {
          "type": "integer",
          "format": "int32"
        },
        "mode": {
          "type": "string",
          "enum": [
            "MANUAL",
            "KEDA"
          ]
        }
      },
      "name": "PotfServerScalingConfig"
    },
    "com.harmonicinc.vos.app.monitor.liveevent.model.LiveEventData": {
      "properties": {
        "confidenceMonitoring": {
          "type": "boolean",
          "description": "Live Event confidence monitoring status (enable/disable)",
          "readOnly": true
        },
        "endTimeInUtc": {
          "type": "string",
          "description": "Live Event end time in UTC",
          "readOnly": true
        },
        "esamPoisOobPosted": {
          "type": "boolean",
          "description": "Live Event esam pois oob message posted status (true/false)",
          "readOnly": true
        },
        "prerollDuration": {
          "type": "integer",
          "format": "int64",
          "description": "Live Event preroll duration in seconds",
          "readOnly": true
        },
        "prerollSlate": {
          "type": "string",
          "description": "Live Event preroll slate image ID",
          "readOnly": true
        },
        "recording": {
          "type": "boolean",
          "description": "Live Event recording",
          "readOnly": true
        },
        "startTimeInUtc": {
          "type": "string",
          "description": "Live Event start time in UTC",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Live Event state",
          "readOnly": true,
          "enum": [
            "OFFLINE",
            "ALLOCATING",
            "PREPARING",
            "PREVIEW",
            "LIVE_PREROLL",
            "LIVE",
            "STOPPING",
            "FINISHED"
          ]
        }
      },
      "name": "LiveEventData"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ATSDestinationProfileProperties": {
      "required": [
        "audioCarriedMode",
        "dataCarriedMode",
        "encapsulationSettings",
        "rules"
      ],
      "properties": {
        "abWatermarkIncrementValue": {
          "type": "integer",
          "format": "int32",
          "description": "Port offset to apply to B output from A value when Nagra A/B OTT watermark is enabled"
        },
        "audioCarriedMode": {
          "type": "string",
          "description": "Describe the way that the audio will be delivered.",
          "enum": [
            "e_ALL",
            "e_TOP",
            "e_MATCH"
          ]
        },
        "dataCarriedMode": {
          "type": "string",
          "description": "Describe the way that the data will be delivered.",
          "enum": [
            "e_ALL",
            "e_TOP"
          ]
        },
        "ebpAudioFragmentSize": {
          "type": "integer",
          "format": "int32"
        },
        "ebpExplicitAudio": {
          "type": "boolean",
          "description": "EBP Explicit Audio"
        },
        "ebpInterval": {
          "type": "integer",
          "format": "int32",
          "description": "EBP Interval"
        },
        "ebpOffsetInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Offset of EBP timestamp"
        },
        "ebpOnIFrame": {
          "type": "boolean",
          "description": "EBP on I Frame"
        },
        "ebpSegmentSize": {
          "type": "integer",
          "format": "int32",
          "description": "EBP Segment Size"
        },
        "ebpTimelineEnum": {
          "type": "string",
          "description": "EBP Timeline",
          "enum": [
            "e_ETT_LOCAL_TIMELINE",
            "e_ETT_INCOMING_TIMELINE"
          ]
        },
        "encapsulationSettings": {
          "description": "Encapsulation Settings.",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.EncapsulationSettings"
        },
        "excludedDescriptorTags": {
          "type": "array",
          "description": "List of descriptor tags to exclude from the output PMT.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "eyeQEncapsulation": {
          "type": "string",
          "description": "EyeQ encapsulation mode.",
          "enum": [
            "e_TRIM_NULL_PACKET",
            "e_PRESERVE_NULL_PACKET"
          ]
        },
        "muteOutputOnSignalLoss": {
          "type": "boolean",
          "description": "Mute TS output when input signal loss"
        },
        "rtvodFlag": {
          "type": "string",
          "description": "The Nielsen RTVOD flag to be inserted to the audio.",
          "enum": [
            "e_NONE",
            "e_AUTO",
            "e_C3",
            "e_C7"
          ]
        },
        "rules": {
          "type": "array",
          "description": "List of ATS Rules",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ATSRule"
          }
        }
      },
      "name": "ATSDestinationProfileProperties"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.ProxyEndpoint": {
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address of Proxy endpoint"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number of Proxy endpoint"
        }
      },
      "name": "ProxyEndpoint"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ISO639DescriptorData": {
      "required": [
        "iso639AudioType",
        "language"
      ],
      "properties": {
        "iso639AudioType": {
          "type": "string",
          "description": "Audio Type of audio stream",
          "enum": [
            "UNDEFINED",
            "CLEAN_EFFECTS",
            "HEARING_IMPAIRED",
            "VISUAL_IMPAIRED_COMMENTARY",
            "PRIMARY",
            "NATIVE"
          ]
        },
        "language": {
          "type": "string",
          "description": "Language code of stream"
        }
      },
      "name": "ISO639DescriptorData"
    },
    "com.harmonicinc.vos.labwizard.rest.model.SpeechToTextProperties": {
      "properties": {
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Set the subtitle stream to be default subtitle stream in packaging output"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output pid for the text stream"
        },
        "streamName": {
          "type": "string",
          "description": "Stream name for the subtitle stream in packaging output"
        },
        "subtitlePurpose": {
          "type": "integer",
          "format": "int32",
          "description": "Subtitle purpose, default is 0 (same-lang-dialogue)"
        }
      },
      "name": "SpeechToTextProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$ProgramNumberMap": {
      "required": [
        "audioPidOffset",
        "multiplier",
        "otherPidOffset",
        "videoPidOffset"
      ],
      "properties": {
        "audioPidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset value for audio pid remapping, auto increment for multiple audio streams"
        },
        "multiplier": {
          "type": "integer",
          "format": "int32",
          "description": "Value used for multiplying input program number for pid remapping"
        },
        "otherPidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset value for data stream pid remapping, auto increment for multiple data streams"
        },
        "videoPidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset value for video pid remapping"
        }
      },
      "name": "ProgramNumberMap"
    },
    "com.harmonicinc.vos.app.monitor.model.ServiceRole": {
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "None",
            "Master",
            "Slave"
          ]
        }
      },
      "name": "ServiceRole"
    },
    "com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$BitrateRange$StreamBitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int64",
          "description": "Settings of max bitrate in bps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int64",
          "description": "Settings of min bitrate in bps"
        }
      },
      "name": "StreamBitrateRange"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.CallerModeConfig": {
      "properties": {
        "address": {
          "type": "string"
        },
        "crypto": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting"
        },
        "latency": {
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "streamId": {
          "type": "string"
        }
      },
      "name": "CallerModeConfig"
    },
    "com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$Authentication": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "The boolean to determine if enable authentication or not"
        },
        "password": {
          "type": "string",
          "description": "The password of authentication settings"
        },
        "username": {
          "type": "string",
          "description": "The username of authentication settings"
        }
      },
      "name": "Authentication"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$OttEgressProxyConfig": {
      "properties": {
        "cache": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$OttEgressProxyConfig$Cache"
        },
        "developerMode": {
          "type": "boolean"
        },
        "enableEarlyStartOver": {
          "type": "boolean",
          "description": "Control whether to improve timeshift playlist availability (when common segment delivery URL is enabled)"
        },
        "enablePlaylistFiltering": {
          "type": "boolean",
          "description": "Control whether to improve playlist availability by enabling filtering on playlist with start time adjustment for LiveEvent"
        },
        "enablePlaylistMerger": {
          "type": "boolean",
          "description": "Control whether to enable playlist merger to improve start-over playlist latency (when common segment delivery URL is enabled)"
        }
      },
      "name": "OttEgressProxyConfig"
    },
    "com.harmonicinc.vos.app.configure.model.service.ServiceSource": {
      "properties": {
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of source to be used"
        },
        "sourceId": {
          "type": "string",
          "description": "Id of source connected to a service"
        },
        "sourceSwitchBufferSize": {
          "type": "integer",
          "format": "int32",
          "description": "Specify the buffer size (in ms) of source introducing source delay for doing frame synchronized source switch, range from 0 - 20000"
        }
      },
      "name": "ServiceSource"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutSourceStreams": {
      "name": "PlayoutSourceStreams"
    },
    "com.harmonicinc.vos.flex.platform.config.model.RfStatistics": {
      "required": [
        "adapter",
        "status"
      ],
      "properties": {
        "adapter": {
          "type": "integer",
          "format": "int32",
          "description": "Adapter, from 0 to 7 (DVBS2) or 11 (ATSC), corresponds to tuners 1 to 8 (DVBS2) or 12 (ATSC). Adapter 0 is tuner 1."
        },
        "ber": {
          "type": "number",
          "format": "float",
          "description": "DVBS2 bit error rate."
        },
        "c_n": {
          "type": "number",
          "format": "float",
          "description": "DVBS2 C/N carrier-to-noise ratio."
        },
        "eb_n0": {
          "type": "number",
          "format": "float",
          "description": "DVBS2 Eb/N0, measured in dB, energy per bit to noise power spectral density ratio."
        },
        "linkMargin": {
          "type": "number",
          "format": "float",
          "description": "DVBS2 linkMargin, measured in dB, is the difference between the actual power received and the receiver's sensitivity."
        },
        "per": {
          "type": "number",
          "format": "float",
          "description": "DVBS2 packet error rate."
        },
        "power": {
          "type": "number",
          "format": "float",
          "description": "Link power, measured in dBm."
        },
        "snr": {
          "type": "number",
          "format": "float",
          "description": "ATSC signal-to-noise ratio."
        },
        "status": {
          "type": "string",
          "description": "DVBS2 status of the RF tuner (disabled, locked, unlocked)."
        }
      },
      "name": "RfStatistics"
    },
    "com.harmonicinc.vos.mux.model.tslevel.DvbSettings": {
      "properties": {
        "nitParameters": {
          "description": "nit parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.NitParameters"
        },
        "originalNetworkId": {
          "type": "integer",
          "format": "int32",
          "description": "original network ID"
        },
        "tdtParameters": {
          "description": "tdt parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.TdtParameters"
        },
        "totParameters": {
          "description": "tot parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.tslevel.TotParameters"
        }
      },
      "name": "DvbSettings"
    },
    "com.harmonicinc.vos.app.configure.model.service.CaptionsAddon$CaptionsInfo": {
      "required": [
        "captionsProvider",
        "tcpPort"
      ],
      "properties": {
        "captionsProvider": {
          "type": "string",
          "description": "Captions Provider",
          "enum": [
            "e_NCI"
          ]
        },
        "tcpPort": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port for incoming captions. Supported ports: 20600...20663"
        }
      },
      "name": "CaptionsInfo"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$Scte35Source": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the live source that Scte35 message was received from"
        },
        "onAirSource": {
          "type": "boolean",
          "description": "Set true if the source that then Scte35 message was received from is currently on-air"
        }
      },
      "name": "Scte35Source"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$Scheduling": {
      "properties": {
        "blackoutScheduling": {
          "type": "boolean",
          "description": "Enable blackout scheduling"
        }
      },
      "name": "Scheduling"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte20227Ts_Input": {
      "required": [
        "ipAddress",
        "ipPort",
        "pathDifferentialDelayMs"
      ],
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive input. IPv4 and IPv6 are supported"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive input"
        },
        "pathDifferentialDelayMs": {
          "type": "integer",
          "format": "int32",
          "description": "Seamless 2022-7 Path Differential Delay in ms in the range (50ms, 450ms)"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "Smpte20227Ts_Input"
    },
    "com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$CommandScheduler": {
      "properties": {
        "authentication": {
          "description": "The authentication settings of command scheduler",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$Authentication"
        },
        "endpoint": {
          "type": "string",
          "description": "The endpoint of command scheduler"
        },
        "triggerRepublishOnEmptySchedule": {
          "description": "The trigger republish on empty schedule settings of command scheduler",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$TriggerRepublishOnEmptySchedule"
        }
      },
      "name": "CommandScheduler"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutDvbSubtitlingTrackConversionParams": {
      "required": [
        "bkgTransparency",
        "font",
        "fontDensity",
        "frameSize",
        "minBitrate",
        "textColor",
        "textOutlineWidth"
      ],
      "properties": {
        "bkgTransparency": {
          "type": "integer",
          "format": "int32",
          "description": "Background transparency, range: 0-100 (100 means no background)."
        },
        "font": {
          "type": "string",
          "description": "Font file name including dot-extension. Special case 'dejavu': stands for 'DejaVuSans.ttf'."
        },
        "fontDensity": {
          "type": "number",
          "format": "double",
          "description": "Horizontal font density, range: 0.5-2.5. A value of 1.0 equals 1em of the font. 2.0 will map 2em into the one cell.\nFor fixed sized fonts a value of 1 is recommended, but for true type a value of 1.7 looks much better."
        },
        "frameSize": {
          "type": "string",
          "description": "Dvb subtitle frame size.",
          "enum": [
            "e_1920x1080",
            "e_1280x720",
            "e_720x576",
            "e_720x480"
          ]
        },
        "minBitrate": {
          "type": "string",
          "description": "Minimum bitrate in kbps.\nA DVB subtitle keep-alive packet is a minimal PES packet made of 3 bytes:\n   0x20: data_identifier for DVB subtitles\n   0x00: subtitle_stream_id\n   0xFF: end_of_PES_data_field_marker",
          "enum": [
            "e_3_00",
            "e_1_50",
            "e_0_75",
            "e_0_50",
            "e_0_38",
            "e_0_30",
            "e_0_25",
            "e_0_21",
            "e_0_19",
            "e_0_17",
            "e_0_15"
          ]
        },
        "textColor": {
          "type": "string",
          "example": "FFFFFF",
          "description": "Text color in RRGGBB format (hexadecimal)."
        },
        "textOutlineWidth": {
          "type": "number",
          "format": "double",
          "description": "Outline width in pixel, range: 0.0-10.0."
        }
      },
      "name": "PlayoutDvbSubtitlingTrackConversionParams"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitleAsset": {
      "properties": {
        "filePath": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "location": {
          "type": "string",
          "enum": [
            "LOCAL",
            "S3",
            "LLCU",
            "ECU",
            "EXTERNAL",
            "BLOB",
            "GCS",
            "LIVE_EVENT_RECORD",
            "LOOP_RECORD",
            "AKAMAI_S3"
          ]
        },
        "pacParams": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitleAsset$PacParams"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "sourceFileName": {
          "type": "string"
        },
        "subtitleType": {
          "type": "string",
          "enum": [
            "NORMAL",
            "HARD_OF_HEARING",
            "FORCED"
          ]
        }
      },
      "name": "RestSubtitleAsset"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$FrameRateRange": {
      "properties": {
        "maxFrameRate": {
          "type": "integer",
          "format": "int32"
        },
        "minFrameRate": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "FrameRateRange"
    },
    "com.harmonicinc.vos.app.configure.model.source.AudioTrack": {
      "required": [
        "locator"
      ],
      "properties": {
        "audioPreferredProperties": {
          "type": "array",
          "description": "Preferred audio properties of audio track for mapping",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.AudioPreferredProperty"
          }
        },
        "audioStreamType": {
          "type": "string",
          "description": "Input audio stream type",
          "enum": [
            "MPEG",
            "AAC",
            "DOLBY_E",
            "DOLBY_DIGITAL",
            "DOLBY_DIGITAL_PLUS",
            "DOLBY_AC4",
            "AES3",
            "PCM"
          ]
        },
        "audioTrackIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the audio track"
        },
        "audioTrackStreamType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of the audio stream; Stream Type defined at http://en.wikipedia.org/wiki/Program-specific_information#Elementary_stream_types"
        },
        "backUpAudioTrackIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the backup audio track"
        },
        "countryCode": {
          "type": "string",
          "description": "Optional Country Code to append to the Language Code"
        },
        "delayAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the audio delay in millisecond in order to synchronize the video stream, valid range from -500 to 500 ms"
        },
        "dolbyEProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Source DolbyE program number for the audio (range 1 to 8)"
        },
        "forceAtmos": {
          "type": "boolean",
          "description": "Force Dolby Atmos detection for E-AC-3"
        },
        "hasNielsenWatermark": {
          "type": "boolean",
          "description": "Indicate this audio stream has Nielsen watermark"
        },
        "inputLevel": {
          "type": "integer",
          "format": "int32",
          "description": "Audio input level"
        },
        "insertNullPidOnSignalLoss": {
          "type": "boolean",
          "description": "Indicate insertion of nulls when there is audio signal loss"
        },
        "isDefault": {
          "type": "boolean",
          "description": "Indicate this audio is default"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of the audio track",
          "items": {
            "type": "string"
          }
        },
        "locator": {
          "description": "Locator of the audio track",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.AudioTrackLocator"
        },
        "silenceDetectionThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Silence detection threshold (-65dB)"
        },
        "skipProcessing": {
          "type": "boolean",
          "description": "Indicate this audio stream will not be processed and will not be mux."
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name"
        },
        "useDiscovery": {
          "type": "boolean",
          "description": "Indicate the usage of the discovery to know the audio input level"
        }
      },
      "name": "AudioTrack"
    },
    "com.harmonicinc.vos.app.atm.rest.model.VariantChannelSourceIDMapping": {
      "required": [
        "contents",
        "sourceID"
      ],
      "properties": {
        "contents": {
          "type": "object",
          "description": "Contents that map to the ID",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sourceID": {
          "type": "string",
          "description": "The ID that maps to a set of source contents. Must be unique."
        }
      },
      "name": "VariantChannelSourceIDMapping"
    },
    "com.harmonicinc.vos.app.configure.model.service.TimedEventAddon$Authentication": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "The boolean to determine if enable authentication or not"
        },
        "password": {
          "type": "string",
          "description": "The password of authentication settings"
        },
        "username": {
          "type": "string",
          "description": "The username of authentication settings"
        }
      },
      "name": "Authentication"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestExternalAssetStatus": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PROCESSING",
            "DOWNLOADING",
            "READY",
            "FAILED"
          ]
        },
        "url": {
          "$ref": "#/definitions/java.net.URL"
        }
      },
      "name": "RestExternalAssetStatus"
    },
    "com.harmonicinc.vos.app.configure.model.destination.ZixiOutputSettings": {
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Zixi channel id"
        },
        "channelName": {
          "type": "string",
          "description": "Zixi channel name"
        },
        "encryptionParam": {
          "description": "Zixi encryption params",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.ZixiEncryptionParams"
        },
        "fecBlockMs": {
          "type": "integer",
          "format": "int32",
          "description": "Zixi FEC block ms"
        },
        "fecOverhead": {
          "type": "integer",
          "format": "int32",
          "description": "Zixi FEC overhead"
        },
        "latencyMode": {
          "type": "string",
          "description": "Zixi latency mode",
          "enum": [
            "ZIXI_LATENCY_STATIC",
            "ZIXI_LATENCY_INCREASING",
            "ZIXI_LATENCY_DYNAMIC"
          ]
        },
        "maxLatency": {
          "type": "integer",
          "format": "int32",
          "description": "Zixi max latency"
        },
        "password": {
          "type": "string",
          "description": "Zixi password"
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Zixi timeout"
        },
        "user": {
          "type": "string",
          "description": "Zixi user"
        }
      },
      "name": "ZixiOutputSettings"
    },
    "com.harmonicinc.vos.app.configure.model.destination.AsiOutput": {
      "required": [
        "port"
      ],
      "properties": {
        "card": {
          "type": "string",
          "description": "ASI card for the output",
          "enum": [
            "CARD_1",
            "CARD_2",
            "CARD_3"
          ]
        },
        "muteAtStartup": {
          "type": "boolean"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "ASI port for the output"
        }
      },
      "name": "AsiOutput"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.VideoStream": {
      "properties": {
        "avs2Properties": {
          "description": "Properties of AVS2 stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Avs2Properties"
        },
        "avsProperties": {
          "description": "Properties of AVS stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AvsProperties"
        },
        "descriptors": {
          "type": "array",
          "description": "Descriptors of video stream",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Descriptor"
          }
        },
        "frameRate": {
          "description": "FrameRate of video stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.FrameRate"
        },
        "h264Properties": {
          "description": "Properties of H264 stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.H264Properties"
        },
        "h265Properties": {
          "description": "Properties of H265 stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.H265Properties"
        },
        "jpegxsProperties": {
          "description": "Properties of JPEG-XS stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.JpegxsProperties"
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Max Bitrate of video stream"
        },
        "mpeg2VideoProperties": {
          "description": "Properties of MPEG2 Video stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MPEG2VideoProperties"
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of video stream"
        },
        "resolution": {
          "description": "Resolution of video stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Resolution"
        },
        "scrambled": {
          "type": "boolean",
          "description": "Scrambled status of video stream"
        },
        "videoStreamType": {
          "type": "string",
          "description": "Type of video stream",
          "enum": [
            "H264",
            "H265",
            "MPEG2",
            "AVS",
            "AVS2",
            "JPEGXS"
          ]
        }
      },
      "name": "VideoStream"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MmsTranscodeRequirement": {
      "required": [
        "cpuRequirement",
        "gpuRequirement",
        "memoryRequirement",
        "mmsGroup"
      ],
      "properties": {
        "cpuLimit": {
          "type": "number",
          "format": "double",
          "description": "The CPU limit (maximum number of cores) on handle this profile."
        },
        "cpuRequirement": {
          "type": "number",
          "format": "double",
          "description": "The CPU requirement (number of core) on handle this profile."
        },
        "gpuRequirement": {
          "type": "number",
          "format": "double",
          "description": "The GPU requirement (number of core) on handle this profile"
        },
        "memoryRequirement": {
          "type": "number",
          "format": "double",
          "description": "The Memory requirement (in MB) on handle this profile"
        },
        "mmsGroup": {
          "type": "integer",
          "format": "int32",
          "description": "The corresponding MmsGroup ID of this processing requirement setting."
        },
        "readyForProvision": {
          "type": "boolean",
          "description": "Ready for provision"
        }
      },
      "name": "MmsTranscodeRequirement"
    },
    "com.harmonicinc.vos.mux.model.programlevel.eas.OutputProgramEasParameters": {
      "required": [
        "enable"
      ],
      "properties": {
        "easChannel": {
          "description": "Eas channel",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.eas.OutputProgramEasChannel"
        },
        "enable": {
          "type": "boolean",
          "description": "Enable eas"
        },
        "groupId": {
          "type": "integer",
          "format": "int32",
          "description": "Group Id"
        },
        "locations": {
          "type": "array",
          "description": "Eas locations",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.eas.OutputProgramEasLocation"
          }
        }
      },
      "name": "OutputProgramEasParameters"
    },
    "com.harmonicinc.vos.app.configure.model.source.AtscTuner": {
      "required": [
        "channel",
        "standard"
      ],
      "properties": {
        "channel": {
          "type": "integer",
          "format": "int32",
          "description": "Channel. Integer range. Minimum : 2. Maximum : 51. Steps : 1."
        },
        "standard": {
          "type": "string",
          "description": "Standard. Possible values : ATSC_1_0.",
          "enum": [
            "ATSC_1_0"
          ]
        }
      },
      "name": "AtscTuner"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$CbrDuringAdProperties": {
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Bitrate for AD in kbps"
        },
        "extendedCbrTime": {
          "type": "integer",
          "format": "int32",
          "description": "CBR time extension in seconds"
        },
        "maxCbrTime": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum CBR time during AD in seconds"
        }
      },
      "name": "CbrDuringAdProperties"
    },
    "com.harmonicinc.vos.app.configure.model.destination.DrmSettings": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable DRM on the publishing endpoint"
        },
        "requestorId": {
          "type": "string",
          "description": "Requestor ID"
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        },
        "url": {
          "type": "string",
          "description": "The URL to the DRM server"
        }
      },
      "name": "DrmSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.ZixiInput": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "encoderSetting": {
          "description": "(OBSOLETE) Basic setting of encoder with Zixi. Used in Zixi Input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ZixiEncoderSetting"
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "harmonicUplinkSetting": {
          "description": "Basic setting of harmonic uplink. Used in Harmonic Uplink Input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HarmonicUplinkSetting"
        },
        "harmonicUplinkSettingList": {
          "type": "array",
          "description": "Basic list of harmonic uplink settings. Used in Harmonic Uplink Input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.HarmonicUplinkSetting"
          }
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "zixiBroadcasterSetting": {
          "description": "Zixi broadcaster setting. It is used in Zixi pull mode",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ZixiBroadcasterSetting"
        },
        "zixiInputType": {
          "type": "string",
          "description": "Zixi input type",
          "enum": [
            "HARMONIC_UPLINK",
            "ENCODER",
            "BROADCASTER"
          ]
        }
      },
      "name": "ZixiInput"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$HttpConfig": {
      "required": [
        "dropCacheControlHeaderForLiveContent"
      ],
      "properties": {
        "dropCacheControlHeaderForLiveContent": {
          "type": "boolean",
          "description": "When responding to live service requests, remove any \"Cache-control\" HTTP header passed from upstream, so that downstream will only use the \"Expires\" header for cache control"
        },
        "enableHttp2": {
          "type": "boolean",
          "description": "The setting controls whether HTTP 2 is enabled. Default is disabled."
        },
        "enableSmoothStreaming412ErrorCode": {
          "type": "boolean",
          "description": "The setting controls whether 412 response code should be returned for error cases encountered in live Smooth Streaming egress. Default is disabled."
        },
        "enableWeakCiphers": {
          "type": "boolean",
          "description": "The setting controls whether to enable weak ciphers. Default is enabled."
        },
        "missingSegmentResponse": {
          "type": "string",
          "description": "HTTP response for from-live missing segment (e.g. cause by source signal loss)",
          "enum": [
            "HTTP_404",
            "HTTP_200_0_BYTE"
          ]
        },
        "urlPrefix": {
          "type": "string",
          "description": "The setting controls whether to add a cluser-id as prefix to the URL of the content. Default is disabled. Valid characters are alphanumeric, hyphen, underscore"
        }
      },
      "name": "HttpConfig"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte2110AudioStreamProperties": {
      "required": [
        "inputAudioChannelNumList",
        "sdiSampleRate",
        "sdiSampleSize",
        "transportId"
      ],
      "properties": {
        "inputAudioChannelNumList": {
          "type": "array",
          "description": "List of audio channel number composing the 2110 audio stream",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "sdiSampleRate": {
          "type": "string",
          "description": "SDI sample rate",
          "enum": [
            "e_44100_HZ",
            "e_48000_HZ",
            "e_96000_HZ"
          ]
        },
        "sdiSampleSize": {
          "type": "string",
          "description": "SDI sample size",
          "enum": [
            "e_16_BIT",
            "e_20_BIT",
            "e_24_BIT"
          ]
        },
        "transportId": {
          "type": "integer",
          "format": "int32",
          "description": "For mapping the 2110 stream to the 2110 transport"
        }
      },
      "name": "Smpte2110AudioStreamProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.TtmlDescriptor": {
      "required": [
        "ttmlExtPayload",
        "ttmlLanguage",
        "ttmlSubtitlePurpose",
        "ttmlTtsSuitability"
      ],
      "properties": {
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the Ttml stream is the stream for default subtitle"
        },
        "ttmlExtPayload": {
          "type": "string",
          "description": "Remaining descriptor payload in hex array format, the minimum extPayload should be '010000' with all required flags set to 0"
        },
        "ttmlLanguage": {
          "type": "string",
          "description": "TTML Language Code (ISO 639-2/B or ISO 639-2/T)"
        },
        "ttmlSubtitlePurpose": {
          "type": "integer",
          "format": "int32",
          "description": "TTML subtitle purpose, range 0-63. 0=same-lang-dialogue, 1=other-lang-dialogue, 2=all-dialogue, 16=hard-of-hearing, 17=other-lang-dialogue-with-hard-of-hearing, 18=all-dialogue-with-hard-of-hearing, 48=audio-description, 49=content-related-commentary"
        },
        "ttmlTtsSuitability": {
          "type": "integer",
          "format": "int32",
          "description": "TTML text-to-speech suitability, range 0..3. 0=unknown suitability, 1=suitable, 2=not suitable"
        }
      },
      "name": "TtmlDescriptor"
    },
    "com.harmonicinc.vos.app.monitor.model.InputStatisticEntry": {
      "required": [
        "inputBitrate",
        "recoveredPacketCount",
        "time",
        "unrecoveredPacketCount",
        "usageCategory"
      ],
      "properties": {
        "ccErrorCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of CC Errors"
        },
        "inputBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The ingest bitrate (bps) of input"
        },
        "pathIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Path index (primary:0, secundary:1), useful in SMPTE 2022-7"
        },
        "receivedPacketCount": {
          "type": "integer",
          "format": "int64",
          "description": "number of UDP/RTP packet received (SMPTE 2022-1 FEC or Seamless SMPTE 2022-7, a packet received on both inputs is counted only once), null if not used"
        },
        "recoveredPacketCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of recovered packets (Zixi, SRT or SMPTE 2022-1 FEC), 0 if not used"
        },
        "rtpInputStatistics": {
          "description": "RTP input statistics - optional (null if not using RTP input)",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.RtpInputStatisticsEntry"
        },
        "smpte2022_1Fec": {
          "description": "SMPTE 2022-1 FEC parameters - optional (null if SMPTE 2022-1 FEC is not enabled)",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.Smpte2022_1FecEntry"
        },
        "smpte2022_7TsInput": {
          "description": "Seamless SMPTE 2022-7: number of lost RTP packets on the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.Smpte2022_7TsEntry"
        },
        "srtInputStatistics": {
          "description": "SRT input statistics - optional (null if not using SRT input)",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SrtInputStatisticsEntry"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic"
        },
        "unrecoveredPacketCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of unrecovered packets (Zixi, SRT, SMPTE 2022-1 FEC or Seamless SMPTE 2022-7), 0 if not used"
        },
        "usageCategory": {
          "type": "string",
          "description": "The usage category",
          "enum": [
            "IP",
            "ZIXI_PULL",
            "ZIXI_PUSH",
            "SRT",
            "ST_2022_7"
          ]
        }
      },
      "name": "InputStatisticEntry"
    },
    "com.harmonicinc.vos.app.monitor.model.CcErrorStatistic": {
      "required": [
        "ccErrorStatisticEntryList",
        "resetInMs",
        "time"
      ],
      "properties": {
        "ccErrorStatisticEntryList": {
          "type": "array",
          "description": "CC Error Statistic List",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.CcErrorStatisticEntry"
          }
        },
        "resetInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Statistic reset time"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Statistic start time"
        }
      },
      "name": "CcErrorStatistic"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties$AudioStreamSelectionItem": {
      "properties": {
        "audioCodecSelection": {
          "type": "string",
          "description": "audioCodecSelection",
          "enum": [
            "AAC_LC",
            "HE_AAC_V1",
            "HE_AAC_V2",
            "AC_3",
            "E_AC_3",
            "MPEGH",
            "ALL"
          ]
        },
        "bitrateRange": {
          "description": "bitrateRange",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem$AudiobitrateRange"
        },
        "groupId": {
          "type": "string",
          "description": "groupId"
        }
      },
      "name": "AudioStreamSelectionItem"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.TtmlDescriptor": {
      "required": [
        "ttmlExtPayload",
        "ttmlLanguage",
        "ttmlSubtitlePurpose",
        "ttmlTtsSuitability"
      ],
      "properties": {
        "ttmlExtPayload": {
          "type": "string",
          "description": "Remaining descriptor payload"
        },
        "ttmlLanguage": {
          "type": "string",
          "description": "TTML Language Code"
        },
        "ttmlSubtitlePurpose": {
          "type": "integer",
          "format": "int32",
          "description": "TTML subtitle_purpose"
        },
        "ttmlTtsSuitability": {
          "type": "integer",
          "format": "int32",
          "description": "TTML TTS Suitability"
        }
      },
      "name": "TtmlDescriptor"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.DownlinkOutputStatus": {
      "required": [
        "downlinkEventReportingList",
        "downlinkOutputStatistic",
        "downlinkStreamingStatus",
        "id",
        "pidStatisticsList"
      ],
      "properties": {
        "activeInputIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Index of active ip input"
        },
        "downlinkEventReportingList": {
          "type": "array",
          "description": "Event reports of uplink output",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkEventReporting"
          }
        },
        "downlinkOutputStatistic": {
          "type": "array",
          "description": "The event description of of the input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.DownlinkOutputStatisticEntry"
          }
        },
        "downlinkStreamingStatus": {
          "type": "string",
          "description": "The status of the output of uplink, ERROR means no stream output which is not expected.",
          "enum": [
            "ACTIVE",
            "ERROR"
          ]
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a DownlinkOutput in UUID format"
        },
        "pidStatisticsList": {
          "type": "array",
          "description": "Cloudlink Pid Statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.PidStatistics"
          }
        }
      },
      "name": "DownlinkOutputStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.TriggerSettings": {
      "properties": {
        "ccErrorsThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "CC error trigger threshold - range 1..10000, default 120 - Switch will occur as soon as we reach this number of CC errors during last CC error window"
        },
        "ccErrorsWindow": {
          "type": "integer",
          "format": "int32",
          "description": "CC error trigger window - range 10..3600 seconds, default 60, step 5 seconds"
        }
      },
      "name": "TriggerSettings"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.TeletextDescriptorData": {
      "required": [
        "language",
        "teletextMagazineNumber",
        "teletextPageNumber",
        "teletextType"
      ],
      "properties": {
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "teletextMagazineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Magazine number of teletext stream"
        },
        "teletextPageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Page number of teletext stream"
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of teletext"
        }
      },
      "name": "TeletextDescriptorData"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsEgressMuteStatesUpdateRequest": {
      "properties": {
        "egressPointId": {
          "type": "string"
        },
        "lrsMuteStates": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates"
        }
      },
      "name": "LrsEgressMuteStatesUpdateRequest"
    },
    "com.harmonicinc.vos.app.monitor.model.ProcessingStatisticEntry": {
      "required": [
        "processingBitrate",
        "time"
      ],
      "properties": {
        "processingBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The processing bitrate (bps) of processing engine"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic"
        }
      },
      "name": "ProcessingStatisticEntry"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.PlayoutService": {
      "properties": {
        "channelId": {
          "type": "string"
        },
        "channelName": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PLAYOUT",
            "BLACKOUT_SCHEDULING",
            "OTT_PLAYOUT"
          ]
        }
      },
      "name": "PlayoutService"
    },
    "com.harmonicinc.vos.mux.model.unreferencedpidlevel.UnreferencedPidInputIdentifier": {
      "required": [
        "inputObjectId",
        "inputPid",
        "inputType"
      ],
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "The serviceId of the service for a transcoded service or sourceId for a passthrough service"
        },
        "inputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Input PID"
        },
        "inputType": {
          "type": "string",
          "description": "Input Type : ENCODING_SERVICE, TS_SOURCE",
          "enum": [
            "ENCODING_SERVICE",
            "TS_SOURCE"
          ]
        }
      },
      "name": "UnreferencedPidInputIdentifier"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestMediaGridServerInstance": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "watchingEnabled": {
          "type": "boolean"
        }
      },
      "name": "RestMediaGridServerInstance"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.Asset": {
      "properties": {
        "altThumbnailPath": {
          "type": "string"
        },
        "creationDate": {
          "type": "string"
        },
        "cuePoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestCuePointsInfo"
          }
        },
        "description": {
          "type": "string"
        },
        "destinationProfileId": {
          "type": "string"
        },
        "drm": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.DrmProperties"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "fileFormat": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "geoBlockingProperties": {
          "description": "Deprecated",
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GeoBlockingProperties"
        },
        "id": {
          "type": "string"
        },
        "inputAssets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestInputAsset"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "enum": [
            "LOCAL",
            "S3",
            "LLCU",
            "ECU",
            "EXTERNAL",
            "BLOB",
            "GCS",
            "LIVE_EVENT_RECORD",
            "LOOP_RECORD",
            "AKAMAI_S3"
          ]
        },
        "logo": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestLogo"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.OutputAsset"
          }
        },
        "refServiceId": {
          "type": "string"
        },
        "resolution": {
          "type": "string"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "subtitleAssets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitleAsset"
          }
        },
        "tcEndTime": {
          "type": "string",
          "example": "YYYY-MM-dd hh:mm:ss,ff"
        },
        "tcStartTime": {
          "type": "string",
          "example": "YYYY-MM-dd hh:mm:ss,ff"
        },
        "thumbnailPath": {
          "type": "string"
        },
        "timeShiftBuffers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "trimSegments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.Segment"
          }
        }
      },
      "name": "Asset"
    },
    "com.harmonicinc.vos.app.configure.model.destination.ManipulationProfile": {
      "required": [
        "profileId"
      ],
      "properties": {
        "mpdFileName": {
          "type": "string",
          "description": "Filtered DASH mpd file name"
        },
        "profileId": {
          "type": "string",
          "description": "Manipulation profile id in UUID format"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Filtered HLS variant playlist file name"
        }
      },
      "name": "ManipulationProfile"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsPipeMuteStatesUpdateRequest": {
      "properties": {
        "lrsMuteStates": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.LrsMuteStates"
        },
        "pipeId": {
          "type": "string"
        }
      },
      "name": "LrsPipeMuteStatesUpdateRequest"
    },
    "com.harmonicinc.vos.app.configure.model.destination.HSP_Output": {
      "required": [
        "hspEndpoint",
        "variantPlaylistFileName"
      ],
      "properties": {
        "hspEndpoint": {
          "type": "string",
          "description": "Internal Live ingest endpoint of the destination"
        },
        "hspEndpointId": {
          "type": "string",
          "description": "Live ingest endpoint Id of the destination"
        },
        "publicHspEndpoint": {
          "type": "string",
          "description": "Public Live ingest endpoint of the destination"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "Playlist File Name of the destination"
        }
      },
      "name": "HSP_Output"
    },
    "com.harmonicinc.vos.app.configure.model.AzureSpeechServiceSetting": {
      "properties": {
        "key": {
          "type": "string",
          "description": "Subscription key of Azure speech service"
        }
      },
      "name": "AzureSpeechServiceSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor": {
      "required": [
        "captionServiceDescriptor",
        "customDescriptor",
        "descriptorType",
        "dvbSubtitlingDescriptor",
        "iso639Descriptor",
        "teletextDescriptor"
      ],
      "properties": {
        "captionServiceDescriptor": {
          "description": "Caption Service Descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.CaptionServiceDescriptor"
        },
        "customDescriptor": {
          "description": "Custom descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.CustomDescriptor"
        },
        "descriptorType": {
          "type": "string",
          "description": "Type of descriptor",
          "enum": [
            "ISO639",
            "DVB_SUBTITLING",
            "CAPTION_SERVICE",
            "TELETEXT",
            "CUSTOM"
          ]
        },
        "dvbSubtitlingDescriptor": {
          "description": "Dvb descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DvbSubtitlingDescriptor"
        },
        "iso639Descriptor": {
          "description": "ISO639 descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ISO639Descriptor"
        },
        "teletextDescriptor": {
          "description": "Teletext descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.TeletextDescriptor"
        }
      },
      "name": "StreamDescriptor"
    },
    "com.harmonicinc.vos.mux.monitor.model.eas.EasSwitchRequestCommand": {
      "properties": {
        "easOutputProgramsState": {
          "type": "array",
          "description": "Send manual Eas switch command to one or several programs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.eas.EasOutputProgramState"
          }
        }
      },
      "name": "EasSwitchRequestCommand"
    },
    "com.harmonicinc.vos.app.monitor.model.SdiStatisticEntry": {
      "required": [
        "phaseOffset"
      ],
      "properties": {
        "phaseOffset": {
          "type": "integer",
          "format": "int64",
          "description": "SDI phase offset in milliseconds, applicable when deterministic latency feature is enabled. Range -17..17. Should be in range -2..2 under normal conditions."
        }
      },
      "name": "SdiStatisticEntry"
    },
    "com.harmonicinc.vos.notification.rest.model.NotificationTypeSeverityUpdateItem": {
      "required": [
        "defaultSeverity",
        "id",
        "severity",
        "title"
      ],
      "properties": {
        "defaultSeverity": {
          "type": "string",
          "description": "The default severity value of notificatons defined by applicatoin",
          "enum": [
            "CRITICAL",
            "WARNING",
            "IMPORTANT",
            "MUTE"
          ]
        },
        "id": {
          "type": "string",
          "description": "ID"
        },
        "severity": {
          "type": "string",
          "description": "The severity value of any new notifications created with this notification type",
          "enum": [
            "CRITICAL",
            "WARNING",
            "IMPORTANT",
            "MUTE"
          ]
        },
        "title": {
          "type": "string",
          "description": "The title of any new notifications created with this notification type"
        }
      },
      "name": "NotificationTypeSeverityUpdateItem"
    },
    "com.harmonicinc.vos.mux.model.common.MuxService": {
      "properties": {
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
          }
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.pool.Pool"
          }
        },
        "service": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
        }
      },
      "name": "MuxService"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.SrtInput": {
      "required": [
        "id"
      ],
      "properties": {
        "descramblingKey": {
          "type": "string",
          "description": "Descrambling key"
        },
        "descramblingRequired": {
          "type": "boolean",
          "description": "Whether input should be descrambled"
        },
        "enableEncryption": {
          "type": "boolean",
          "description": "Whether to enable encryption"
        },
        "id": {
          "type": "string",
          "description": "Id of the uplink input"
        },
        "ipInputs": {
          "type": "array",
          "description": "List of IP inputs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.uplinkchannel.impl.IpInput"
          }
        },
        "outputAddress": {
          "type": "string",
          "description": "Hostname or IPv4 or IPv6 address to send from uplink to destination"
        },
        "outputPort": {
          "type": "integer",
          "format": "int32",
          "description": "Output UDP port to send from uplink to destination"
        },
        "pidList": {
          "type": "array",
          "description": "List of PID numbers for MPTS-to-SPTS filtering",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "programIdList": {
          "type": "array",
          "description": "List of program IDs MPTS-to-SPTS filtering",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "resolution": {
          "type": "string",
          "description": "Video resolution",
          "enum": [
            "SD",
            "HD",
            "UHD",
            "DEFAULT"
          ]
        }
      },
      "name": "SrtInput"
    },
    "com.harmonicinc.vos.labwizard.rest.model.CaptionServiceDescriptorData": {
      "required": [
        "captionServiceNumber",
        "digitalCc",
        "easyReader",
        "language",
        "line21Field",
        "wideAspectRatio"
      ],
      "properties": {
        "captionServiceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Caption service number of caption service in the range [1..63] if digital_cc == 1. It has no meaning if digital_cc == 0"
        },
        "digitalCc": {
          "type": "integer",
          "format": "int32",
          "description": "Digital CC of caption service: 0=\u003E608, 1=\u003E708"
        },
        "easyReader": {
          "type": "integer",
          "format": "int32",
          "description": "Easy reader of caption service. It has no meaning if digital_cc == 0"
        },
        "language": {
          "type": "string",
          "description": "ISO 639.2/B 3 character language code of caption service. It has no meaning if digital_cc == 0"
        },
        "line21Field": {
          "type": "integer",
          "format": "int32",
          "description": "Line21 field if digital_cc == 0. It has no meaning if digital_cc == 1"
        },
        "wideAspectRatio": {
          "type": "integer",
          "format": "int32",
          "description": "Wide aspect ratio of caption service: 0=4/3, 1=16/9. It has no meaning if digital_cc == 0"
        }
      },
      "name": "CaptionServiceDescriptorData"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig$CronTrigger": {
      "properties": {
        "desiredReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of replicas to which the resource has to be scaled between the start and end of the cron schedule."
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether KEDA autoscaling based on Cron Schedule is enabled."
        },
        "end": {
          "type": "string",
          "description": "Cron expression indicating the end of the cron schedule."
        },
        "start": {
          "type": "string",
          "description": "Cron expression indicating the start of the cron schedule."
        },
        "timezone": {
          "type": "string",
          "description": "The acceptable values would be a value from the IANA Time Zone Database."
        }
      },
      "name": "CronTrigger"
    },
    "com.harmonicinc.vos.app.configure.model.source.CaptionServiceDescriptorData": {
      "required": [
        "captionServiceNumber",
        "digitalCc",
        "easyReader",
        "language",
        "line21Field",
        "wideAspectRatio"
      ],
      "properties": {
        "captionServiceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Caption service number of caption service in the range [1..63] if digital_cc == 1. It has no meaning if digital_cc == 0"
        },
        "countryCode": {
          "type": "string",
          "description": "Optional Country Code to append to the Language Code"
        },
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the caption service stream is the stream for default subtitle"
        },
        "digitalCc": {
          "type": "integer",
          "format": "int32",
          "description": "Digital CC of caption service: 0=\u003E608, 1=\u003E708"
        },
        "easyReader": {
          "type": "integer",
          "format": "int32",
          "description": "Easy reader of caption service. It has no meaning if digital_cc == 0"
        },
        "language": {
          "type": "string",
          "description": "ISO 639.2/B 3 character language code of caption service. It has no meaning if digital_cc == 0"
        },
        "line21Field": {
          "type": "integer",
          "format": "int32",
          "description": "Line21 field if digital_cc == 0. It has no meaning if digital_cc == 1"
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name"
        },
        "wideAspectRatio": {
          "type": "integer",
          "format": "int32",
          "description": "Wide aspect ratio of caption service: 0=4/3, 1=16/9. It has no meaning if digital_cc == 0"
        }
      },
      "name": "CaptionServiceDescriptorData"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitleAsset$PacParams": {
      "properties": {
        "codePage": {
          "type": "string",
          "enum": [
            "LATIN",
            "TURKISH",
            "JAPANESE",
            "KOREAN",
            "CHS",
            "CHT",
            "CYRILLIC",
            "THAI",
            "HEBREW",
            "ARABIC",
            "CZECH",
            "GREEK"
          ]
        },
        "offset": {
          "type": "string"
        }
      },
      "name": "PacParams"
    },
    "com.harmonicinc.vos.app.configure.model.service.DescramblingKey": {
      "required": [
        "keyId",
        "programNum"
      ],
      "properties": {
        "keyId": {
          "type": "string",
          "description": "Descrambling key associated to a program"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program Number"
        }
      },
      "name": "DescramblingKey"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalSynamediaWatermarkSetting": {
      "properties": {
        "isEnable": {
          "type": "boolean"
        },
        "oauthClientId": {
          "type": "string",
          "description": "Specify Oauth Client ID."
        },
        "oauthClientSecret": {
          "type": "string",
          "description": "Specify Oauth Client Secret."
        },
        "oauthServerEndpoint": {
          "type": "string",
          "description": "Specify Oauth Server Endpoint. The value should contain https at the beginning"
        },
        "seiUuid": {
          "type": "string",
          "description": "Retrieve SEI UUID."
        },
        "sourceId": {
          "type": "string",
          "description": "Specify Synamedia source ID"
        },
        "watermarkManagerEndpoint": {
          "type": "string",
          "description": "Specify Synamedia Endpoint. The value should contain https at the beginning"
        }
      },
      "name": "GlobalSynamediaWatermarkSetting"
    },
    "com.harmonicinc.vos.app.atm.datatypes.PlaylistSelection": {
      "required": [
        "alternativeUrlPrefix",
        "preferredHost",
        "segmentNumThreshold",
        "staleManifestSegNumThreshold"
      ],
      "properties": {
        "alternativeUrlPrefix": {
          "type": "string",
          "description": "alternative egress url prefix"
        },
        "preferredHost": {
          "type": "string",
          "description": "Preferred host should be provided",
          "enum": [
            "local",
            "alternative"
          ]
        },
        "segmentNumThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Threshold to consider two manifests have different DVR lengths. default/min: 1"
        },
        "staleManifestSegNumThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Threshold to consider the manifest is stale. default: 2, min: 1"
        }
      },
      "name": "PlaylistSelection"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ProcessingRequirementProperties": {
      "required": [
        "cpuRequirement",
        "gpuRequirement",
        "memoryRequirement"
      ],
      "properties": {
        "cpuLimit": {
          "type": "number",
          "format": "double",
          "description": "The CPU limit (maximum number of cores) on handle this profile."
        },
        "cpuRequirement": {
          "type": "number",
          "format": "double",
          "description": "The CPU requirement (number of core) on handle this profile."
        },
        "gpuRequirement": {
          "type": "number",
          "format": "double",
          "description": "The GPU requirement (number of core) on handle this profile"
        },
        "memoryRequirement": {
          "type": "number",
          "format": "double",
          "description": "The Memory requirement (in MB) on handle this profile"
        },
        "readyForProvision": {
          "type": "boolean",
          "description": "Ready for provision"
        }
      },
      "name": "ProcessingRequirementProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiDataTrack$InputLineSetting": {
      "properties": {
        "lineNumber": {
          "type": "array",
          "description": "Specifies the line(s) which the SDI data is embedded",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "sourceFormat": {
          "type": "string",
          "description": "Format of the SDI data",
          "enum": [
            "SCTE_104",
            "OP_42",
            "OP_47",
            "SMPTE_2031",
            "WST",
            "WSS",
            "AFD",
            "AFD_AND_TELETEXT",
            "AFD_BAR_SMPTE_2016",
            "VPS",
            "ARIB_STD37",
            "VITC",
            "GENERIC_DATA",
            "SMPTE_2020"
          ]
        }
      },
      "name": "InputLineSetting"
    },
    "com.harmonicinc.vos.app.configure.model.destination.Destination": {
      "properties": {
        "destinationProfileId": {
          "type": "string",
          "description": "Unique identifier of destination profile associated to this destination. It is required in multiscreen output"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a destination in UUID format"
        },
        "inUse": {
          "type": "boolean",
          "description": "Every destination has a flag inUse when destination is used in service"
        },
        "labels": {
          "type": "array",
          "description": "Labels attached to destination for identification",
          "items": {
            "type": "string"
          }
        },
        "modifiableByAffiliate": {
          "type": "boolean",
          "description": "Flag to indicate whether affiliate can modify this destination. Applicable for XOS IRD"
        },
        "name": {
          "type": "string",
          "description": "Display name of a destination"
        },
        "outputs": {
          "type": "array",
          "description": "An output is a singular network location for the content processed and output by a service",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Output"
          }
        },
        "type": {
          "type": "string",
          "description": "Destination type",
          "enum": [
            "IP",
            "MULTISCREEN_IP",
            "ORIGIN",
            "ATS",
            "SMPTE_2022_6",
            "SMPTE_2110",
            "MPTS",
            "OTT_PLAYOUT",
            "SDI"
          ]
        }
      },
      "name": "Destination"
    },
    "com.harmonicinc.vos.app.monitor.model.CcErrorStatisticEntry": {
      "required": [
        "ccErrCount",
        "hasPCR",
        "packetCount",
        "pid",
        "pidType",
        "time"
      ],
      "properties": {
        "ccErrCount": {
          "type": "integer",
          "format": "int32",
          "description": "The cc error count"
        },
        "hasPCR": {
          "type": "string",
          "description": "The program clock counter"
        },
        "packetCount": {
          "type": "integer",
          "format": "int32",
          "description": "The packet count"
        },
        "pid": {
          "type": "string",
          "description": "The pid"
        },
        "pidType": {
          "type": "string",
          "description": "The Pid type",
          "enum": [
            "VIDEO",
            "AUDIO",
            "SUBTITLE",
            "SCTE35",
            "PSI",
            "PAT",
            "PMT"
          ]
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic"
        }
      },
      "name": "CcErrorStatisticEntry"
    },
    "com.harmonicinc.vos.app.monitor.model.GraphicsState": {
      "properties": {
        "on": {
          "type": "boolean"
        }
      },
      "name": "GraphicsState"
    },
    "com.harmonicinc.vos.app.monitor.model.Smpte2022_1FecEntry": {
      "required": [
        "columnsL",
        "rowsD"
      ],
      "properties": {
        "columnsL": {
          "type": "integer",
          "format": "int32",
          "description": "SMPTE 2022-1 number of RTP/FEC columns = L, 0 if no FEC is detected"
        },
        "rowsD": {
          "type": "integer",
          "format": "int32",
          "description": "SMPTE 2022-1 number of RTP/FEC rows= D, 0 if no FEC is detected"
        }
      },
      "name": "Smpte2022_1FecEntry"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.PackageInfo": {
      "properties": {
        "format": {
          "type": "string",
          "enum": [
            "DASH",
            "HLS",
            "SS",
            "CMAF",
            "RAW_TS",
            "THUMBNAIL",
            "MP4"
          ]
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "urlType": {
          "type": "string",
          "enum": [
            "PLAYBACK",
            "PREVIEW"
          ]
        }
      },
      "name": "PackageInfo"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$AdditionalHeaderConfig": {
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$AdditionalHeaderConfig$AdditionalHeader"
          }
        }
      },
      "name": "AdditionalHeaderConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.SignalingTable": {
      "properties": {
        "buildingMode": {
          "type": "string",
          "description": "Defines where the table is built",
          "enum": [
            "e_NONE",
            "e_LOCAL"
          ]
        },
        "tableName": {
          "type": "string",
          "description": "The configured table",
          "enum": [
            "e_SDT_ACTUAL",
            "e_PAT",
            "e_PMT",
            "e_CAT"
          ]
        }
      },
      "name": "SignalingTable"
    },
    "com.harmonicinc.vos.app.configure.model.service.EsamSourceSwitchSetting": {
      "properties": {
        "fallbackTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "The timeout value (seconds) for ESAM source redundancy safety fallback mechanism, a mechanism to fallback to primary source from secondary source if there is no message from POIS, range from 10 to 300, default value is equal to 120"
        },
        "proprietaryScte104VitcMode": {
          "type": "boolean",
          "description": "Enable using VITC in SCTE-104 for source switching"
        }
      },
      "name": "EsamSourceSwitchSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.SsPackagingProperties": {
      "required": [
        "audioSegmentLength",
        "dvrWindowSize",
        "enableKeyRotation",
        "enablePackageBasedKeyRotation",
        "encryptionMethod",
        "keyChangePeriod",
        "languageCodeLetterCase",
        "segmentRetentionPeriod",
        "subtitleNamePattern",
        "videoSegmentLength"
      ],
      "properties": {
        "audioSegmentLength": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the audio segment files (expressed in seconds)."
        },
        "audioSegmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the audio segment files (expressed in milliseconds)."
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control of the availability of media segment files most recently added to the Media Presentation Description (MPD) file (expressed in seconds)."
        },
        "enableCommonSegmentUrlDelivery": {
          "type": "boolean",
          "description": "Enable common segment URL delivery."
        },
        "enableEAC3": {
          "type": "boolean",
          "description": "Enable support of packaging EAC3 codec. Default value is true."
        },
        "enableHEVCCodec": {
          "type": "boolean",
          "description": "Enable support of packaging HEVC codec. Default value is true."
        },
        "enableKeyRotation": {
          "type": "boolean",
          "description": "Enable key rotation."
        },
        "enablePackageBasedKeyRotation": {
          "type": "boolean",
          "description": "Override the DRM global setting and enable customized per Package output key rotation setting"
        },
        "encryptionMethod": {
          "type": "string",
          "description": "Specify which encryption method should be used when integrate with DRM.",
          "enum": [
            "e_PLAYREADY",
            "e_CLEAR"
          ]
        },
        "epoch": {
          "type": "string",
          "description": "Enum to control whether to use default epoch (1-Mar-2011) or unix epoch.",
          "enum": [
            "e_UNIX",
            "e_VOS"
          ]
        },
        "keyChangePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The key change period for key rotation (expressed in seconds)."
        },
        "languageCodeLetterCase": {
          "type": "string",
          "description": "The letter case of subtitle language.\nOptions:e_ALL_CAPITALS,e_ALL_SMALL\nDefault is ALL_CAPITALS",
          "enum": [
            "e_ALL_CAPITALS",
            "e_ALL_SMALL"
          ]
        },
        "qpcTrackSubtype": {
          "type": "string",
          "description": "The QPC Track Subtype.\nOptions:CAPT,DATA\nDefault is CAPT",
          "enum": [
            "CAPT",
            "DATA"
          ]
        },
        "scte35Signaling": {
          "type": "string",
          "description": "The way of handling SCTE35 messages. 'NONE' means ignoring the messages; 'AZURE' means writing SCTE35 data to sparse text track according to Azure ingest format specification, 'USP' means writing SCTE35 data to sparse track according to Unified Streaming ingest format specification. Default is 'NONE'",
          "enum": [
            "e_NONE",
            "e_AZURE",
            "e_USP"
          ]
        },
        "segmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the media segment files actually retain in the publishing server (expressed in minutes)."
        },
        "showReadySegmentsOnly": {
          "type": "boolean",
          "description": "Wait for all bitrates to be ready and skip to add chunk into manifest for those not ready segments. Default is true."
        },
        "subtitleFourCC": {
          "type": "string",
          "description": "Define FourCC for subtitle. This field should be s string containing 4 characters."
        },
        "subtitleNamePattern": {
          "type": "string",
          "description": "The subtitle name pattern.\r\n\r\nSupported escape pattern:\r\n%lang Subtitle language code in lowercase\r\n%index Subtitle track index\r\n\r\nSample configuration: sub_%lang or sub_%index or sub_%lang_%index (for language: ita)\r\nResultant subtitle name: sub_ita or sub_1 or sub_ita_1"
        },
        "ttmlTemplate": {
          "type": "string",
          "description": "The TTML template. String in XML that allows to control how output TTML looks like."
        },
        "useRepeatAttribute": {
          "type": "boolean",
          "description": "A boolean option of using repeat attribute in manifest generation to represent segment entries with same duration in continuous series. Default is true."
        },
        "videoSegmentLength": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the video segment files (expressed in seconds)."
        },
        "videoSegmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the video segment files (expressed in milliseconds)."
        }
      },
      "name": "SsPackagingProperties"
    },
    "com.harmonicinc.vos.app.monitor.model.OriginStatus": {
      "required": [
        "originStatistic"
      ],
      "properties": {
        "originStatistic": {
          "type": "array",
          "description": "The origin statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OriginStatistic"
          }
        }
      },
      "name": "OriginStatus"
    },
    "com.harmonicinc.vos.mux.model.common.TableGenerator": {
      "properties": {
        "connectionType": {
          "type": "string",
          "description": "Type of connection to ATSC PMCP table provider. FTP mode accepts only FTP connection and FTPS_EXPLICIT mode accepts only FTPS connection in explicit mode. (default value is FTP)",
          "enum": [
            "FTP",
            "FTPS_EXPLICIT"
          ]
        },
        "ftpUrl": {
          "type": "string",
          "description": "Url of ATSC PMCP table provider"
        },
        "id": {
          "type": "string",
          "example": "c01c34fa-e3a7-4439-9df8-ad80b094a505",
          "description": "Unique identifier of a table generator in UUID format"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address of table generator"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network address"
        },
        "login": {
          "type": "string",
          "description": "Login to ATSC PMCP table provider"
        },
        "name": {
          "type": "string",
          "example": "GuideBuilder-1",
          "description": "Display name of a table generator"
        },
        "password": {
          "type": "string",
          "description": "Password to ATSC PMCP table provider"
        },
        "type": {
          "type": "string",
          "description": "Table generator type (PSIP_GENRATOR or ATSC_PMCP)",
          "enum": [
            "PSIP_GENERATOR",
            "ATSC_PMCP"
          ]
        }
      },
      "name": "TableGenerator"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetStatus": {
          "type": "string",
          "description": "Indicates that the asset or live source is ready to play, or if there is a problem",
          "enum": [
            "UNKNOWN",
            "AVAILABLE",
            "MISSING",
            "MISSINGGROOMINGPROFILE",
            "NOTVALID",
            "NOTCOMPATIBLE",
            "RECORDSTARTTIMEERROR"
          ]
        },
        "assetStatusReason": {
          "type": "string",
          "description": "Description of why the asset is not valid or not compatible"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "durationError": {
          "type": "boolean",
          "description": "True if the play offset (when relative or absolute SOM is used) + duration is greater than the asset duration, not included if false"
        },
        "endMode": {
          "type": "string",
          "description": "Specifies how the event will end (Duration or Manual)",
          "enum": [
            "DURATION",
            "MANUAL"
          ]
        },
        "errorDuration": {
          "type": "string",
          "description": "Indicates the duration of the gap or overlap error (hh:mm:ss.sss). Only present if an overlap or gap error is detected"
        },
        "eventTooShort": {
          "type": "boolean",
          "description": "True if the event duration is less than the minimum allowed (1 sec)"
        },
        "eventType": {
          "type": "string",
          "description": "Event type, File (including recorded file) or Live",
          "enum": [
            "FILE",
            "LIVE",
            "COMMENT"
          ]
        },
        "firstTimecodeInAsset": {
          "type": "string",
          "description": "First timecode value for the asset, if available (hh:mm:ss[:;]ff). Only present when using absolute (timecode) SOM and somError = true"
        },
        "formatDescription": {
          "type": "string",
          "description": "Describes the framerate and resolution of the live source used in the event, only present when invalidFormat = true"
        },
        "gapError": {
          "type": "boolean",
          "description": "True if there is a time gap between this event and the preceding event"
        },
        "groupId": {
          "type": "string",
          "description": "Group id (UUID), identifies the group of events that make up a looping schedule. All events of the looping schedule have the same group id"
        },
        "id": {
          "type": "string",
          "description": "Event id (UUID)"
        },
        "invalidFormat": {
          "type": "boolean",
          "description": "True if the framerate or resolution of the live source referenced by the event isn't compatible with the channel's framerate or resolution"
        },
        "lastTimecodeInAsset": {
          "type": "string",
          "description": "Last timecode value for the asset + 1 (hh:mm:ss[:;]ff). Only present when using absolute (timecode) SOM, if the first timecode is available and somError = true"
        },
        "loopNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Loop number, starting at 1, if the event belongs to a looping schedule"
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "missingAssetDuration": {
          "type": "string",
          "description": "Indicates missing duration for the asset to fit the configured SOM and duration (hh:mm:ss.sss). Only present if a duration error is detected"
        },
        "origin": {
          "type": "string",
          "description": "Origin (creator) of the event. Events can be created by the operator or traffic/scheduling system",
          "enum": [
            "UNKNOWN",
            "TRAFFIC",
            "OPERATOR"
          ]
        },
        "overlapError": {
          "type": "boolean",
          "description": "True if start time of this event is before the end time of the preceding event"
        },
        "scte35WindowEnd": {
          "type": "string",
          "description": "End time of the SCTE-35 validity window (YYYY-MM-DDThh:mm:ss.sssZ), in UTC. This event and following events in the same ad pod (material type is COMMERCIAL or AVAIL, and start mode is FOLLOW) are skipped if we don't receive SCTE-35 trigger with splice-time before this time, or if we don't receive SCTE-35 trigger x seconds before this time (x is 2 seconds if the event after the ad-pod is a prepared live source, otherwise it can be up to 32 seconds). Used only when the startMode is EXTERNAL"
        },
        "scte35WindowStart": {
          "type": "string",
          "description": "Start time of the SCTE-35 validity window (YYYY-MM-DDThh:mm:ss.sssZ), in UTC. Any SCTE-35 trigger with a splice-time before this time is ignored. Used only when the startMode is EXTERNAL"
        },
        "sequenceId": {
          "type": "string",
          "description": "Sequence id (UUID)"
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somError": {
          "type": "boolean",
          "description": "True to indicate the event's SOM Type (ABSOLUTE or RELATIVE) and SOM value specify a starting position that is past the end of the asset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startMode": {
          "type": "string",
          "description": "Specifies how the event will start (Fixed Time, Follow, Manual Take, or External SCTE-35 trigger)",
          "enum": [
            "FIXED",
            "FOLLOW",
            "MANUAL",
            "EXTERNAL"
          ]
        },
        "startTime": {
          "type": "string",
          "description": "Event start date/time in UTC (YYYY-MM-DDThh:mm:ss.sssZ). The start time will be automatically calculated for all events except those with Fixed start mode"
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "state": {
          "type": "string",
          "description": "Event execution state. IDLE for future events, ONAIR, or DONE for past events",
          "enum": [
            "UNKNOWN",
            "IDLE",
            "ONAIR",
            "DONE"
          ]
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcErrorDuration": {
          "type": "string",
          "description": "Equivalent to errorDuration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcScte35WindowEnd": {
          "type": "string",
          "description": "Equivalent to scte35WindowEnd, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcScte35WindowStart": {
          "type": "string",
          "description": "Equivalent to scte35WindowStart, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcStartTime": {
          "type": "string",
          "description": "Equivalent to startTime, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        },
        "waitingForPlayEvent": {
          "type": "boolean",
          "description": "True if the event requires a Play Next command (MANUAL start mode) or SCTE-35 trigger (EXTERNAL start mode) to start"
        }
      },
      "name": "PrimaryProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$PidBaseMap": {
      "required": [
        "audioPidOffset",
        "basePid",
        "otherPidOffset",
        "videoPidOffset"
      ],
      "properties": {
        "audioPidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset value for audio pid remapping, auto increment for multiple audio streams"
        },
        "basePid": {
          "type": "integer",
          "format": "int32",
          "description": "Base value for pid remapping, outputPid will be basePid plus offset"
        },
        "otherPidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset value for data stream pid remapping, auto increment for multiple data streams"
        },
        "videoPidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset value for video pid remapping"
        }
      },
      "name": "PidBaseMap"
    },
    "com.harmonicinc.vos.app.configure.model.destination.IP_Output": {
      "properties": {
        "cloudOutputSettings": {
          "description": "Cloud output settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.CloudOutputSettings"
        },
        "cloudSourceOutputSettings": {
          "description": "Cloud Source output settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.CloudSourceOutputSettings"
        },
        "cloudlinkGroupId": {
          "type": "string",
          "description": "Cloudlink Group Id"
        },
        "cloudlinkId": {
          "type": "string",
          "description": "Cloudlink Id"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address to send the output"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP port to send the output"
        },
        "labels": {
          "type": "array",
          "description": "Labels attached to IP output for identification",
          "items": {
            "type": "string"
          }
        },
        "muteAtStartup": {
          "type": "boolean",
          "description": "Disable the output (dedicated to the IP output of a mux)"
        },
        "poolBinding": {
          "description": "Associated divitrack pool",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.PoolBinding"
        },
        "srtOutputSettings": {
          "description": "Srt output settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.SrtOutputSettings"
        },
        "zixiOutputSettings": {
          "description": "Zixi output settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.ZixiOutputSettings"
        }
      },
      "name": "IP_Output"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AACProfileProperties": {
      "properties": {
        "aacCenterMixLevel": {
          "type": "string",
          "description": "Center Mix Level (DownMix metadata)",
          "enum": [
            "e_0Db",
            "e_Minus_1dot5Db",
            "e_Minus_3Db",
            "e_Minus_4dot5Db",
            "e_Minus_6Db",
            "e_Minus_7dot5Db",
            "e_Minus_9Db",
            "e_MinusInfinityDb"
          ]
        },
        "aacComprTargetRefLevel": {
          "type": "integer",
          "format": "int32",
          "description": "[-31 to -1] Compr Target Reference Level (ETSI metadata)"
        },
        "aacDownmixMethod": {
          "type": "string",
          "description": "Downmix Method (DownMix metadata)",
          "enum": [
            "e_Both",
            "e_MatrixMixDown",
            "e_AncillaryData"
          ]
        },
        "aacDrcProfile": {
          "type": "string",
          "description": "DRC profile (MPEG metadata)",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "aacDrcTargetRefLevel": {
          "type": "integer",
          "format": "int32",
          "description": "[-31 to -1] DRC Target Reference Level (MPEG metadata)"
        },
        "aacHeader": {
          "type": "string",
          "description": "AAC Header",
          "enum": [
            "e_ADTS",
            "e_LATM"
          ]
        },
        "aacHeavyCompressionProfile": {
          "type": "string",
          "description": "Heavy Compression Profile (ETSI metadata)",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "aacMetadataEnable": {
          "type": "boolean",
          "description": " AAC meta data enable/disable "
        },
        "aacMpegVersion": {
          "type": "string",
          "description": "AAC standard (Mpeg Version)",
          "enum": [
            "e_MPEG2",
            "e_MPEG4"
          ]
        },
        "aacProgramReferenceLevel": {
          "type": "integer",
          "format": "int32",
          "description": "[-31 to -1] program reference level (MPEG metadata)"
        },
        "aacSurroundMixLevel": {
          "type": "string",
          "description": "Surround Mix Level (DownMix metadata)",
          "enum": [
            "e_0Db",
            "e_Minus_1dot5Db",
            "e_Minus_3Db",
            "e_Minus_4dot5Db",
            "e_Minus_6Db",
            "e_Minus_7dot5Db",
            "e_Minus_9Db",
            "e_MinusInfinityDb"
          ]
        },
        "fallbackAacCenterMixLevel": {
          "type": "string",
          "description": "Fallback Center Mix Level (DownMix metadata)",
          "enum": [
            "e_0Db",
            "e_Minus_1dot5Db",
            "e_Minus_3Db",
            "e_Minus_4dot5Db",
            "e_Minus_6Db",
            "e_Minus_7dot5Db",
            "e_Minus_9Db",
            "e_MinusInfinityDb"
          ]
        },
        "fallbackAacComprTargetRefLevel": {
          "type": "integer",
          "format": "int32",
          "description": "[-31 to -1] Fallback Compr Target Reference Level (ETSI metadata)"
        },
        "fallbackAacDrcProfile": {
          "type": "string",
          "description": "Fallback DRC profile (MPEG metadata)",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "fallbackAacDrcTargetRefLevel": {
          "type": "integer",
          "format": "int32",
          "description": "[-31 to -1] Fallback DRC Target Reference Level (MPEG metadata)"
        },
        "fallbackAacHeavyCompressionProfile": {
          "type": "string",
          "description": "Fallback Heavy Compression Profile (ETSI metadata)",
          "enum": [
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "fallbackAacProgramReferenceLevel": {
          "type": "integer",
          "format": "int32",
          "description": "[-31 to -1] Fallback program reference level (MPEG metadata)"
        },
        "fallbackAacSurroundMixLevel": {
          "type": "string",
          "description": "Fallback Surround Mix Level (DownMix metadata)",
          "enum": [
            "e_0Db",
            "e_Minus_1dot5Db",
            "e_Minus_3Db",
            "e_Minus_4dot5Db",
            "e_Minus_6Db",
            "e_Minus_7dot5Db",
            "e_Minus_9Db",
            "e_MinusInfinityDb"
          ]
        }
      },
      "name": "AACProfileProperties"
    },
    "com.harmonicinc.vos.app.configure.model.service.deployment.DeploymentInformation": {
      "properties": {
        "accountPrefix": {
          "type": "string",
          "description": "Account prefix"
        },
        "deploymentId": {
          "type": "string",
          "description": "Instance deployment id"
        },
        "deploymentType": {
          "type": "string",
          "description": "Instance deployment type"
        },
        "deviceName": {
          "type": "string",
          "description": "Device name"
        },
        "platformRegionZone": {
          "type": "string",
          "description": "Instance platform region zone"
        }
      },
      "name": "DeploymentInformation"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.H264Properties": {
      "required": [
        "h264Level",
        "h264Profile"
      ],
      "properties": {
        "h264Level": {
          "type": "string",
          "description": "Level of H264 stream",
          "enum": [
            "LEVEL_1_0",
            "LEVEL_1_1",
            "LEVEL_1_2",
            "LEVEL_1_3",
            "LEVEL_2_0",
            "LEVEL_2_1",
            "LEVEL_2_2",
            "LEVEL_3_0",
            "LEVEL_3_1",
            "LEVEL_3_2",
            "LEVEL_4_0",
            "LEVEL_4_1",
            "LEVEL_4_2",
            "LEVEL_5_0",
            "LEVEL_5_1",
            "LEVEL_5_2"
          ]
        },
        "h264Profile": {
          "type": "string",
          "description": "Profile of H264 stream",
          "enum": [
            "BASELINE",
            "MAIN",
            "EXTENDED",
            "HIGH",
            "HIGH_10",
            "HIGH_422",
            "HIGH_444"
          ]
        }
      },
      "name": "H264Properties"
    },
    "com.harmonicinc.vos.app.configure.model.ServiceLimit": {
      "properties": {
        "onlineServiceLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum limit of total online service"
        },
        "totalServiceLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum limit of total service"
        }
      },
      "name": "ServiceLimit"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DvbSubtitleToDvbSubtitleConversionProperties": {
      "properties": {
        "verticalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Vertical offset (in pixels) applied to the DVB-Subtitles position, to the top of the screen. default: 0. range 0-1080. 0 means the DVB-Subtitles position is not modified. If the offset is too high, the DVB-Subtitles are displayed at the top of the screen."
        }
      },
      "name": "DvbSubtitleToDvbSubtitleConversionProperties"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.FecStatistic": {
      "properties": {
        "dropped": {
          "type": "integer",
          "format": "int32"
        },
        "recovered": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "FecStatistic"
    },
    "com.harmonicinc.vos.asset.acquisition.model.GroomingSubtitleTrack": {
      "properties": {
        "language": {
          "type": "string"
        },
        "line": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "streamName": {
          "type": "string"
        },
        "trackId": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "CLOSED_CAPTION",
            "TELETEXT",
            "DVB"
          ]
        }
      },
      "name": "GroomingSubtitleTrack"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IrdetoWatermarkProperties": {
      "properties": {
        "banner": {
          "type": "string",
          "description": "Irdeto watermark banner",
          "enum": [
            "e_OFF",
            "e_ON",
            "e_QR"
          ]
        },
        "customParameters": {
          "type": "string",
          "description": "Irdeto watermark custom parameters"
        },
        "nbIdrPerSequence": {
          "type": "integer",
          "format": "int32",
          "description": "Irdeto watermark number of IDR frames per sequence"
        },
        "profile": {
          "type": "string",
          "description": "Irdeto watermark profile",
          "enum": [
            "e_DEFAULT",
            "e_CUSTOM",
            "e_CUSTOMVMASK"
          ]
        },
        "psnr": {
          "type": "number",
          "format": "double",
          "description": "Irdeto watermark PSNR"
        },
        "scdfactor": {
          "type": "number",
          "format": "double",
          "description": "Irdeto watermark factor parameter for the scene-cut detection"
        }
      },
      "name": "IrdetoWatermarkProperties"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsIngress": {
      "properties": {
        "cryptoSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting"
        },
        "customUrl": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "privateUrl": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "streamCount": {
          "type": "integer",
          "format": "int32"
        },
        "url": {
          "type": "string"
        }
      },
      "name": "LrsIngress"
    },
    "com.harmonicinc.vos.app.configure.model.service.GraphicsAddon": {
      "properties": {
        "graphicsTemplateId": {
          "type": "string",
          "description": "Id of a graphic template in the system"
        },
        "rssUrl": {
          "type": "string",
          "description": "Template Parameter used in a graphics template"
        }
      },
      "name": "GraphicsAddon"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestGcsServerInstance": {
      "properties": {
        "bucketName": {
          "type": "string"
        },
        "bucketPrefix": {
          "type": "string"
        },
        "clientEmail": {
          "type": "string"
        },
        "hmacAccessKey": {
          "type": "string"
        },
        "hmacSecretKey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "privateKey": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "RestGcsServerInstance"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AudioLevelAdjustmentProperties": {
      "properties": {
        "audioLevelAlgorithm": {
          "type": "string",
          "description": "audio level algorithm",
          "enum": [
            "e_None",
            "e_StaticGain",
            "e_HALC"
          ]
        },
        "targetLevel": {
          "type": "string",
          "description": "static gain target level",
          "enum": [
            "e_None",
            "e_m15",
            "e_m16",
            "e_m17",
            "e_m18",
            "e_m19",
            "e_m20",
            "e_m21",
            "e_m22",
            "e_m23",
            "e_m24",
            "e_m25",
            "e_m26",
            "e_m27",
            "e_m28",
            "e_m29",
            "e_m30",
            "e_m31"
          ]
        }
      },
      "name": "AudioLevelAdjustmentProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.PidScheme": {
      "required": [
        "audioPid",
        "dataPid",
        "keepInputPids",
        "pmtPid",
        "scte35Pid",
        "videoPid"
      ],
      "properties": {
        "audioPid": {
          "description": "audio pids scheme",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.VideoBasedScheme"
        },
        "dataPid": {
          "description": "other pids scheme",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.VideoBasedScheme"
        },
        "keepInputPids": {
          "type": "boolean",
          "description": "keep input PID numbers"
        },
        "pmtPid": {
          "description": "PMT pid scheme",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PnBasedScheme"
        },
        "scte35Pid": {
          "description": "DPI pids scheme",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.VideoBasedScheme"
        },
        "videoPid": {
          "description": "video pid scheme",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PnBasedScheme"
        }
      },
      "name": "PidScheme"
    },
    "com.harmonicinc.vos.app.configure.model.source.ZixiEncoderSetting": {
      "properties": {
        "decryptionKey": {
          "type": "string",
          "description": "Zixi decryption key"
        },
        "decryptionType": {
          "type": "string",
          "description": "Zixi decryption type",
          "enum": [
            "NONE",
            "ZIXI_AES_128",
            "ZIXI_AES_192",
            "ZIXI_AES_256"
          ]
        },
        "zixiEndPointSetting": {
          "description": "Zixi endpoint setting.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ZixiEndPointSetting"
        }
      },
      "name": "ZixiEncoderSetting"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequenceSecondaryElement": {
      "properties": {
        "secondaryData": {
          "description": "secondary event properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertSecondaryProperties"
        }
      },
      "name": "InsertSequenceSecondaryElement"
    },
    "com.harmonicinc.vos.app.configure.model.destination.CloudPublishSettings": {
      "required": [
        "s3PublishSettings"
      ],
      "properties": {
        "s3PublishSettings": {
          "description": "Amazon S3 publishing settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.S3PublishSettings"
        }
      },
      "name": "CloudPublishSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$VerticalResolutionRange": {
      "properties": {
        "maxVerticalResolution": {
          "type": "integer",
          "format": "int32"
        },
        "minVerticalResolution": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "VerticalResolutionRange"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$LcevcParam": {
      "properties": {
        "lcevcEnabled": {
          "type": "boolean",
          "description": "Enable LCEVC"
        },
        "lcevcScalingMode": {
          "type": "string",
          "description": "Specifies the scaling mode for the base encoder picture in the LCEVC hierarchy",
          "enum": [
            "e_AUTO",
            "e_0D",
            "e_1D",
            "e_2D"
          ]
        },
        "lcevcTune": {
          "type": "string",
          "description": "Specifies the targeted quality metric for the LCEVC layer",
          "enum": [
            "e_VQ",
            "e_PSNR",
            "e_SSIM",
            "e_VMAF",
            "e_VMAF_NEG",
            "e_ANIMATION"
          ]
        }
      },
      "name": "LcevcParam"
    },
    "com.harmonicinc.vos.app.configure.model.source.Resolution": {
      "required": [
        "height",
        "width"
      ],
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of resolution"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of resolution"
        }
      },
      "name": "Resolution"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.PerPackageResourceId": {
      "properties": {
        "publishName": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "name": "PerPackageResourceId"
    },
    "com.harmonicinc.vos.app.monitor.model.MuteOperationData": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "is mute operation enabled",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "Mute operation end time in UTC",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "description": "Mute operation start time in UTC",
          "readOnly": true
        }
      },
      "name": "MuteOperationData"
    },
    "com.harmonicinc.vos.app.configure.model.service.NielsenWatermarkConfig": {
      "properties": {
        "languageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Audio index used to mapping the languages defined in Configure app's setting, support up to 16 audio tracks, range 1~16"
        },
        "nielsenWatermarkProperties": {
          "description": "Nielsen Watermark Properties used to override the deprecated values found in the profile",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.NielsenWatermarkProperties"
        },
        "sourceLabel": {
          "type": "string",
          "description": "Label of the source stream to be processed"
        }
      },
      "name": "NielsenWatermarkConfig"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.ISO639Descriptor": {
      "required": [
        "iso639DescriptorData"
      ],
      "properties": {
        "iso639DescriptorData": {
          "type": "array",
          "description": "Data of ISO639 Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.ISO639DescriptorData"
          }
        }
      },
      "name": "ISO639Descriptor"
    },
    "com.harmonicinc.vos.mux.model.programlevel.OutputProgramParameters": {
      "properties": {
        "addedPmtDescriptors": {
          "type": "array",
          "description": "added PMT Descriptors",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Descriptor"
          }
        },
        "addedSdtDescriptors": {
          "type": "array",
          "description": "added SDT Descriptors",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Descriptor"
          }
        },
        "atscSourceId": {
          "type": "integer",
          "format": "int32",
          "description": "atsc source id"
        },
        "atscType": {
          "type": "string",
          "description": "atsc type",
          "enum": [
            "DIGITAL_TELEVISION",
            "AUDIO",
            "DATA_ONLY"
          ]
        },
        "dvbType": {
          "type": "integer",
          "format": "int32",
          "description": "SDT service type, range 0..255. When null, deprecated parameter 'type' is used.\nWhen both parameters are null, the service type from input SDT is used (pass-through mode).\nIf not defined in input stream, value 0 is used"
        },
        "easParameters": {
          "description": "eas parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.eas.OutputProgramEasParameters"
        },
        "eitettRemultiplexing": {
          "description": "EIT/ETT remultiplexing (ATSC)",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.OutputProgramEitEttRemultiplexing"
        },
        "excludePidList": {
          "type": "array",
          "description": "List of PIDs to be excluded (UUID).",
          "items": {
            "type": "string"
          }
        },
        "filteredPmtDescriptors": {
          "type": "array",
          "description": "When a descriptor tag (in hexa) is present in this list, there will be no PMT descriptor with this tag in the output, unless added using addedPmtDescriptors.",
          "items": {
            "type": "string"
          }
        },
        "isDynamic": {
          "type": "boolean",
          "description": "dynamic program"
        },
        "majorChannelNumber": {
          "type": "integer",
          "format": "int32",
          "description": "atsc major channel number"
        },
        "minorChannelNumber": {
          "type": "integer",
          "format": "int32",
          "description": "atsc minor channel number"
        },
        "name": {
          "type": "string",
          "description": "program name"
        },
        "nameCodingTable": {
          "type": "string",
          "example": "10000A",
          "description": "The parameter is applicable when SDT is generated, and the parameter name is set in mux configuration. default is \"00\" (Latin)"
        },
        "number": {
          "type": "integer",
          "format": "int32",
          "description": "program number"
        },
        "pmtParameters": {
          "description": "pmt parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.PmtParameters"
        },
        "pmtPid": {
          "type": "integer",
          "format": "int32",
          "description": "pmt pid"
        },
        "provider": {
          "type": "string",
          "description": "provider name"
        },
        "providerCodingTable": {
          "type": "string",
          "example": "10000A",
          "description": "The parameter is applicable when SDT is generated, and the parameter provider is set in mux configuration. default is \"00\" (Latin)"
        },
        "scramblingParameters": {
          "description": "scrambling parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.OutputProgramScramblingParameters"
        },
        "separatePcrPid": {
          "type": "integer",
          "format": "int32",
          "description": "pcr not on elementary stream pid"
        },
        "type": {
          "type": "string",
          "description": "Deprecated. Use dvbType instead",
          "enum": [
            "DIGITAL_TELEVISION",
            "DIGITAL_RADIO_SOUND",
            "TELETEXT",
            "MOSAIC"
          ]
        }
      },
      "name": "OutputProgramParameters"
    },
    "com.harmonicinc.vos.mux.model.tslevel.AtscSettings": {
      "required": [
        "vctType"
      ],
      "properties": {
        "eit1RepetitionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "repetition period of EIT-1. Range : [1000ms,3000ms], Default : 3000ms"
        },
        "eit2RepetitionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "repetition period of EIT-2. Range : [2000ms,60000ms], Default : 60000ms"
        },
        "eit3RepetitionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "repetition period of EIT-3. Range : [3000ms,60000ms], Default : 60000ms"
        },
        "eitDepth": {
          "type": "integer",
          "format": "int32",
          "description": "Number of 3-hours segment of EIT. Range 4..16, default is 4 (12 hours)"
        },
        "eitFirstPid": {
          "type": "integer",
          "format": "int32",
          "description": "first EIT PID, this pid and the followings ones (defined by eitDepth) will be used for the EIT"
        },
        "ett0RepetitionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "repetition period of ETT-0. Range : [1000ms,60000ms], Default : 60000ms"
        },
        "ettDepth": {
          "type": "integer",
          "format": "int32",
          "description": "Number of 3-hours segment of ETT. Range 0..16, default is 4 (12 hours). It cannot exceed EIT depth"
        },
        "ettFirstPid": {
          "type": "integer",
          "format": "int32",
          "description": "first ETT PID, this pid and the followings ones (defined by ettDepth) will be used for the ETT"
        },
        "vctType": {
          "type": "string",
          "description": "type of Virtual Channel Table",
          "enum": [
            "TVCT",
            "CVCT"
          ]
        }
      },
      "name": "AtscSettings"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.LiveSourceMonitoringStatus": {
      "properties": {
        "automationStatus": {
          "type": "string",
          "description": "ONAIR when the player is on-air, LOCKED when the player will be on-air within Live Source Lockout Time, DEFINED when the player will be on-air later, otherwise UNDEFINED. When ONAIR or LOCKED, the user cannot assign another source to this player.",
          "enum": [
            "UNDEFINED",
            "ONAIR",
            "LOCKED",
            "DEFINED"
          ]
        },
        "defaultLiveSource": {
          "type": "string",
          "description": "PRIMARY if it is the default live source, SECONDARY if it is the secondary default live source (absent if it is none of the default live sources).",
          "enum": [
            "PRIMARY",
            "SECONDARY"
          ]
        },
        "id": {
          "type": "string",
          "description": "Source id associated to the player"
        },
        "name": {
          "type": "string",
          "description": "Source name associated to the player"
        },
        "player": {
          "type": "integer",
          "format": "int32",
          "description": "Player number, values: 1 or 2."
        },
        "serviceStatus": {
          "type": "array",
          "description": "List all service status associated to this channel",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.ServiceStatus"
          }
        },
        "userStatus": {
          "type": "string",
          "description": "DEFINED when the operator has assigned this source to this player. Note: the player may be preempted by the automation if another source will be on-air within Live Source Lockout Time.",
          "enum": [
            "UNDEFINED",
            "DEFINED"
          ]
        },
        "webrtcid": {
          "type": "string",
          "description": "id to use in webrtc calls"
        }
      },
      "name": "LiveSourceMonitoringStatus"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestLogo": {
      "properties": {
        "graphicId": {
          "type": "string"
        },
        "horizontalOffset": {
          "type": "integer",
          "format": "int32"
        },
        "opacity": {
          "type": "integer",
          "format": "int32"
        },
        "placement": {
          "type": "string",
          "enum": [
            "TOP_LEFT",
            "TOP_RIGHT",
            "BOTTOM_LEFT",
            "BOTTOM_RIGHT"
          ]
        },
        "verticalOffset": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "RestLogo"
    },
    "com.harmonicinc.vos.app.configure.model.service.SlateWatermarkAddon": {
      "properties": {
        "image_a_Id": {
          "type": "string",
          "description": "Id of an image for generating output with watermark A"
        },
        "image_b_Id": {
          "type": "string",
          "description": "Id of an image for generating output with watermark B"
        },
        "slateWatermarkType": {
          "type": "string",
          "description": "Type of Slate Watermark",
          "enum": [
            "e_SLATE_IMAGE",
            "e_VIACCESS_ORCA"
          ]
        }
      },
      "name": "SlateWatermarkAddon"
    },
    "com.harmonicinc.vos.app.configure.model.source.ZixiEndPointSetting": {
      "required": [
        "zixiEndpointId"
      ],
      "properties": {
        "zixiEndpointId": {
          "type": "string",
          "description": "Unique identifier of the zixi endpoint"
        }
      },
      "name": "ZixiEndPointSetting"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.AssetDestinationProfileDetails": {
      "properties": {
        "destinationProfileId": {
          "type": "string"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.OutputDestinationProfileDetails"
          }
        }
      },
      "name": "AssetDestinationProfileDetails"
    },
    "com.harmonicinc.vos.asset.acquisition.model.validation.ExternalValidation": {
      "properties": {
        "category": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "severity": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "ERROR"
          ]
        },
        "testName": {
          "type": "string"
        }
      },
      "name": "ExternalValidation"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.SrtEncryptionParams": {
      "properties": {
        "encryptionKey": {
          "type": "string",
          "description": "Srt encryption key"
        },
        "encryptionType": {
          "type": "string",
          "description": "Srt encryption type",
          "enum": [
            "AES_128",
            "AES_192",
            "AES_256",
            "NO_ENCRYPTION"
          ]
        }
      },
      "name": "SrtEncryptionParams"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.SourceAsset": {
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "durationMs": {
          "type": "integer",
          "format": "int64"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "format": {
          "type": "string"
        },
        "frameRate": {
          "type": "number",
          "format": "double"
        },
        "scanType": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "videoResolution": {
          "type": "string"
        }
      },
      "name": "SourceAsset"
    },
    "com.harmonicinc.vos.labwizard.rest.model.LoopRecordProfileProperties": {
      "properties": {
        "proxyChannelEnabled": {
          "type": "boolean",
          "description": "Proxy channel enabled"
        }
      },
      "name": "LoopRecordProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestInputAsset": {
      "properties": {
        "cuePointInfo": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.CuePointInfo"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "durationMs": {
          "type": "integer",
          "format": "int64"
        },
        "externalAssetUrl": {
          "type": "string"
        },
        "fileFormat": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileServerId": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "groomingProfileId": {
          "type": "string"
        },
        "invalid": {
          "type": "boolean"
        },
        "invalidityReason": {
          "type": "string"
        },
        "localCopyStatus": {
          "type": "string",
          "enum": [
            "MISSING",
            "SUBMITTED",
            "LOADING",
            "FAILED",
            "READY"
          ]
        },
        "location": {
          "type": "string",
          "enum": [
            "LOCAL",
            "S3",
            "LLCU",
            "ECU",
            "EXTERNAL",
            "BLOB",
            "GCS",
            "LIVE_EVENT_RECORD",
            "LOOP_RECORD",
            "AKAMAI_S3"
          ]
        },
        "resolution": {
          "type": "string"
        },
        "s3Url": {
          "type": "string"
        },
        "sourceLocalCopyFilePath": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "name": "RestInputAsset"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.billing.LrsRegion": {
      "properties": {
        "region": {
          "type": "string",
          "description": "Region API name"
        }
      },
      "name": "LrsRegion"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RecordCreationRequest": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "refServiceId": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "tcEndTime": {
          "type": "string",
          "example": "YYYY-MM-dd hh:mm:ss,ff"
        },
        "tcStartTime": {
          "type": "string",
          "example": "YYYY-MM-dd hh:mm:ss,ff"
        },
        "title": {
          "type": "string"
        }
      },
      "name": "RecordCreationRequest"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.FrameRate": {
      "required": [
        "denominator",
        "numerator"
      ],
      "properties": {
        "denominator": {
          "type": "integer",
          "format": "int32",
          "description": "Denominator of framerate"
        },
        "numerator": {
          "type": "integer",
          "format": "int32",
          "description": "Numerator of framerate"
        }
      },
      "name": "FrameRate"
    },
    "com.harmonicinc.vos.backuprestore.DeleteStatus": {
      "properties": {
        "message": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "COMPLETED",
            "FAILED"
          ]
        }
      },
      "name": "DeleteStatus"
    },
    "com.harmonicinc.vos.app.atm.datatypes.MatchSignal": {
      "required": [
        "asserts",
        "matchType"
      ],
      "properties": {
        "asserts": {
          "type": "array",
          "description": "List of XPATH 2.0 Expression",
          "items": {
            "type": "string"
          }
        },
        "matchType": {
          "type": "string",
          "description": "Match Type. One of the following values: ALL, ANY or NONE",
          "enum": [
            "ANY",
            "ALL",
            "NONE"
          ]
        }
      },
      "name": "MatchSignal"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.TeletextDescriptor": {
      "required": [
        "teletextDescriptorData"
      ],
      "properties": {
        "teletextDescriptorData": {
          "type": "array",
          "description": "Data of Teletext Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.TeletextDescriptorData"
          }
        }
      },
      "name": "TeletextDescriptor"
    },
    "com.harmonicinc.vos.mux.model.unreferencedpidlevel.OutputUnreferencedPidParameters": {
      "properties": {
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "output PID"
        }
      },
      "name": "OutputUnreferencedPidParameters"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.Uplink": {
      "required": [
        "id",
        "ipAddress",
        "name",
        "publicIpAddress"
      ],
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "currentVersion": {
          "type": "string",
          "description": "Current version of cloudlink."
        },
        "id": {
          "type": "string",
          "description": "Id of the uplink"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address of the uplink"
        },
        "isInitialized": {
          "type": "boolean",
          "description": "[Obsoleted]whether the uplink is ready to be used by properly assigned the rank and name."
        },
        "name": {
          "type": "string",
          "description": "Display name of a uplink"
        },
        "needToBeUpgraded": {
          "type": "boolean",
          "description": "If the uplink is needed to be upgraded."
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the uplink"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Priority of Uplink. Auto assigned when uplink is created. It can be updated afterwards."
        },
        "version": {
          "type": "string",
          "description": "Version which need to be upgraded to."
        }
      },
      "name": "Uplink"
    },
    "com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$FrameRateRange": {
      "properties": {
        "maxFrameRate": {
          "type": "number",
          "format": "float",
          "description": "Settings of max frame rate"
        },
        "minFrameRate": {
          "type": "number",
          "format": "float",
          "description": "Settings of min frame rate"
        }
      },
      "name": "FrameRateRange"
    },
    "com.harmonicinc.vos.app.configure.model.destination.BackupSettings": {
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable backup publishing endpoint"
        },
        "hostname": {
          "type": "string",
          "description": "IP address or hostname of backup origin server"
        },
        "networkIpAddress": {
          "type": "string",
          "description": "Network Ip Address"
        },
        "password": {
          "type": "string",
          "description": "Password of backup origin server"
        },
        "path": {
          "type": "string",
          "description": "Path on the backup origin server to store the output files"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port of backup origin server to connect to"
        },
        "username": {
          "type": "string",
          "description": "Username of backup origin server"
        }
      },
      "name": "BackupSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSegmentTitled": {
      "properties": {
        "markIn": {
          "type": "integer",
          "format": "int64"
        },
        "markOut": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        }
      },
      "name": "RestSegmentTitled"
    },
    "com.harmonicinc.vos.app.configure.model.Image": {
      "required": [
        "url"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of an image file"
        },
        "labels": {
          "type": "array",
          "description": "Labels are used to specify identifying metadata",
          "items": {
            "type": "string"
          }
        },
        "lastModified": {
          "type": "integer",
          "format": "int64",
          "description": "Date of image last modification on remote server"
        },
        "password": {
          "type": "string",
          "description": "Password to use with the file server"
        },
        "url": {
          "type": "string",
          "description": "URL to download the image"
        },
        "username": {
          "type": "string",
          "description": "Username to use with the file server"
        }
      },
      "name": "Image"
    },
    "com.harmonicinc.vos.app.configure.model.service.PlayoutSettingsAddon": {
      "properties": {
        "cleanLayers": {
          "type": "array",
          "description": "List of clean layers (layers without graphic overlays)",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.PlayoutLayer"
          }
        }
      },
      "name": "PlayoutSettingsAddon"
    },
    "com.harmonicinc.vos.app.monitor.model.RemoveRetainedProgramChapterStartState": {
      "required": [
        "timeToProcessChangeInUtc"
      ],
      "properties": {
        "timeToProcessChangeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Time (in UTC) to remove retained program/chapter start, represented in format of yyyy-MM-ddThh:mm:ssZ (e.g. 2021-03-04T12:34:56z)"
        }
      },
      "name": "RemoveRetainedProgramChapterStartState"
    },
    "com.harmonicinc.vos.app.configure.model.service.ProcessingParameters$VideoProperties": {
      "properties": {
        "aspectRatio": {
          "type": "string",
          "description": "Applicable only for SD resolutions: 576i and 480i. By default the aspectRatio of the profile is used.",
          "enum": [
            "e_16_9",
            "e_4_3",
            "e_PASSTHROUGH"
          ]
        },
        "goplenM": {
          "type": "string",
          "description": "Mini GOP Length M. By default the goplenM of the profile is used.",
          "enum": [
            "e_AUTO",
            "e_IP",
            "e_IBP",
            "e_IBBP",
            "e_IBBBP",
            "e_IBBBBBBBP"
          ]
        },
        "goplenN": {
          "type": "integer",
          "format": "int32",
          "description": "GOP Length. Range 1..96 inclusive. By default the goplenN of the profile is used."
        },
        "gopoption": {
          "type": "string",
          "description": "By default the gopoption of the profile is used.",
          "enum": [
            "e_OPEN_FIXED",
            "e_OPEN_VARIABLE",
            "e_OPEN_CAPPED",
            "e_CLOSED_FIXED",
            "e_CLOSED_VARIABLE",
            "e_OPEN_FIXED_M",
            "e_CLOSED_FIXED_M"
          ]
        },
        "irisVQBoost": {
          "type": "string",
          "description": "Improves VQ by adjusting the setting of each video filter based on input frames. By default the irisVQBoost of the profile is used.",
          "enum": [
            "e_DISABLED",
            "e_ENABLED"
          ]
        },
        "latencyOption": {
          "type": "string",
          "description": "Valid values are e_LOW, e_REDUCED, e_DEFAULT. By default the latencyOption of the profile is used.",
          "enum": [
            "e_2_5",
            "e_3_5",
            "e_5_5",
            "e_LOW",
            "e_REDUCED",
            "e_DEFAULT"
          ]
        },
        "resolutionHV": {
          "type": "string",
          "description": "Defines the horizontal resolution of video. It shall be consistent with the 'resolution' property of the profile. By default, the 'resolutionHV' of the profile is used.",
          "enum": [
            "e_352x480I",
            "e_480x480I",
            "e_528x480I",
            "e_544x480I",
            "e_640x480I",
            "e_704x480I",
            "e_720x480I",
            "e_352x576I",
            "e_480x576I",
            "e_528x576I",
            "e_544x576I",
            "e_640x576I",
            "e_704x576I",
            "e_720x576I",
            "e_640x720P",
            "e_960x720P",
            "e_1280x720P",
            "e_960x1080I",
            "e_1280x1080I",
            "e_1440x1080I",
            "e_1920x1080I",
            "e_960x1080P",
            "e_1280x1080P",
            "e_1440x1080P",
            "e_1920x1080P",
            "e_2560x1440P",
            "e_3200x1800P",
            "e_3840x2160P",
            "e_960x540P",
            "e_FOLLOW_INPUT"
          ]
        },
        "stressBias": {
          "type": "string",
          "description": "Controls the stress on the encoded content at various bitrates. By default the stressBias of the profile is used.",
          "enum": [
            "e_CLEAN",
            "e_BALANCED",
            "e_SHARP"
          ]
        }
      },
      "name": "VideoProperties"
    },
    "com.harmonicinc.vos.app.configure.model.service.OperatorActionAddon": {
      "properties": {
        "muteOperation": {
          "type": "boolean",
          "description": "Enabled mute/unmute service output ability"
        }
      },
      "name": "OperatorActionAddon"
    },
    "com.harmonicinc.vos.app.liveingestorigin.settings.LiveIngestOriginSetting": {
      "properties": {
        "enableDeprecatedTlsProtocols": {
          "type": "boolean",
          "description": "Enable deprecated TLS protocol(s) for backward compatibility"
        },
        "fileServerConfig": {
          "type": "string",
          "description": "Nginx server or golang server",
          "enum": [
            "NGINX",
            "GOLANG"
          ]
        },
        "ingestLogRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days of ingest logs to keep"
        },
        "ingestLogSizeInMB": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum size of ingest logs to keep"
        },
        "internetProtocol": {
          "type": "string",
          "description": "Internet Protocol for ingest",
          "enum": [
            "HTTP",
            "HTTPS"
          ]
        },
        "lioGoChunkEncoding": {
          "type": "boolean",
          "description": "LIO-go chunk encoding"
        },
        "lioGoDebugPort": {
          "type": "string",
          "description": "LIO-go debug port , -1 means disabling debug port"
        },
        "lioGoDisplayHlsPlaylistIfSegmentNotFound": {
          "type": "boolean",
          "description": "LIO-go will display HLS playlist if segment not found if this flag is true"
        },
        "lioGoEnableDash412ErrorCode": {
          "type": "boolean",
          "description": "LIO-go return 412 when requesting segments which segment availability start time after current time"
        },
        "lioGoForceNonChunkedMss": {
          "type": "boolean",
          "description": "LIO-go will disable chunked transfer for MSS files even if lioGoChunkEncoding is true"
        },
        "lowLatencyMediaPlaylistMaxAgeInSec": {
          "type": "integer",
          "format": "int32",
          "description": "The max-age value for media playlist in second, when low-latency is enabled"
        },
        "maxIngestPointsPerOrigin": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of ingest points that each origin server can serve"
        },
        "maxIngestThroughputPerNodeInMbps": {
          "type": "number",
          "format": "double",
          "description": "The ingest throughput in megabit-per-second"
        },
        "mediaExpireTimeRelativeToLastModifiedTime": {
          "type": "boolean",
          "description": "Calculates max-age of media files based on the time elapsed since last-modified time"
        },
        "mediaPlaylistMaxAgeInSec": {
          "type": "integer",
          "format": "int32",
          "description": "The max-age value for media playlist in second"
        },
        "mediaSegmentMaxAgeInSec": {
          "type": "integer",
          "format": "int32",
          "description": "The max-age value for media segment in second"
        },
        "memReqInMB": {
          "type": "integer",
          "format": "int32",
          "description": "The requirement memory in MB"
        },
        "minOriginTasks": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of origin tasks (or groups of redundant LIO tasks) to keep even when there is no ingest point registration"
        },
        "nodeRoleConstraint": {
          "type": "string",
          "description": "Limit ingest origin tasks to launch on nodes that has one of the specified roles (comma-seperated-list or * for any role)"
        },
        "numCpuCore": {
          "type": "number",
          "format": "float",
          "description": "The required number of CPU core"
        },
        "numEndpointsPerIngestPoint": {
          "type": "integer",
          "format": "int32",
          "description": "The number of redundant URL endpoints for an ingest point"
        },
        "partSegmentMaxAgeInSec": {
          "type": "integer",
          "format": "int32",
          "description": "The max-age value for media part segment in second for low-latency feature"
        }
      },
      "name": "LiveIngestOriginSetting"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.MdsProxySettings": {
      "properties": {
        "mode": {
          "type": "string",
          "description": "The preferred mode to serve timeshift content",
          "enum": [
            "BlueGreen",
            "ActiveActive"
          ]
        }
      },
      "name": "MdsProxySettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.CloudInputSettings": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "backupPipeId": {
          "type": "string",
          "description": "Identifier backup pipe the source originates from"
        },
        "cloudInputType": {
          "type": "string",
          "description": "Cloud input type",
          "enum": [
            "CLOUD_SOURCE",
            "CLOUD_EDGE"
          ]
        },
        "cloudResourceMode": {
          "type": "string",
          "description": "Cloud resource mode, determines whether a single stream or multiple different streams are used ",
          "enum": [
            "SHARED",
            "DEDICATED"
          ]
        },
        "egressPointId": {
          "type": "string",
          "description": "Identifier egressPoint the source originates from"
        },
        "egressPointObjectId": {
          "type": "string",
          "description": "Identifier egressPoint object the source originates from"
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "name": {
          "type": "string",
          "description": "CloudSource name the source originates from"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "pipeId": {
          "type": "string",
          "description": "Identifier pipe the source originates from"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "protocol": {
          "type": "string",
          "description": "SRT protocol"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "regionDisplayName": {
          "type": "string",
          "description": "Region display name"
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "srtCloudInputSettings": {
          "description": "Cloud srt input settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtCloudInputSettings"
        },
        "userStreamId": {
          "type": "string",
          "description": "Stream ID for cloud resource"
        }
      },
      "name": "CloudInputSettings"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DolbyDigitalAudioProperties": {
      "required": [
        "dolbyBsid",
        "dolbyDigitalAudioChannelMode",
        "lfeChannelEnabled",
        "sampleRate"
      ],
      "properties": {
        "dolbyBsid": {
          "type": "integer",
          "format": "int32",
          "description": "Bitstream Identification of Dolby Digital audio stream"
        },
        "dolbyDigitalAudioChannelMode": {
          "type": "string",
          "description": "Channel Mode of Dolby Digital audio stream",
          "enum": [
            "ACM_1_1_DUAL_MONO",
            "ACM_1_0_C",
            "ACM_2_0_LR",
            "ACM_3_0_LCR",
            "ACM_2_1_LRLs",
            "ACM_3_1_LCRLs",
            "ACM_2_2_LRLsRs",
            "ACM_3_2_LCRLsRs",
            "ACM_3_3_LCRCs",
            "ACM_3_4_LCRLsRsLrsRrs"
          ]
        },
        "lfeChannelEnabled": {
          "type": "boolean",
          "description": "LFE channel turn on/off at audio stream"
        },
        "sampleRate": {
          "type": "integer",
          "format": "int32",
          "description": "Sample rate of Dolby Digital audio stream"
        }
      },
      "name": "DolbyDigitalAudioProperties"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkStatus": {
      "required": [
        "id",
        "lastActivityTime",
        "upgradeStatus",
        "uplinkChannelStatusList",
        "uplinkEventReportingList",
        "uplinkState",
        "uplinkStatistic"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the uplink"
        },
        "lastActivityTime": {
          "description": "Auto generated. last activity timing of uplink.",
          "$ref": "#/definitions/java.time.LocalDateTime"
        },
        "upgradeStatus": {
          "type": "string",
          "description": "Upgrade status of uplink",
          "enum": [
            "IDLE",
            "UPGRADING",
            "ROLLBACK",
            "AVAILABLE_UPGRADE"
          ]
        },
        "uplinkChannelStatusList": {
          "type": "array",
          "description": "List of UplinkChannelStatus",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkChannelStatus"
          }
        },
        "uplinkEventReportingList": {
          "type": "array",
          "description": "Event reports of uplink",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkEventReporting"
          }
        },
        "uplinkState": {
          "type": "string",
          "description": "Auto generated. if lost communication with up more than 5 minutes, it will become loss.",
          "enum": [
            "UP",
            "LOST"
          ]
        },
        "uplinkStatistic": {
          "description": "Statistic of the uplink.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkStatistic"
        }
      },
      "name": "UplinkStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.TrafficAddon": {
      "properties": {
        "trafficId": {
          "type": "integer",
          "format": "int32",
          "description": "Id of traffic system"
        }
      },
      "name": "TrafficAddon"
    },
    "com.harmonicinc.vos.app.configure.model.destination.DualServiceOutputIpSettings": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address to send the output"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network address"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP port to send the output"
        }
      },
      "name": "DualServiceOutputIpSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$DashOutputPreference": {
      "properties": {
        "disableSuggestedPresentationDelay": {
          "type": "boolean",
          "description": "Suggested Presentation Delay for Dash live output\r\n\r\n"
        },
        "forcePresentationTimeOffsetZero": {
          "type": "boolean",
          "description": "[Warning! Not conform to specification] Force Presentation Time Offset Zero in DASH CatchUp & LLCU manifest\r\n\r\n"
        },
        "playtimeZerobaseMappingMode": {
          "type": "string",
          "description": "Playtime Zero-base Mapping Mode in DASH StartOver / CatchUp / VOD / LLCU\r\n\r\n",
          "enum": [
            "e_DISABLED",
            "e_ENABLED"
          ]
        }
      },
      "name": "DashOutputPreference"
    },
    "com.harmonicinc.vos.app.configure.model.source.SlateInput": {
      "required": [
        "type"
      ],
      "properties": {
        "enableVideoSlate": {
          "type": "boolean",
          "description": "Enable run-time update on video slate (graphicFilename). default = false"
        },
        "graphicFilename": {
          "type": "string",
          "description": "Title of a graphic in the Asset Acquisition App to be used as the slate video"
        },
        "imageId": {
          "type": "string",
          "description": "Unique identifier of image used for the slate"
        },
        "signalLossSlateSettings": {
          "description": "Additional settings on signal loss slate",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SignalLossSlateSettings"
        },
        "type": {
          "type": "string",
          "description": "Slate type",
          "enum": [
            "SIGNAL_LOSS",
            "CUSTOM"
          ]
        }
      },
      "name": "SlateInput"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputStatisticEntry": {
      "required": [
        "outputBitrate",
        "recoveredPacketCount",
        "time",
        "unrecoveredPacketCount",
        "usageCategory"
      ],
      "properties": {
        "outputBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The package bitrate (bps) of output"
        },
        "recoveredPacketCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of recovered packets"
        },
        "sdiStatistic": {
          "description": "SDI statistic",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SdiStatisticEntry"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic"
        },
        "unrecoveredPacketCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of unrecovered packets"
        },
        "usageCategory": {
          "type": "string",
          "description": "The usage category",
          "enum": [
            "IP",
            "ZIXI_PUSH",
            "CLOUD",
            "SDI"
          ]
        }
      },
      "name": "OutputStatisticEntry"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutDataTrack": {
      "required": [
        "type"
      ],
      "properties": {
        "dvbSubtitlingTracks": {
          "description": "Essential metadata of DVB subtitling tracks",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutDvbSubtitlingConfiguration"
        },
        "labels": {
          "type": "array",
          "description": "Labels of playout source",
          "items": {
            "type": "string"
          }
        },
        "teletextTracks": {
          "description": "Essential metadata of teletext tracks",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutTeletextConfiguration"
        },
        "type": {
          "type": "string",
          "description": "Data stream type",
          "enum": [
            "SCTE27",
            "SCTE35",
            "DVB_SUBTITLING",
            "TELETEXT",
            "ID3",
            "ARIB37",
            "UNKNOWN"
          ]
        }
      },
      "name": "PlayoutDataTrack"
    },
    "com.harmonicinc.rumba.core.ProductInfo": {
      "required": [
        "name",
        "release",
        "sdkVersion"
      ],
      "properties": {
        "bundleName": {
          "type": "string",
          "description": "Name of VOS bundle"
        },
        "bundleVersion": {
          "type": "string",
          "description": "Version of VOS bundle"
        },
        "credits": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentEnv": {
          "description": "Deployment environment info",
          "$ref": "#/definitions/com.harmonicinc.rumba.core.DeploymentEnvInfo"
        },
        "instanceName": {
          "type": "string",
          "description": "Name of particular VOS instance"
        },
        "name": {
          "type": "string",
          "description": "Formal name of product"
        },
        "period": {
          "type": "string"
        },
        "release": {
          "type": "string",
          "description": "User-friendly name of VOS release"
        },
        "sdkVersion": {
          "type": "string",
          "description": "Version of VOS SDK"
        },
        "vos360Type": {
          "type": "string"
        },
        "xosVersion": {
          "type": "string",
          "description": "Version of XOS flex image"
        }
      },
      "name": "ProductInfo"
    },
    "com.harmonicinc.vos.app.nmsapiadapter.rest.model.ServiceProvision": {
      "required": [
        "destinations",
        "service",
        "sources"
      ],
      "properties": {
        "destinations": {
          "type": "array",
          "description": "Destinations used in services",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
          }
        },
        "drmSystems": {
          "type": "array",
          "description": "DRM systems used in services",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmSystem"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a service"
        },
        "images": {
          "type": "array",
          "description": "Images used in services",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Image"
          }
        },
        "service": {
          "description": "The service configuration",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
        },
        "sources": {
          "type": "array",
          "description": "Sources used in services",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
          }
        }
      },
      "name": "ServiceProvision"
    },
    "com.harmonicinc.vos.labwizard.rest.model.RawTsPackagingProperties": {
      "required": [
        "segmentLength"
      ],
      "properties": {
        "segmentLength": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the media segment files (in seconds)."
        }
      },
      "name": "RawTsPackagingProperties"
    },
    "com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$CommandScheduler": {
      "properties": {
        "authentication": {
          "description": "The authentication settings of command scheduler",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$Authentication"
        },
        "endpoint": {
          "type": "string",
          "description": "The endpoint of command scheduler"
        },
        "triggerRepublishOnEmptySchedule": {
          "description": "The trigger republish on empty schedule settings of command scheduler",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ParentalControlAddon$TriggerRepublishOnEmptySchedule"
        }
      },
      "name": "CommandScheduler"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkGroup": {
      "required": [
        "id",
        "name",
        "uplinkIds"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the UplinkGroup"
        },
        "name": {
          "type": "string",
          "description": "name of the UplinkGroup"
        },
        "uplinkIds": {
          "type": "array",
          "description": "List of uplinkId, grouped to form a redundancy group with 2 CloudLinks",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "UplinkGroup"
    },
    "com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$VideoStreamSelectionItem$BitrateRange": {
      "properties": {
        "esBitrateRange": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange$EsBitrateRange"
        },
        "exclude": {
          "type": "boolean"
        }
      },
      "name": "BitrateRange"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange": {
      "properties": {
        "esBitrateRange": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange$EsBitrateRange"
        },
        "exclude": {
          "type": "boolean"
        },
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32"
        },
        "tsBitrateRange": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange$TsBitrateRange"
        }
      },
      "name": "BitrateRange"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.EmbeddedDrmTrackFilter": {
      "properties": {
        "drmTrackFilterProfileProperties": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DrmTrackFilterProfileProperties"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "name": "EmbeddedDrmTrackFilter"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$StatisticsReportingConfig": {
      "properties": {
        "liveEventRecordingStorageScanningIntervalSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Interval between each live event recording storage scanning routine, 0 to disable scanning"
        },
        "vodStorageScanningIntervalSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Interval between each VOD and LLCU storage scanning routine, 0 to disable scanning"
        }
      },
      "name": "StatisticsReportingConfig"
    },
    "com.harmonicinc.vos.app.configure.model.destination.S3PublishSettings": {
      "required": [
        "authorizationSettings",
        "awsRegion",
        "bucketName",
        "regionSeparator",
        "relativePath"
      ],
      "properties": {
        "authorizationSettings": {
          "description": "Authorization credentials to S3 bucket",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.AuthorizationSettings"
        },
        "awsRegion": {
          "type": "string",
          "description": "AWS region"
        },
        "bucketName": {
          "type": "string",
          "description": "Amazon S3 bucket name"
        },
        "regionSeparator": {
          "type": "string",
          "description": "Separator for aws region"
        },
        "relativePath": {
          "type": "string",
          "description": "Path for defining unique channel"
        }
      },
      "name": "S3PublishSettings"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.PerPackageDrmSystemId": {
      "properties": {
        "drmSystemId": {
          "type": "string"
        },
        "publishName": {
          "type": "string"
        }
      },
      "name": "PerPackageDrmSystemId"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.CaptionServiceDescriptorData": {
      "required": [
        "captionServiceNumber",
        "language"
      ],
      "properties": {
        "captionServiceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Caption service number of caption service"
        },
        "language": {
          "type": "string",
          "description": "Language code of caption service"
        }
      },
      "name": "CaptionServiceDescriptorData"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AudioUpmixerConfig": {
      "properties": {
        "upmixerConfig": {
          "type": "string",
          "description": "Configuration for audio channel upmixer",
          "enum": [
            "e_Disable",
            "e_Upmix",
            "e_UpmixWithAutoSense"
          ]
        }
      },
      "name": "AudioUpmixerConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenStreamBasedAudio": {
      "properties": {
        "aacProfileProperties": {
          "description": "AAC profile properties - AAC meta data",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AACProfileProperties"
        },
        "audioAUPerPES": {
          "type": "string",
          "description": "Number of audio AU per PES",
          "enum": [
            "e_Auto",
            "e_1AU_per_PES",
            "e_5AU_per_PES",
            "e_6AU_per_PES"
          ]
        },
        "audioKey": {
          "type": "string",
          "description": "Audio key to establish output profile starting with this audio stream."
        },
        "audioLevelAdjustmentProperties": {
          "description": "General Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioLevelAdjustmentProperties"
        },
        "audioMixingProperties": {
          "description": "Settings for audio mixing",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioMixingProperties"
        },
        "audioUpmixerConfig": {
          "description": "Configuration for audio upmixer",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioUpmixerConfig"
        },
        "audioUpmixingProperties": {
          "description": "Settings for audio upmixing",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioUpmixingProperties"
        },
        "bitrate": {
          "type": "string",
          "description": "Audio bitrate in bps",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "channels": {
          "type": "string",
          "description": "Audio channel setting for converting",
          "enum": [
            "e_PASSTHROUGH",
            "e_STEREO",
            "e_MONO",
            "e_DOLBY_5_1",
            "e_DUAL_MONO",
            "e_5_1_4"
          ]
        },
        "codec": {
          "type": "string",
          "description": "Audio codec used for converting",
          "enum": [
            "e_AC_4",
            "e_E_AC_3",
            "e_AC_3",
            "e_HE_AAC_v2",
            "e_HE_AAC_v1",
            "e_AAC_LC",
            "e_MPEG1_L2",
            "e_MPEGH"
          ]
        },
        "descriptorMode": {
          "type": "string",
          "description": "Reserved",
          "enum": [
            "e_LEGACY",
            "e_MANUAL",
            "e_DYNAMIC_PASSTHROUGH"
          ]
        },
        "dialnorm": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio dialogue normalization (average loudness) in dB, applied for AC-4, AC-3, E-AC3 codec"
        },
        "dolbyAC4AdvanceProperties": {
          "description": "Dolby AC4 Advanced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyAC4AdvanceProperties"
        },
        "dolbyPlusAdvanceProperties": {
          "description": "Dolby Plus Adavnced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyPlusAdvanceProperties"
        },
        "fallbackOnSilenceDetection": {
          "type": "boolean",
          "description": "Fallback on silence detection"
        },
        "gain": {
          "type": "integer",
          "format": "int32",
          "description": "Audio gain in dB when LevelMagic leveling is disabled, Dialnorm will be set as default value"
        },
        "halcAudioLevelAdjustementProperties": {
          "description": "HALC Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HALCAudioLevelAdjustementProperties"
        },
        "kantarSnapWatermarkEnabled": {
          "type": "boolean",
          "description": "Enable Kantar Snap watermarking for this channel"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of audio",
          "items": {
            "type": "string"
          }
        },
        "leveling": {
          "type": "boolean",
          "description": "Enable audio LevelMagic leveling"
        },
        "loudnessTarget": {
          "type": "integer",
          "format": "int32",
          "description": "Loudness setting in LKFS when LevelMagic leveling is enabled, Dialnorm will be overridden"
        },
        "mpeg1L2ProfileProperties": {
          "description": "Mpeg1 Layer2 Profile Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Mpeg1L2ProfileProperties"
        },
        "nielsenWatermarkProperties": {
          "description": "Nielsen Watermarking Configurations",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.NielsenWatermarkProperties"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the audio"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 482 (or higher) if not defined in source grooming (non-TS source for example). Any other value is not recommended and will behave as -1 in current version."
        },
        "processing": {
          "type": "string",
          "description": "Convert or pass-through audio",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "profileIndex": {
          "type": "integer",
          "format": "int32",
          "description": "When not null, profides ordering among output profiles, with value starting from 1. When null, order in the JSON is used."
        },
        "sampleRate": {
          "type": "string",
          "description": "Audio sampling rate in Hz",
          "enum": [
            "e_16",
            "e_32",
            "e_44",
            "e_48"
          ]
        },
        "secondSourceLabels": {
          "type": "array",
          "description": "List of label of the second source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "sourceAudioProcessingMode": {
          "type": "string",
          "description": "Audio Stream Processing Mode",
          "enum": [
            "e_SWITCH",
            "e_MIX",
            "e_UPMIX"
          ]
        },
        "sourceChannel": {
          "type": "string",
          "description": "Audio M1L2 source channel used for converting",
          "enum": [
            "e_LEFT",
            "e_RIGHT"
          ]
        },
        "sourceDolbyEProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Source DolbyE program number"
        },
        "sourceLabel": {
          "type": "string",
          "description": "(Deprecrated) Label of the source stream to be processed"
        },
        "sourceLabels": {
          "type": "array",
          "description": "List of label of the source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "speechToTextProperties": {
          "description": "Speech to Text Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.SpeechToTextProperties"
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of audio",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        },
        "thirdSourceLabels": {
          "type": "array",
          "description": "List of label of the third source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "videoKeyList": {
          "type": "array",
          "description": "Join with output profiles by listing EITHER \"videoKey\" or \"audioKey\". If null, default algorithm is used to match only with all video profiles.",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "MultiscreenStreamBasedAudio"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutDataConfiguration": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of data tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutDataTrack"
          }
        }
      },
      "name": "PlayoutDataConfiguration"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalNielsenSetting": {
      "required": [
        "hostname",
        "password",
        "path",
        "port",
        "username"
      ],
      "properties": {
        "encoderTimezone": {
          "type": "string",
          "description": "Obsoleted"
        },
        "hostname": {
          "type": "string",
          "description": "IP address or hostname of the Nielsen log publishing server"
        },
        "password": {
          "type": "string",
          "description": "Password of the Nielsen log publishing server (masked)"
        },
        "path": {
          "type": "string",
          "description": "Path on the Nielsen log publishing server to store the output files"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port of the Nielsen log publishing server to connect to"
        },
        "username": {
          "type": "string",
          "description": "Username of the Nielsen log publishing server"
        }
      },
      "name": "GlobalNielsenSetting"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig": {
      "required": [
        "enableNginxLogs"
      ],
      "properties": {
        "enableNginxLogs": {
          "type": "boolean",
          "description": "Set to true to use enable push of nginx access logs to Loki"
        },
        "grpdCompliance": {
          "type": "boolean",
          "description": "Enable GRPD compliance for log aggregation"
        },
        "logEndpoint": {
          "description": "The settings for log aggregation system endpoint",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$LogEndpoint"
        },
        "logPercentage": {
          "type": "number",
          "format": "double",
          "description": "Log percentage for Nginx Access log to write to Loki"
        },
        "logShipper": {
          "description": "The settings for log shipper",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$LogShipper"
        },
        "logVolumeSizeInMB": {
          "type": "number",
          "format": "double",
          "description": "The log volume size for RAM Disk in MB"
        }
      },
      "name": "AccessLogToLokiConfig"
    },
    "com.harmonicinc.vos.mux.model.common.Network": {
      "required": [
        "networkId"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "2677bf96-ef19-11ed-a05b-0242ac120003",
          "description": "Unique identifier of a network in UUID format"
        },
        "networkDescriptors": {
          "type": "array",
          "description": "network descriptors in hex TLV format",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Descriptor"
          }
        },
        "networkId": {
          "type": "integer",
          "format": "int32",
          "example": "4",
          "description": "Mpeg Network ID (0-65535)"
        },
        "networkName": {
          "type": "string",
          "description": "Network Name (0-255 characters). Network name descriptor (0x64) will be created when name is not empty"
        },
        "transports": {
          "type": "array",
          "description": "network transports",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Transport"
          }
        }
      },
      "name": "Network"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenAudioProfile": {
      "properties": {
        "aacProfileProperties": {
          "description": "AAC profile properties - AAC meta data",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AACProfileProperties"
        },
        "audioAUPerPES": {
          "type": "string",
          "description": "Number of audio AU per PES",
          "enum": [
            "e_Auto",
            "e_1AU_per_PES",
            "e_5AU_per_PES",
            "e_6AU_per_PES"
          ]
        },
        "audioLevelAdjustmentProperties": {
          "description": "General Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioLevelAdjustmentProperties"
        },
        "audioUpmixerConfig": {
          "description": "Configuration for audio upmixer",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AudioUpmixerConfig"
        },
        "bitrate": {
          "type": "string",
          "description": "Audio bitrate in bps",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "channels": {
          "type": "string",
          "description": "Audio channel setting for converting",
          "enum": [
            "e_PASSTHROUGH",
            "e_STEREO",
            "e_MONO",
            "e_DOLBY_5_1",
            "e_DUAL_MONO",
            "e_5_1_4"
          ]
        },
        "codec": {
          "type": "string",
          "description": "Audio codec used for converting",
          "enum": [
            "e_AC_4",
            "e_E_AC_3",
            "e_AC_3",
            "e_HE_AAC_v2",
            "e_HE_AAC_v1",
            "e_AAC_LC",
            "e_MPEG1_L2",
            "e_MPEGH"
          ]
        },
        "dialnorm": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Audio dialogue normalization (average loudness) in dB, applied for AC-4, AC-3, E-AC3 codec"
        },
        "dolbyAC4AdvanceProperties": {
          "description": "Dolby AC4 Advanced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyAC4AdvanceProperties"
        },
        "dolbyPlusAdvanceProperties": {
          "description": "Dolby Plus Adavnced Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DolbyPlusAdvanceProperties"
        },
        "gain": {
          "type": "integer",
          "format": "int32",
          "description": "Audio gain in dB when LevelMagic leveling is disabled, Dialnorm will be set as default value"
        },
        "halcAudioLevelAdjustementProperties": {
          "description": "HALC Audio Level Adjustement Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HALCAudioLevelAdjustementProperties"
        },
        "kantarSnapWatermarkEnabled": {
          "type": "boolean",
          "description": "Enable Kantar Snap watermarking for this channel"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of audio",
          "items": {
            "type": "string"
          }
        },
        "leveling": {
          "type": "boolean",
          "description": "Enable audio LevelMagic leveling"
        },
        "loudnessTarget": {
          "type": "integer",
          "format": "int32",
          "description": "Loudness setting in LKFS when LevelMagic leveling is enabled, Dialnorm will be overridden"
        },
        "mpeg1L2ProfileProperties": {
          "description": "Mpeg1 Layer2 Profile Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Mpeg1L2ProfileProperties"
        },
        "nielsenWatermarkProperties": {
          "description": "Nielsen Watermarking Configurations",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.NielsenWatermarkProperties"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the audio"
        },
        "processing": {
          "type": "string",
          "description": "Convert or pass-through audio",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "sampleRate": {
          "type": "string",
          "description": "Audio sampling rate in Hz",
          "enum": [
            "e_16",
            "e_32",
            "e_44",
            "e_48"
          ]
        },
        "sourceChannel": {
          "type": "string",
          "description": "Audio M1L2 source channel used for converting",
          "enum": [
            "e_LEFT",
            "e_RIGHT"
          ]
        },
        "sourceDolbyEProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Source DolbyE program number"
        },
        "speechToTextProperties": {
          "description": "Speech to Text Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.SpeechToTextProperties"
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of audio",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        }
      },
      "name": "MultiscreenAudioProfile"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalDescramblingSetting": {
      "properties": {
        "biss2ModeEInjectedId": {
          "type": "string",
          "description": "Global injected Id for BISS2 mode E descrambling. 32 hexadecimal characters long. On PUT, special value \"******\" means the value is not modified. GET will return this same special value."
        }
      },
      "name": "GlobalDescramblingSetting"
    },
    "com.harmonicinc.vos.app.configure.model.service.CasAddon$CasSystem": {
      "properties": {
        "accessCriteria": {
          "type": "string"
        },
        "casId": {
          "type": "string"
        },
        "ecmId": {
          "type": "string"
        }
      },
      "name": "CasSystem"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiCaptionServiceDescriptorData": {
      "required": [
        "captionServiceNumber",
        "easyReader",
        "language",
        "wideAspectRatio"
      ],
      "properties": {
        "captionServiceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Caption service number of caption service in the range [1..63] if digital_cc == 1. It has no meaning if digital_cc == 0"
        },
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the caption service stream is the stream for default subtitle"
        },
        "easyReader": {
          "type": "integer",
          "format": "int32",
          "description": "Easy reader of caption service. It has no meaning if digital_cc == 0"
        },
        "language": {
          "type": "string",
          "description": "ISO 639.2/B 3 character language code of caption service. It has no meaning if digital_cc == 0"
        },
        "wideAspectRatio": {
          "type": "integer",
          "format": "int32",
          "description": "Wide aspect ratio of caption service: 0=4/3, 1=16/9. It has no meaning if digital_cc == 0"
        }
      },
      "name": "SdiCaptionServiceDescriptorData"
    },
    "com.harmonicinc.vos.mux.model.componentlevel.OutputComponentParameters": {
      "properties": {
        "addedPmtDescriptors": {
          "type": "array",
          "description": "added PMT Descriptors",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.model.common.Descriptor"
          }
        },
        "cmpTag": {
          "type": "integer",
          "format": "int32",
          "description": "output component tag"
        },
        "controlState": {
          "type": "string",
          "description": "Default is ON_AIR. When controlState is OFF_AIR, the component is not present in the output, and the PMT does not refer to it.",
          "enum": [
            "ON_AIR",
            "OFF_AIR"
          ]
        },
        "delayAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "adjust the delay of a PID coming from a different source, like subtitles or teletext, in ms (values between -5000 to 5000)"
        },
        "filteredPmtDescriptors": {
          "type": "array",
          "description": "When a descriptor tag (in hexa) is present in this list, there will be no PMT descriptor with this tag in the output, unless added using addedPmtDescriptors.",
          "items": {
            "type": "string"
          }
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "output PID"
        },
        "scramblingParameters": {
          "description": "scrambling parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.componentlevel.OutputComponentScramblingParameters"
        },
        "streamType": {
          "type": "integer",
          "format": "int32",
          "description": "stream type"
        }
      },
      "name": "OutputComponentParameters"
    },
    "com.harmonicinc.vos.app.configure.model.SrtConnectionSettings": {
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Ip address"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Interface"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency, specified for Srt"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port"
        },
        "srtEncryptionParams": {
          "description": "Srt encryption params",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtEncryptionParams"
        },
        "streamId": {
          "type": "string",
          "description": "Stream id"
        },
        "streamIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Stream Index"
        }
      },
      "name": "SrtConnectionSettings"
    },
    "com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$SegmentDeliveryPrefix": {
      "required": [
        "adSegmentDeliveryPrefix",
        "contentSegmentDeliveryPrefix"
      ],
      "properties": {
        "adSegmentDeliveryPrefix": {
          "description": "Delivery prefixes for ads",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix"
        },
        "contentSegmentDeliveryPrefix": {
          "description": "Delivery prefixes for origin contents",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix"
        }
      },
      "name": "SegmentDeliveryPrefix"
    },
    "com.harmonicinc.vos.app.configure.model.source.DvbSubtitlingDescriptorData": {
      "required": [
        "ancillaryPageId",
        "compositionPageId",
        "language",
        "subtitlingType"
      ],
      "properties": {
        "ancillaryPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Ancillary PageId of DVB data stream"
        },
        "compositionPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Composition PageId of DVB data stream"
        },
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the DVB data stream is the stream for default subtitle"
        },
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "subtitlingType": {
          "type": "integer",
          "format": "int32",
          "description": "Subtitling Type of DVB data stream"
        }
      },
      "name": "DvbSubtitlingDescriptorData"
    },
    "com.harmonicinc.vos.app.atm.rest.model.AtmContainerResourceConfig": {
      "properties": {
        "atmRequestUOEBlockingReloadTimeoutInMs": {
          "type": "integer",
          "format": "int32"
        },
        "atmRequestUOELiveTimeoutInMs": {
          "type": "integer",
          "format": "int32"
        },
        "atmRequestUOETimeshiftTimeoutInMs": {
          "type": "integer",
          "format": "int32"
        },
        "cpu": {
          "type": "number",
          "format": "double",
          "description": "Number of CPU cores or units of virtual CPU"
        },
        "memInMB": {
          "type": "number",
          "format": "double",
          "description": "Memory in MiB"
        }
      },
      "name": "AtmContainerResourceConfig"
    },
    "com.harmonicinc.vos.app.configure.model.source.ZixiBroadcasterSetting": {
      "name": "ZixiBroadcasterSetting"
    },
    "com.harmonicinc.vos.app.configure.model.service.Latency": {
      "required": [
        "e2eLatency",
        "enableTcPtpLatency",
        "jamTime",
        "utcTaiOffset"
      ],
      "properties": {
        "e2eLatency": {
          "type": "integer",
          "format": "int32",
          "description": "End-to-end latency, in micro-seconds. It should be a multiple of the frame duration (1001000/30)"
        },
        "enableTcPtpLatency": {
          "type": "boolean",
          "description": "Enables end-to-end deterministic latency based on input timecode, genlock and PTP synchronization. Applicable for 29.97 fps video"
        },
        "jamTime": {
          "type": "integer",
          "format": "int32",
          "description": "Daily jam time, in UTC hours. It shall be the same as the upstream timecode inserter. Range 0..23."
        },
        "utcTaiOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Offset between TAI and UTC, in seconds. Default is 37 seconds."
        }
      },
      "name": "Latency"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AttributeCustomizationProfileProperties": {
      "properties": {
        "attributeCustomizationProperties": {
          "type": "array",
          "description": "attributeCustomizationProperties",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AttributeCustomizationProperties"
          }
        },
        "name": {
          "type": "string",
          "description": "name"
        }
      },
      "name": "AttributeCustomizationProfileProperties"
    },
    "com.harmonicinc.vos.backuprestore.rest.ScheduledBackupStatus": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "nextBackupTime": {
          "type": "string",
          "format": "date-time"
        },
        "periodMs": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "ScheduledBackupStatus"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.ExportLogDestination": {
      "properties": {
        "fileServerId": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "name": "ExportLogDestination"
    },
    "com.harmonicinc.externalassetpotf.model.rest.settings.PotfServerScalingConfig$KedaScalePolicy": {
      "required": [
        "periodSeconds",
        "type",
        "value"
      ],
      "properties": {
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of time in seconds for which the rule should hold true"
        },
        "type": {
          "type": "string",
          "description": "Allowed changed in terms of absolute number of pods or percentage of current replicas",
          "enum": [
            "PODS",
            "PERCENT"
          ]
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "No. of pods or percentage of existing replicas to scale down each time"
        }
      },
      "name": "KedaScalePolicy"
    },
    "com.harmonicinc.vos.app.configure.model.source.Smpte2110DataStreamProperties": {
      "required": [
        "transportId"
      ],
      "properties": {
        "transportId": {
          "type": "integer",
          "format": "int32",
          "description": "For mapping the 2110 stream to the 2110 transport"
        }
      },
      "name": "Smpte2110DataStreamProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutDvbSubtitlingConfiguration": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of DVB subtitling tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutDvbSubtitlingTrack"
          }
        }
      },
      "name": "PlayoutDvbSubtitlingConfiguration"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutCaptionServiceDescriptorData": {
      "required": [
        "captionServiceNumber",
        "easyReader",
        "language",
        "wideAspectRatio"
      ],
      "properties": {
        "captionServiceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Caption service number in the range [1..63]"
        },
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the caption service is the default subtitle"
        },
        "easyReader": {
          "type": "integer",
          "format": "int32",
          "description": "Whether or not the caption service is of easy reader type"
        },
        "language": {
          "type": "string",
          "description": "ISO 639.2/B 3 character language code of the caption service"
        },
        "wideAspectRatio": {
          "type": "integer",
          "format": "int32",
          "description": "Wide aspect ratio of the caption service: 0=4/3, 1=16/9"
        }
      },
      "name": "PlayoutCaptionServiceDescriptorData"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiAudioChannelPosition": {
      "required": [
        "audioChannel",
        "embChannelGroup",
        "embChannelPair"
      ],
      "properties": {
        "audioChannel": {
          "type": "string",
          "description": "Audio channel type",
          "enum": [
            "Mono_Left",
            "Mono_Right",
            "Left_Right",
            "Right_Left",
            "Center_LowFrequency",
            "LowFrequency_Center",
            "LeftSurround_RightSurround",
            "RightSurround_LeftSurround",
            "LeftRearSurround_RightRearSurround",
            "RightRearSurround_LeftRearSurround",
            "LeftTopFront_RightTopFront",
            "RightTopFront_LeftTopFront",
            "LeftTopRear_RightTopRear",
            "RightTopRear_LeftTopRear",
            "Opaque_First",
            "Opaque_Second",
            "Opaque_Pair"
          ]
        },
        "embChannelGroup": {
          "type": "string",
          "description": "Embedded channel group type",
          "enum": [
            "Group1",
            "Group2",
            "Group3",
            "Group4"
          ]
        },
        "embChannelPair": {
          "type": "string",
          "description": "Embedded channel pair type",
          "enum": [
            "Pair1",
            "Pair2"
          ]
        }
      },
      "name": "SdiAudioChannelPosition"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DrmTrackFilterProperty": {
      "required": [
        "name",
        "trackType"
      ],
      "properties": {
        "audioStreamSelections": {
          "type": "array",
          "description": "audioStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem"
          }
        },
        "clearOutput": {
          "type": "boolean",
          "description": "clearOutput"
        },
        "name": {
          "type": "string",
          "description": "An optional description of the track type"
        },
        "trackType": {
          "type": "string",
          "description": "trackType"
        },
        "videoStreamSelections": {
          "type": "array",
          "description": "videoStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem"
          }
        }
      },
      "name": "DrmTrackFilterProperty"
    },
    "com.harmonicinc.rumba.clientapp.rest.model.ClientAppCheckerConfig": {
      "required": [
        "checkingTimeIntervalInMinute",
        "deactivatedThresholdInMinute",
        "disusedThresholdInMinute"
      ],
      "properties": {
        "checkingTimeIntervalInMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Define the time interval of checking if there are any disused client apps or client apps should be deactivated"
        },
        "deactivatedThresholdInMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Define how long (in minutes) a client app is considered as deactivated from the last used time"
        },
        "disusedThresholdInMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Define how long (in minutes) a client app is considered as disused from the last used time"
        }
      },
      "name": "ClientAppCheckerConfig"
    },
    "com.harmonicinc.vos.app.configure.model.source.StreamDescriptor": {
      "required": [
        "captionServiceDescriptor",
        "customDescriptor",
        "descriptorType",
        "dvbSubtitlingDescriptor",
        "iso639Descriptor",
        "teletextDescriptor"
      ],
      "properties": {
        "captionServiceDescriptor": {
          "description": "Caption Service Descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CaptionServiceDescriptor"
        },
        "customDescriptor": {
          "description": "Custom descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CustomDescriptor"
        },
        "descriptorType": {
          "type": "string",
          "description": "Type of descriptor",
          "enum": [
            "ISO639",
            "DVB_SUBTITLING",
            "CAPTION_SERVICE",
            "TELETEXT",
            "TTML",
            "CUSTOM"
          ]
        },
        "dvbSubtitlingDescriptor": {
          "description": "Dvb descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DvbSubtitlingDescriptor"
        },
        "iso639Descriptor": {
          "description": "ISO639 descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.ISO639Descriptor"
        },
        "teletextDescriptor": {
          "description": "Teletext descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TeletextDescriptor"
        },
        "ttmlDescriptor": {
          "description": "Ttml descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.TtmlDescriptor"
        }
      },
      "name": "StreamDescriptor"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenVideo": {
      "properties": {
        "aspectRatio": {
          "type": "string",
          "description": "Output Aspect ratio of video",
          "enum": [
            "e_16_9",
            "e_4_3",
            "e_PASSTHROUGH"
          ]
        },
        "bitrateMax": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum bitrate of video in bps, for auto calculation the best video and audio parameter setting"
        },
        "bitrateMin": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum bitrate of video in bps, for auto calculation the best video and audio parameter setting"
        },
        "closedCaption": {
          "type": "string",
          "description": "Closed captions passthrough setting",
          "enum": [
            "e_AUTO",
            "e_ATSC",
            "e_NONE"
          ]
        },
        "dolbyVisionConfigFile": {
          "type": "string",
          "description": "Dolby-Vision Configuration file path"
        },
        "dynamicFrameRateMode": {
          "type": "string",
          "description": "Enable Dynamic Frame Rate mode per service",
          "enum": [
            "e_OFF",
            "e_AUTO"
          ]
        },
        "enableOutputAfd": {
          "type": "boolean",
          "description": "Obsolete"
        },
        "eyeQ": {
          "type": "boolean",
          "description": "Enable EyeQ"
        },
        "eyeQQualityLevel": {
          "type": "string",
          "description": "EyeQ Quality Level",
          "enum": [
            "e_HIGH_FIDELITY",
            "e_BALANCED",
            "e_HIGH_COMPRESSION"
          ]
        },
        "framerateConversion": {
          "type": "string",
          "description": "Convert frame rate of video between 50Hz and 59.94Hz system or force output frame rate on VOS",
          "enum": [
            "e_PASSTHROUGH",
            "e_PASSTHROUGH_ROUND_UP",
            "e_50_DOMAIN",
            "e_59_94_DOMAIN",
            "e_FR_25",
            "e_FR_29_97",
            "e_FR_30",
            "e_FR_50",
            "e_FR_59_94",
            "e_FR_60"
          ]
        },
        "hdrMetadataMode": {
          "type": "string",
          "description": "Select HDR10 metadata generation method : manual, auto",
          "enum": [
            "e_MANUAL",
            "e_AUTO"
          ]
        },
        "hdrMetadataPreset": {
          "type": "string",
          "description": "Choose HDR10 preset from selection",
          "enum": [
            "e_BT_2020",
            "e_DCI_P3_THEATER",
            "e_DCI_P3_DISPLAY"
          ]
        },
        "irisVQBoost": {
          "type": "string",
          "description": "Select to improve the VQ by adjusting the on/off/setting of each video filter, based on input frames",
          "enum": [
            "e_DISABLED",
            "e_ENABLED"
          ]
        },
        "keepGfxColorSpace": {
          "type": "boolean",
          "description": "Disable GFX color-space conversion"
        },
        "latencyOption": {
          "type": "string",
          "description": "Set latency mode: low, reduced, default",
          "enum": [
            "e_2_5",
            "e_3_5",
            "e_5_5",
            "e_VERY_SHORT",
            "e_LOW",
            "e_REDUCED",
            "e_DEFAULT"
          ]
        },
        "lookAheadBuffer": {
          "type": "string",
          "description": "Obsolete, decide by latencyOption, Look ahead buffer size in milliseconds",
          "enum": [
            "e_500",
            "e_1000"
          ]
        },
        "lutHlgBt2020ToSdrBt709": {
          "type": "string",
          "description": "LUT file configuraton for BT.2020 HLG to BT.709 SDR conversion"
        },
        "lutPqBt2020ToSdrBt709": {
          "type": "string",
          "description": "LUT file configuraton for BT.2020 PQ to BT.709 SDR conversion"
        },
        "lutSdrBt709ToHlgBt2020": {
          "type": "string",
          "description": "LUT file configuraton for BT.709 SDR to BT.2020 HLG conversion"
        },
        "lutSdrBt709ToPqBt2020": {
          "type": "string",
          "description": "LUT file configuraton for BT.709 SDR to BT.2020 PQ conversion"
        },
        "maxCll": {
          "type": "integer",
          "format": "int32",
          "description": "Configure maximum content light level for HDR10 metadata"
        },
        "maxFall": {
          "type": "integer",
          "format": "int32",
          "description": "Configure maximum average frame level for HDR10 metadata"
        },
        "maxLuminance": {
          "type": "integer",
          "format": "int32",
          "description": "Configure maximum luminance for HDR10 metadata"
        },
        "minLuminance": {
          "type": "integer",
          "format": "int32",
          "description": "Configure minimum luminance for HDR10 metadata"
        },
        "muteOutputAfd": {
          "type": "boolean",
          "description": "Mute output AFD, default : false"
        },
        "pictureEnhancement": {
          "type": "string",
          "description": "Picture color enhancement control",
          "enum": [
            "e_DISABLE",
            "e_WEAK",
            "e_VERY_WEAK",
            "e_VIVID",
            "e_TONE_EXPANSION",
            "e_TONE_EXPANSION_PRO"
          ]
        },
        "processing": {
          "type": "string",
          "description": "Convert or pass-through video",
          "enum": [
            "e_PASSTHROUGH",
            "e_CONVERT",
            "e_DISABLE"
          ]
        },
        "profiles": {
          "type": "array",
          "description": "Video output qualities setting",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenVideoProfile"
          }
        },
        "ptsSpacingOption": {
          "type": "string",
          "description": "PTS Spacing Option",
          "enum": [
            "e_COMPLIANT",
            "e_UNCONSTRAINED"
          ]
        },
        "slHdr1ConfigFile": {
          "type": "string",
          "description": "AHDR SL-HDR1 Configuration file path"
        },
        "stressBias": {
          "type": "string",
          "description": "Controls the stress on the encoded content at various bit rates",
          "enum": [
            "e_CLEAN",
            "e_BALANCED",
            "e_SHARP"
          ]
        },
        "vbvDelay": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete, decide by latencyOption, Video buffering verifier buffer time in miliseconds, and value under 10 represents time in seconds"
        },
        "videoFixedImageConversion": {
          "type": "string",
          "description": "Obsolete",
          "enum": [
            "e_NONE",
            "e_FORCE_CENTER_CUT",
            "e_CONVERT_14_9_PILLARBOX_TO_LETTERBOX",
            "e_SQUEEZE_TO_ANAMORPHIC",
            "e_FORCE_PILLAR",
            "e_FORCE_LETTER",
            "e_REMOVE_LETTER",
            "e_CONVERT_LETTER_TO_PILLAR_14_9",
            "e_ANAMORPHIC"
          ]
        },
        "vqMode": {
          "type": "string",
          "description": "Video quality mode, preference between density and quality",
          "enum": [
            "e_AUTOMATIC",
            "e_HIGH_VQ",
            "e_OBJECTIVE",
            "e_HIGH_DENSITY",
            "e_ELITE_VQ"
          ]
        },
        "watermark": {
          "description": "Watermark parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenVideoWatermark"
        }
      },
      "name": "MultiscreenVideo"
    },
    "com.harmonicinc.vos.spi.operation.ServiceOutputUnmuteStartEndTime": {
      "properties": {
        "endTime": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        }
      },
      "name": "ServiceOutputUnmuteStartEndTime"
    },
    "com.harmonicinc.vos.app.atm.rest.model.AtmSettingConfig": {
      "required": [
        "atmContainerResourceConfig",
        "atmScalingConfig"
      ],
      "properties": {
        "atmContainerResourceConfig": {
          "description": "The resource setting of ATM container",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmContainerResourceConfig"
        },
        "atmScalingConfig": {
          "description": "The scaling setting of ATM pod",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmScalingConfig"
        },
        "enableGzip": {
          "type": "boolean",
          "description": "Boolean to determine if enable gzip response or not"
        }
      },
      "name": "AtmSettingConfig"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalServiceSetting": {
      "required": [
        "dataGrooming",
        "globalAudioSetting",
        "globalSourceSetting",
        "globalVideoSetting"
      ],
      "properties": {
        "dataGrooming": {
          "description": "Default Data Grooming setting of source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DataGrooming"
        },
        "enableAutoUnencrypted": {
          "type": "boolean",
          "description": "Indicate if auto_unencrypted is enabled"
        },
        "enablePersistPlaylist": {
          "type": "boolean",
          "description": "Indicate if persist playlist is enabled for LIVE_EVENT services"
        },
        "globalAudioSetting": {
          "description": "Global setting of audio",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalAudioSetting"
        },
        "globalCloudDestinationSettings": {
          "description": "Cloud destination settings for XOS services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalCloudDestinationSettings"
        },
        "globalDailySyncTime": {
          "description": "Global Daily sync time (UTC) for the timecode synchronization",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalDailySyncTime"
        },
        "globalDescramblingSetting": {
          "description": "Global descrambling setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalDescramblingSetting"
        },
        "globalEsamSetting": {
          "description": "Global ESAM setting of services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalEsamSetting"
        },
        "globalGeoSyncSetting": {
          "description": "Global GeoSync setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalGeoSyncSetting"
        },
        "globalLiveIngestSetting": {
          "description": "Global Live Ingest setting of services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalLiveIngestSetting"
        },
        "globalMuxSetting": {
          "description": "mux settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalMuxSetting"
        },
        "globalNielsenSetting": {
          "description": "Global Nielsen setting of services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalNielsenSetting"
        },
        "globalPackagingSetting": {
          "description": "Global packaging setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalPackagingSetting"
        },
        "globalScte35Setting": {
          "description": "Global Scte35 setting of services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalScte35Setting"
        },
        "globalSourceSetting": {
          "description": "Global setting of source",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalSourceSetting"
        },
        "globalSpeechEngineSetting": {
          "description": "Global speech service setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalSpeechServiceSetting"
        },
        "globalSynamediaWatermarkSetting": {
          "description": "Global Synamedia setting of services",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalSynamediaWatermarkSetting"
        },
        "globalVideoSetting": {
          "description": "Global setting of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.GlobalVideoSetting"
        },
        "gpsUtcOffset": {
          "type": "integer",
          "format": "int32",
          "example": "18",
          "description": "GPS UTC offset in seconds"
        },
        "scheduler360Setting": {
          "description": "Scheduler 360 setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Scheduler360Setting"
        },
        "sdiLatencyOffset": {
          "type": "integer",
          "format": "int32",
          "description": "SDI latency offset in seconds, range -100..100ms, step 1ms, default is 0"
        },
        "serviceLimit": {
          "description": "The limitation of number of service",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.ServiceLimit"
        }
      },
      "name": "GlobalServiceSetting"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$OttEgressProxyConfig$Cache": {
      "properties": {
        "cleanUpIntervalInSec": {
          "type": "integer",
          "format": "int32",
          "description": "Interval to remove expired entries in cache"
        },
        "enable": {
          "type": "boolean",
          "description": "Whether to enable cache"
        },
        "initEntries": {
          "type": "integer",
          "format": "int32",
          "description": "Number of entry used in initial memory allocation"
        },
        "initEntrySizeInByte": {
          "type": "integer",
          "format": "int32",
          "description": "Entry size used in initial memory allocation"
        },
        "maxCacheSizeInMB": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum allowed memory allocated for cache"
        },
        "shards": {
          "type": "integer",
          "format": "int32",
          "description": "Number of shards (must be power of 2). For concurrency enhancement"
        },
        "ttlInSec": {
          "type": "integer",
          "format": "int32",
          "description": "Time to expire the entry after added to cache"
        }
      },
      "name": "Cache"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HALCAudioLevelAdjustementProperties": {
      "properties": {
        "alcGain": {
          "type": "integer",
          "format": "int32",
          "description": "Volume gain (in dB) before ALC"
        },
        "alcMode": {
          "type": "string",
          "description": "ALC mode",
          "enum": [
            "e_ATSC_A85",
            "e_EBU_R128",
            "e_A_WEIGHTING"
          ]
        },
        "alcPreset": {
          "type": "string",
          "description": "ALC preset",
          "enum": [
            "e_SOFT",
            "e_MEDIUM",
            "e_HARD"
          ]
        }
      },
      "name": "HALCAudioLevelAdjustementProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.TranscodingParameters": {
      "properties": {
        "transcodingProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "TranscodingParameters"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$ProxyBufferSettings": {
      "required": [
        "proxyBufferSizeInKB"
      ],
      "properties": {
        "proxyBufferSizeInKB": {
          "type": "integer",
          "format": "int32",
          "description": "The size of per-connection buffer for buffering response from proxy upstream to client. Must be multiple of 4, from 12 to 224."
        }
      },
      "name": "ProxyBufferSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.streamFiltering.video.bitrate.EsBitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "Max bitrate in bps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "Min bitrate in bps"
        }
      },
      "name": "EsBitrateRange"
    },
    "com.harmonicinc.vos.app.configure.model.lsm.LSM": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of a LSM endpoint in UUID format"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address of a LSM endpoint"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Network interface IP network address for connecting to LSM"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP port of a LSM endpoint"
        },
        "name": {
          "type": "string",
          "description": "Display name of a LSM endpoint"
        }
      },
      "name": "LSM"
    },
    "com.harmonicinc.vos.mux.model.tslevel.DvbSisDsaSecondaryInput": {
      "required": [
        "inputId",
        "sisProgramNumber"
      ],
      "properties": {
        "inputId": {
          "type": "string",
          "description": "uuid of the input secondary signal"
        },
        "sisProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "sis service program number"
        }
      },
      "name": "DvbSisDsaSecondaryInput"
    },
    "com.harmonicinc.vos.app.configure.model.ResourceRequirements": {
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double",
          "description": "Number of CPU cores or units of virtual CPU"
        },
        "memory": {
          "type": "number",
          "format": "double",
          "description": "Memory in MiB"
        }
      },
      "name": "ResourceRequirements"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestBlobServerInstance": {
      "properties": {
        "accountKey": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "RestBlobServerInstance"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutCaptionServiceDescriptor": {
      "properties": {
        "captionServiceDescriptorData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutCaptionServiceDescriptorData"
          }
        }
      },
      "name": "PlayoutCaptionServiceDescriptor"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting": {
      "properties": {
        "key": {
          "type": "string"
        },
        "method": {
          "type": "string",
          "enum": [
            "AES_128",
            "AES_192",
            "AES_256",
            "NO_ENCRYPTION"
          ]
        }
      },
      "name": "CryptoSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties$MultiscreenData": {
      "properties": {
        "dataMaxBitrate": {
          "type": "integer",
          "format": "int32"
        },
        "descriptorMode": {
          "type": "string",
          "description": "Reserved",
          "enum": [
            "e_LEGACY",
            "e_MANUAL",
            "e_DYNAMIC_PASSTHROUGH"
          ]
        },
        "dpiProcessingProperties": {
          "description": "properties for SCTE35 processing options ",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DpiProcessingProperties"
        },
        "enableDvbSubtitleBurnIn": {
          "type": "boolean",
          "description": "Enable DVB Subtitle BurnIn"
        },
        "enableTtmlToDvbConversion": {
          "type": "boolean",
          "description": "Enable TTML to DVB Subtitle conversion"
        },
        "maxBitRate": {
          "type": "integer",
          "format": "int32",
          "description": "Max Bitrate of the data"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the data"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 582 (or higher) if not defined in source grooming (non-TS source for example). Any other value is not recommended and will behave as -1 in current version."
        },
        "scte27ToDvbSubtitleConversionProperties": {
          "description": "properties related to SCTE27 to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Scte27ToDvbSubtitleConversionProperties"
        },
        "sourceLabel": {
          "type": "string",
          "description": "(Deprecrated) Label of the source stream to be processed"
        },
        "sourceLabels": {
          "type": "array",
          "description": "List of label of the source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of data",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        },
        "teletextToDvbSubtitleConversionProperties": {
          "description": "properties related to teletext to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.TeletextToDvbSubtitleConversionProperties"
        },
        "teletextToTtmlConversionProperties": {
          "description": "properties related to teletext to ttml conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.TeletextToTtmlConversionProperties"
        },
        "ttmlToDvbSubtitleConversionProperties": {
          "description": "properties related to ttml to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.TtmlToDvbSubtitleConversionProperties"
        },
        "videoKeyList": {
          "type": "array",
          "description": "Video key list to match the selected videos",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "MultiscreenData"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestS3ServerInstance": {
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "bucketPrefix": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "region": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        }
      },
      "name": "RestS3ServerInstance"
    },
    "com.harmonicinc.vos.mux.model.componentlevel.OutputComponentScramblingParameters": {
      "required": [
        "scramblingGroup"
      ],
      "properties": {
        "scramblingGroup": {
          "type": "string",
          "description": "scrambling group"
        }
      },
      "name": "OutputComponentScramblingParameters"
    },
    "com.harmonicinc.vos.app.configure.model.source.DataGrooming": {
      "properties": {
        "ccConversionMode": {
          "type": "string",
          "description": "Prefered Closed Caption type",
          "enum": [
            "AUTO",
            "EIA608",
            "CEA708"
          ]
        },
        "st2038Tracks": {
          "type": "array",
          "description": "ANC data tracks in ST-2038 PID",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.St2038Track"
          }
        },
        "teletextSubtitleMode": {
          "type": "string",
          "description": "Teletext subtitle parsing mode",
          "enum": [
            "EBU_TELETEXT",
            "CAVENA_P31"
          ]
        },
        "tracks": {
          "type": "array",
          "description": "Essential metadata of data tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DataTrack"
          }
        }
      },
      "name": "DataGrooming"
    },
    "com.harmonicinc.vos.mux.monitor.model.triveni.TriveniTable": {
      "properties": {
        "maximumInterval": {
          "type": "integer",
          "format": "int32"
        },
        "nextVersionFlag": {
          "type": "boolean"
        },
        "pid": {
          "type": "integer",
          "format": "int32"
        },
        "receptionDate": {
          "type": "string"
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.triveni.Section"
          }
        },
        "tid": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "TriveniTable"
    },
    "com.harmonicinc.vos.labwizard.rest.model.RtmpPackagingProperties": {
      "properties": {
        "lbaMode": {
          "type": "boolean",
          "description": "Activate Late Binding Audio"
        },
        "psvpAudioLanguage": {
          "type": "string",
          "description": "Audio Language to select audio stream"
        },
        "psvpAudioMaxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Audio Max Bit Rate to select audio stream"
        },
        "psvpVideoMaxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Video Max Bit Rate to select video profile"
        },
        "publishSingleVideoProfile": {
          "type": "boolean",
          "description": "Activate Publish Single Video Profile"
        },
        "reconnInterval": {
          "type": "integer",
          "format": "int32",
          "description": "The reconnection interval (expressed in milli seconds)."
        },
        "userAgent": {
          "type": "string",
          "description": "User agent (i.e. flash version)"
        }
      },
      "name": "RtmpPackagingProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DvbSubtitlingDescriptorData": {
      "required": [
        "ancillaryPageId",
        "compositionPageId",
        "language",
        "subtitlingType"
      ],
      "properties": {
        "ancillaryPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Ancillary PageId of DVB data stream"
        },
        "compositionPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Composition PageId of DVB data stream"
        },
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "subtitlingType": {
          "type": "integer",
          "format": "int32",
          "description": "Subtitling Type of DVB data stream"
        }
      },
      "name": "DvbSubtitlingDescriptorData"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkChannelStatus": {
      "required": [
        "id",
        "uplinkEventReportingList",
        "uplinkInputStatusList"
      ],
      "properties": {
        "downlinkOutputStatusList": {
          "type": "array",
          "description": "Status of the downlink output.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.DownlinkOutputStatus"
          }
        },
        "id": {
          "type": "string",
          "description": "Id of the uplinkChannel"
        },
        "uplinkEventReportingList": {
          "type": "array",
          "description": "Event reports of uplink channel",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkEventReporting"
          }
        },
        "uplinkInputStatusList": {
          "type": "array",
          "description": "Status of the uplink input.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkInputStatus"
          }
        }
      },
      "name": "UplinkChannelStatus"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DolbyAC4Properties": {
      "required": [
        "ac4BitrateMode",
        "dolbyAC4ChannelMode"
      ],
      "properties": {
        "ac4BitrateMode": {
          "type": "string",
          "description": "Ac4 Bitrate mode",
          "enum": [
            "AC4_CBR",
            "AC4_ABR",
            "AC4_VBR"
          ]
        },
        "dolbyAC4ChannelMode": {
          "type": "string",
          "description": "Ac4 Channel Mode",
          "enum": [
            "AC4_CHMOD_MONO",
            "AC4_CHMOD_STEREO",
            "AC4_CHMOD_3_0",
            "AC4_CHMOD_5_0",
            "AC4_CHMOD_5_1",
            "AC4_CHMOD_7_0_340",
            "AC4_CHMOD_7_1_340_1",
            "AC4_CHMOD_7_0_520",
            "AC4_CHMOD_7_1_520_1",
            "AC4_CHMOD_7_0_322",
            "AC4_CHMOD_7_1_322_1",
            "AC4_CHMOD_7_0_4",
            "AC4_CHMOD_7_1_4"
          ]
        }
      },
      "name": "DolbyAC4Properties"
    },
    "com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$BitrateRange": {
      "properties": {
        "esBitrateRange": {
          "description": "Filtering DASH/SS bitrate - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$BitrateRange$StreamBitrateRange"
        },
        "exclude": {
          "type": "boolean"
        },
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int64",
          "description": "(Deprecrated) Settings of max bitrate in bps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int64",
          "description": "(Deprecrated) Settings of min bitrate in bps"
        },
        "tsBitrateRange": {
          "description": "Filtering HLS bitrate - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$BitrateRange$StreamBitrateRange"
        }
      },
      "name": "BitrateRange"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestFileServerSetup": {
      "properties": {
        "blobInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestBlobServerInstance"
          }
        },
        "ftpInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestFtpServerInstance"
          }
        },
        "gcsInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestGcsServerInstance"
          }
        },
        "id": {
          "type": "string"
        },
        "mediaGridInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestMediaGridServerInstance"
          }
        },
        "nfsInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestNfsServerInstance"
          }
        },
        "overwrite": {
          "type": "boolean"
        },
        "ownership": {
          "type": "string",
          "enum": [
            "User",
            "Harmonic"
          ]
        },
        "retries": {
          "type": "integer",
          "format": "int32"
        },
        "s3Instances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestS3ServerInstance"
          }
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "SFTP",
            "NFS",
            "BLOB",
            "S3",
            "MEDIAGRID",
            "GCS"
          ]
        }
      },
      "name": "RestFileServerSetup"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.PidStatistics": {
      "required": [
        "carryPCR",
        "ccErrorCount",
        "packetCount",
        "pid",
        "pidType"
      ],
      "properties": {
        "carryPCR": {
          "type": "boolean",
          "description": "Carry PCR"
        },
        "ccErrorCount": {
          "type": "integer",
          "format": "int32",
          "description": "CCError count"
        },
        "packetCount": {
          "type": "integer",
          "format": "int32",
          "description": "Count of packets"
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "TS Pid"
        },
        "pidType": {
          "type": "string",
          "description": "Pid Type",
          "enum": [
            "PIDTYPE_UNKNOWN",
            "PIDTYPE_PSI",
            "PIDTYPE_VIDEO",
            "PIDTYPE_AUDIO",
            "PIDTYPE_SCTE35",
            "PIDTYPE_SUBTITLE",
            "PIDTYPE_PAT",
            "PIDTYPE_PMT",
            "PIDTYPE_CAT"
          ]
        }
      },
      "name": "PidStatistics"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AribAudioModeChange": {
      "properties": {
        "aribAmcList": {
          "description": "Arib AMC List for VANC input",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AribAmcList"
        },
        "backupPair": {
          "type": "string",
          "description": "Fallback pair",
          "enum": [
            "e_None",
            "e_G1P1",
            "e_G1P2"
          ]
        },
        "enableAudioMode": {
          "type": "boolean",
          "description": "Enable aribAmcList"
        },
        "es2ExBackToLeadPair": {
          "type": "string",
          "description": "LeadPair used for Es2 and Es2_Ex",
          "enum": [
            "e_None",
            "e_G1P2",
            "e_G2P2"
          ]
        },
        "secondBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Override Bitrate in case of ES_1"
        },
        "vancModeChange": {
          "type": "string",
          "description": "Arib Vanc Audio Mode change",
          "enum": [
            "e_None",
            "e_ES1",
            "e_ES2",
            "e_ES2_Extended"
          ]
        }
      },
      "name": "AribAudioModeChange"
    },
    "java.util.CollectionOfcom.harmonicinc.vos.app.uplink.hub.benchmark.TestReceiver": {
      "type": "object",
      "name": "CollectionOfTestReceiver"
    },
    "com.harmonicinc.vos.asset.acquisition.model.GroomingProfile": {
      "properties": {
        "audioGrooming": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.AudioGrooming"
        },
        "groomingFileType": {
          "type": "string",
          "enum": [
            "MXF",
            "TS",
            "MP4",
            "MOV",
            "AUDIO_COMPRESSED",
            "AUDIO_UNCOMPRESSED"
          ]
        },
        "groomingMode": {
          "type": "string",
          "enum": [
            "UPDATE",
            "OVERRIDE"
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subtitlesGrooming": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.SubtitlesGrooming"
        }
      },
      "name": "GroomingProfile"
    },
    "com.harmonicinc.vos.labwizard.rest.model.FtOutput": {
      "properties": {
        "audioStreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.FtAudioStream"
          }
        },
        "commonSettings": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.FtCommonSettings"
        },
        "videoSettings": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.FtVideoSettings"
        }
      },
      "name": "FtOutput"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.ResourceConfig": {
      "properties": {
        "asset-operator": {
          "description": "Explicit resource config for asset-operator, set to null for automatic",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ContainerResourceConfig"
        },
        "indexer": {
          "description": "Explicit resource config for LLCU and VOD indexer, set to null for automatic",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ContainerResourceConfig"
        },
        "media-delivery-server": {
          "description": "Explicit resource config for media-delivery-server, set to null for automatic",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ContainerResourceConfig"
        },
        "potf-server": {
          "description": "Explicit resource config for potf server, set to null for automatic",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ContainerResourceConfig"
        },
        "retention-worker": {
          "description": "Explicit resource config for retention-worker, set to null for automatic",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ContainerResourceConfig"
        }
      },
      "name": "ResourceConfig"
    },
    "com.harmonicinc.vos.app.configure.model.DescramblingKeys": {
      "required": [
        "mode"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Id"
        },
        "injectedId": {
          "type": "string",
          "example": "00112233445566778899aabbccddeeff",
          "description": "Injected Id. Used to decrypt the SW when mode is BISS2 mode E. 32 hexadecimal characters long. If null, the global injected Id is used. On PUT, special value \"******\" means the value is not modified. GET will return this same special value."
        },
        "mode": {
          "type": "string",
          "example": "BISS2_MODE_1",
          "description": "Descrambling mode",
          "enum": [
            "BISS2_MODE_1",
            "BISS2_MODE_E"
          ]
        },
        "swEven": {
          "type": "string",
          "example": "00112233445566778899aabbccddeeff",
          "description": "Session word used to descramble TS packets with transport_scrambling_control set to 10. Clear if mode is BISS2 mode 1, encrypted if mode is BISS2 mode E. 32 hexadecimal characters long. On PUT, special value \"******\" means the value is not modified. GET will return this same special value."
        },
        "swOdd": {
          "type": "string",
          "example": "00112233445566778899aabbccddeeff",
          "description": "Session word used to descramble TS packets with transport_scrambling_control set to 11. Clear if mode is BISS2 mode 1, encrypted if mode is BISS2 mode E. 32 hexadecimal characters long. On PUT, special value \"******\" means the value is not modified. GET will return this same special value."
        }
      },
      "name": "DescramblingKeys"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerAssetDetails": {
      "properties": {
        "inputAssets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerInputAssetDetails"
          }
        },
        "vodTitleId": {
          "type": "string"
        }
      },
      "name": "FileServerAssetDetails"
    },
    "com.harmonicinc.vos.app.configure.model.source.SrtInput": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "cloudlinkGroupId": {
          "type": "string",
          "description": "Identifier of Cloudlink group the source originates from."
        },
        "connectionMode": {
          "type": "string",
          "description": "SRT connetion establishing mode",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "descramblingKey": {
          "type": "string",
          "description": "CSA key to descramble input"
        },
        "descramblingRequired": {
          "type": "boolean",
          "description": "Whether input requires descrambling"
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Local interface for outgoing connections"
        },
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency, specified for Srt"
        },
        "pathRedundancyMode": {
          "type": "string",
          "description": "Path redundancy mode",
          "enum": [
            "SRT_SOCKET_GROUP",
            "ST_2022_7"
          ]
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "seamlessInputSwitching": {
          "type": "boolean",
          "description": "Enable seamless input switching for input redundancy. Default: false"
        },
        "sourceAddr": {
          "type": "string",
          "description": "UDP address used to fetch input on Cloudlink RT"
        },
        "sourcePort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to fetch input on Cloudlink RT"
        },
        "sourcePortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port range end used to fetch mbts input"
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "srtConnectionSettings": {
          "type": "array",
          "description": "SRT connection setting list",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtConnectionSettings"
          }
        },
        "ssmIpAddrs": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        },
        "st20227DelayBufferInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Buffer delay for reordering RTP packet",
          "minimum": 0,
          "maximum": 200
        },
        "tsProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the number of programs in the input TS"
        }
      },
      "name": "SrtInput"
    },
    "com.harmonicinc.vos.labwizard.rest.model.hlsCustomization.IndexPlaylistCustomization": {
      "properties": {
        "extXVersionTagValue": {
          "type": "integer",
          "format": "int32",
          "description": "EXT-X-VERSION tag value: \r\n -1: default, will set automatic \r\n 0: do not insert EXT-X-VERSION tag to the playlist \r\n 2 and more - version number"
        }
      },
      "name": "IndexPlaylistCustomization"
    },
    "com.harmonicinc.vos.app.configure.model.service.ESAM_ServiceSetting": {
      "properties": {
        "acquisitionPointId": {
          "type": "string",
          "description": "Used to map Signal Aquisition System element to this video service"
        },
        "passthroughOnInBandDisabled": {
          "type": "boolean",
          "description": "Enable pass-through of input SCTE35 when in-band ESAM is disabled"
        },
        "poisEndpoint": {
          "type": "string",
          "description": "POIS endpoint URL. If not specified, the default POIS endpoint configured in global service settings will be used."
        },
        "poisNotifyOnlyMode": {
          "type": "boolean",
          "description": "Enable the use of ESAM POIS Notify Only mode"
        },
        "timecodeReference": {
          "type": "boolean",
          "description": "Enable the use of timecode reference for the UTC date in ESAM in-band and OOB messages. The input stream shall contain an UTC-based timecode."
        },
        "tlsKeyId": {
          "type": "string",
          "description": "TLS Key ID to be used to communicate with ESAM POIS"
        },
        "utcTimeOffset": {
          "type": "integer",
          "format": "int32",
          "description": "UTC Time Offset to be added to ESAM OOB messages"
        }
      },
      "name": "ESAM_ServiceSetting"
    },
    "com.harmonicinc.vos.app.configure.model.source.HarmonicUplinkSetting": {
      "required": [
        "ipAddress"
      ],
      "properties": {
        "descramblingKey": {
          "type": "string",
          "description": "CSA key to descramble input"
        },
        "descramblingRequired": {
          "type": "boolean",
          "description": "Whether input requires descrambling"
        },
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive the input. IPv4 and IPv6 are supported"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive the input"
        },
        "ipPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port range end used to receive input"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        },
        "uplinkGroupId": {
          "type": "string",
          "description": "Unique identifier of the uplink Group"
        },
        "uplinkId": {
          "type": "string",
          "description": "[Obsoleted]Unique identifier of the uplink"
        }
      },
      "name": "HarmonicUplinkSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ISO639Descriptor": {
      "required": [
        "iso639DescriptorData"
      ],
      "properties": {
        "iso639DescriptorData": {
          "type": "array",
          "description": "Data of ISO639 Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ISO639DescriptorData"
          }
        }
      },
      "name": "ISO639Descriptor"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedDashResource": {
      "properties": {
        "dashDrm": {
          "description": "The dashDrm of DrmFixedDashResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedDashResource$DashDrm"
        },
        "dashDrms": {
          "type": "array",
          "description": "The dashDrm list of DrmFixedDashResource",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedDashResource$DashDrm"
          }
        },
        "fixedIv": {
          "type": "string",
          "description": "The fixedIv of DrmFixedDashResource"
        },
        "fixedKey": {
          "type": "string",
          "description": "The fixedKey of DrmFixedDashResource"
        },
        "fixedKeyId": {
          "type": "string",
          "description": "The fixedKeyId of DrmFixedDashResource"
        },
        "resourceId": {
          "type": "string",
          "description": "The resourceId of DrmFixedDashResource"
        }
      },
      "name": "DrmFixedDashResource"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.DefaultManifestFilteringSettings": {
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "mmpProfileId": {
          "type": "string"
        }
      },
      "name": "DefaultManifestFilteringSettings"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkEventReporting": {
      "required": [
        "eventMessage",
        "eventType",
        "reportId",
        "time"
      ],
      "properties": {
        "eventMessage": {
          "type": "string",
          "description": "The event message happened"
        },
        "eventType": {
          "type": "string",
          "description": "Type of the event report"
        },
        "notificationPropertiesMap": {
          "type": "object",
          "description": "The collection which contains notification properties",
          "additionalProperties": {
            "type": "string"
          }
        },
        "reportId": {
          "type": "string",
          "description": "Id of the event report"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic e.g. 2015-11-04T09:11:33Z"
        }
      },
      "name": "UplinkEventReporting"
    },
    "com.harmonicinc.vos.mux.monitor.model.sdi.MonitorSdiPort": {
      "required": [
        "cardNumber",
        "clockReference",
        "genlockVideoStandard",
        "portNumber",
        "portUsage",
        "syncStatus"
      ],
      "properties": {
        "cardNumber": {
          "type": "integer",
          "format": "int32",
          "description": "SDI card number",
          "minimum": 0,
          "maximum": 2
        },
        "clockReference": {
          "type": "string",
          "description": "The Genlock reference used to pace the SDI output",
          "enum": [
            "INVALID",
            "INTERNAL_REF",
            "EXTERNAL_GENLOCK"
          ]
        },
        "genlockVideoStandard": {
          "type": "string",
          "description": "The external Genlock video standard detected on the genlock port (SDI output)"
        },
        "portNumber": {
          "type": "integer",
          "format": "int32",
          "description": "SDI port number",
          "minimum": 0,
          "maximum": 7
        },
        "portUsage": {
          "type": "string",
          "description": "The current port usage. ASIin, ASIout are not supported yet. Unused replaces them for now.",
          "enum": [
            "SDI_IN",
            "SDI_OUT",
            "ASI_IN",
            "ASI_OUT",
            "UNUSED"
          ]
        },
        "sourceFormat": {
          "description": "The source format, including resolution, framerate and framemode",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.sdi.SourceFormat"
        },
        "syncStatus": {
          "type": "string",
          "description": "The Sync status for SDI input and output",
          "enum": [
            "LOCKED",
            "UNLOCKED"
          ]
        }
      },
      "name": "MonitorSdiPort"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.ServiceStatus": {
      "properties": {
        "activeInputRankIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Indicate the current active input index for this source (possible input redundancy), values: 1 or 2."
        },
        "inputStatus": {
          "type": "array",
          "description": "Input status list associated to this service",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.livesourcemonitoring.InputStatus"
          }
        },
        "serviceId": {
          "type": "string",
          "description": "Service Id"
        }
      },
      "name": "ServiceStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.LogoAddon": {
      "required": [
        "imageId"
      ],
      "properties": {
        "groupMode": {
          "type": "boolean",
          "description": "Indicate the logo mode : groups, or single logo for all the profiles"
        },
        "horizontalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Horizontal offset relative to placement in pixel"
        },
        "hourlySchedule": {
          "type": "array",
          "description": "The schedule to insert logo periodically for each hour",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.HourlyLogoInsertionEvent"
          }
        },
        "imageId": {
          "type": "string",
          "description": "Id of an image in the system"
        },
        "logosList": {
          "type": "array",
          "description": "List of logos to be inserted",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.LogoAddon$LogoForLogosList"
          }
        },
        "logosListForGroupMode": {
          "type": "array",
          "description": "logo used for the mode group",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.LogoAddon$LogoForGroupMode"
          }
        },
        "placement": {
          "type": "string",
          "description": "Image placement",
          "enum": [
            "BOTTOM_LEFT",
            "BOTTOM_RIGHT",
            "TOP_LEFT",
            "TOP_RIGHT"
          ]
        },
        "verticalOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Vertical offset relative to placement in pixel"
        }
      },
      "name": "LogoAddon"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$LogShipperResource": {
      "properties": {
        "cpu": {
          "description": "Number of virtual CPU cores",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$ResourceValue"
        },
        "memInMB": {
          "description": "Memory in MiB",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$ResourceValue"
        }
      },
      "name": "LogShipperResource"
    },
    "com.harmonicinc.vos.app.configure.model.service.SynamediaWatermarkAddon": {
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Specify channel ID for a specific stream"
        },
        "watermarkType": {
          "type": "string",
          "description": "Get watermark type for synamedia watermark",
          "enum": [
            "e_WATERMARKING",
            "e_SEI_INSERTION"
          ]
        }
      },
      "name": "SynamediaWatermarkAddon"
    },
    "com.harmonicinc.vos.labwizard.rest.model.Mpeg1L2ProfileProperties": {
      "properties": {
        "transportStream": {
          "type": "string",
          "description": " Transport Stream type ",
          "enum": [
            "e_MPEG1",
            "e_MPEG2"
          ]
        }
      },
      "name": "Mpeg1L2ProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestDrmSettings": {
      "properties": {
        "destinationProfileID": {
          "type": "string"
        },
        "drmSystemSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestDrmSystemSettings"
          }
        },
        "encryptionEnabled": {
          "type": "boolean"
        }
      },
      "name": "RestDrmSettings"
    },
    "com.harmonicinc.vos.labwizard.rest.model.TeletextDescriptor": {
      "required": [
        "teletextDescriptorData"
      ],
      "properties": {
        "teletextDescriptorData": {
          "type": "array",
          "description": "Data of Teletext Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.TeletextDescriptorData"
          }
        }
      },
      "name": "TeletextDescriptor"
    },
    "com.harmonicinc.vos.labwizard.rest.model.NagraNglmWatermarkProperties": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Nagra NexGuard watermark customer ID (64-bit hexadecimal string)"
        },
        "preset": {
          "type": "string",
          "description": "Nagra NexGuard watermark preset",
          "enum": [
            "e_OTT_1",
            "e_OTT_2"
          ]
        },
        "strength": {
          "type": "string",
          "description": "Nagra NexGuard watermark strength",
          "enum": [
            "e_LIGHTEST",
            "e_LIGHTER",
            "e_DEFAULT",
            "e_STRONGER",
            "e_STRONGEST"
          ]
        }
      },
      "name": "NagraNglmWatermarkProperties"
    },
    "com.harmonicinc.vos.app.atm.rest.model.ContentGenerationChannel": {
      "properties": {
        "channelName": {
          "type": "string",
          "description": "The channel name of the variant channel. Must be unique. "
        },
        "contentSegmentDeliveryPrefix": {
          "description": "Delivery prefixes for origin contents",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$DeliveryPrefix"
        },
        "defaultBlackoutManifests": {
          "type": "object",
          "description": "The manifest URL of default blackout for different packaging type",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deliveryMode": {
          "type": "string",
          "description": "Delivery mode. If the value is null or DEFAULT, RELATIVE for VCM and RELATIVE_MASTER for PMM. Options: DEFAULT, RELATIVE_MASTER, ABSOLUTE, ABSOLUTE_MASTER, RELATIVE",
          "enum": [
            "DEFAULT",
            "ABSOLUTE",
            "ABSOLUTE_MASTER",
            "RELATIVE",
            "RELATIVE_MASTER"
          ]
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "DVR Window Size in Seconds."
        },
        "enableDeltaUpdate": {
          "type": "boolean",
          "description": "Enable delta update of manipulated manifests."
        },
        "enableIFrame": {
          "type": "boolean",
          "description": "True when enable IFrame stream in the resulting manifests. Supported for HLS only."
        },
        "enableImageStream": {
          "type": "boolean",
          "description": "True when enable image stream in the resulting manifests. Supported for HLS only."
        },
        "enableSCTE35Signal": {
          "type": "boolean",
          "description": "True when including SCTE35 signals in the resulting manifests."
        },
        "enableSubtitle": {
          "type": "boolean",
          "description": "True when stitching the subtitle into the resulting manifests. Supported for HLS only."
        },
        "manifestVariantDeliveryPrefix": {
          "type": "string",
          "description": "Delivery prefixes for HLS master variant URL"
        },
        "mediaID": {
          "type": "string",
          "description": "The SCTE224 Media ID"
        },
        "segmentDeliveryPrefix": {
          "type": "object",
          "description": "Delivery prefixes for origin contents",
          "additionalProperties": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.VariantChannelDeliveryPrefix$SegmentDeliveryPrefix"
          }
        }
      },
      "name": "ContentGenerationChannel"
    },
    "com.harmonicinc.vos.labwizard.rest.model.BandwidthTune": {
      "properties": {
        "averageBandwidthDeviation": {
          "type": "integer",
          "format": "int32",
          "description": "averageBandwidthDeviation",
          "minimum": -100,
          "maximum": 100
        },
        "bandwidthDeviation": {
          "type": "integer",
          "format": "int32",
          "description": "bandwidthDeviation",
          "minimum": -100,
          "maximum": 100
        }
      },
      "name": "BandwidthTune"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.rest.drm.PerPackageDrmSystemId": {
      "required": [
        "drmSystemId",
        "publishName"
      ],
      "properties": {
        "drmSystemId": {
          "type": "string",
          "description": "DRM system ID"
        },
        "publishName": {
          "type": "string",
          "description": "Package publish name"
        }
      },
      "name": "PerPackageDrmSystemId"
    },
    "com.harmonicinc.vos.app.configure.model.destination.CloudOutputSettings": {
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Cloud channel id"
        },
        "channelName": {
          "type": "string",
          "description": "Cloud channel name"
        },
        "pipeId": {
          "type": "string",
          "description": "Pipe id"
        },
        "pipeState": {
          "type": "string",
          "description": "LrsPipe state",
          "enum": [
            "OFFLINE",
            "RUNNING",
            "UNKNOWN"
          ]
        },
        "protocol": {
          "type": "string",
          "description": "Protocol"
        },
        "region": {
          "type": "string",
          "description": "Region"
        },
        "regionDisplayName": {
          "type": "string",
          "description": "Region display name"
        },
        "srtCloudOutputSettings": {
          "description": "Cloud srt connection settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.SrtCloudOutputSettings"
        },
        "streamCount": {
          "type": "integer",
          "format": "int32",
          "description": "StreamCount"
        }
      },
      "name": "CloudOutputSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.SdiVideoGrooming": {
      "properties": {
        "afdFallback": {
          "type": "string",
          "description": "AFD Fallback",
          "enum": [
            "e_AFD_LAST_VALID_AFD",
            "e_AFD_16x9_FULL_FRAME_1000",
            "e_AFD_4x3_PILLARBOX_1001",
            "e_AFD_16x9_FULL_FRAME_PROTECTED_1010",
            "e_AFD_14x9_PILLARBOX_1011",
            "e_AFD_4x3_PILLARBOX_ALT_14x9_CENTER_1101",
            "e_AFD_16x9_FULL_FRAME_ALT_14x9_CENTER_1110",
            "e_AFD_16x9_FULL_FRAME_ALT_4x3_CENTER_1111"
          ]
        },
        "croppingSettings": {
          "description": "Specifies the region of the video to crop",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CroppingSettings"
        },
        "enableRfd": {
          "type": "boolean",
          "description": "Enable/disable RFD - Repeat Field Detection"
        },
        "frameMode": {
          "type": "string",
          "description": "Specify the frame mode of input video",
          "enum": [
            "PROGRESSIVE",
            "INTERLACED"
          ]
        },
        "frameRate": {
          "description": "Discovered frameRate of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.FrameRate"
        },
        "hasAmolLine": {
          "type": "boolean",
          "description": "Specifies the removal of AMOL or WSS line from the source video"
        },
        "imageCompression": {
          "type": "string",
          "description": "Image Compression format for input video",
          "enum": [
            "LLVC",
            "NONE",
            "TICO",
            "JPEGXS"
          ]
        },
        "initialLastValidDisplayRangeAspectRatio": {
          "type": "string",
          "description": "The value that the datapath initializes fallback property Last Valid Display Range Aspect Ratio with",
          "enum": [
            "AR_4x3",
            "AR_16x9"
          ]
        },
        "initialLastValidVideoAspectRatio": {
          "type": "string",
          "description": "The value that the datapath initializes fallback property Last Valid Video Aspect Ratio with",
          "enum": [
            "AR_4x3",
            "AR_16x9"
          ]
        },
        "inputAspectRatio": {
          "type": "string",
          "description": "InputAspectRatio of video",
          "enum": [
            "e_AUTO",
            "e_AR_AUTO_FALLBACK_4_3",
            "e_AR_AUTO_FALLBACK_16_9",
            "e_AR_4_3",
            "e_AR_16_9"
          ]
        },
        "inputColour": {
          "type": "string",
          "description": "SDI input colour space signaling if null then auto-detect",
          "enum": [
            "e_AUTO_DETECT",
            "e_BT601_SDR",
            "e_BT_709_SDR",
            "e_BT_709_HLG",
            "e_BT_2020_SDR",
            "e_BT_2020_HLG",
            "e_BT_2020_HDR10"
          ]
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of video",
          "items": {
            "type": "string"
          }
        },
        "resolution": {
          "description": "Discovered resolution of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Resolution"
        },
        "sdiCaptionServiceDescriptor": {
          "description": "Caption Service Descriptor",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.SdiCaptionServiceDescriptor"
        },
        "smpte2110VideoStreamProperties": {
          "description": "Describe 2110 video stream specific properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte2110VideoStreamProperties"
        },
        "videoActiveRegionSignaling": {
          "type": "string",
          "description": "Specifies the source video active region signaling scheme.",
          "enum": [
            "NONE",
            "FULL_VI_AFD",
            "WSS",
            "AFD_IN_WSS",
            "AFD_BAR_SMPTE_2016"
          ]
        },
        "videoNoiseReduction": {
          "type": "string",
          "description": "Specifies noise reduction",
          "enum": [
            "DISABLED",
            "AUTO_DETECT",
            "MODERATE",
            "STRONG"
          ]
        }
      },
      "name": "SdiVideoGrooming"
    },
    "com.harmonicinc.vos.app.configure.model.service.CaptionsAddon": {
      "properties": {
        "captionsInfo": {
          "type": "array",
          "description": "List of caption info",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.CaptionsAddon$CaptionsInfo"
          }
        }
      },
      "name": "CaptionsAddon"
    },
    "com.harmonicinc.vos.app.configure.model.destination.SDI_Output": {
      "properties": {
        "card": {
          "type": "integer",
          "format": "int32",
          "description": "card index, specify which SDI card will be used to output the stream"
        },
        "gpio": {
          "description": "manage the GPIO output feature",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.GpioOutput"
        },
        "muteOutputOnSignalLoss": {
          "type": "boolean",
          "description": "mute the SDI output when the input is lost"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "port index, specify which physical port present on the SDI card will be used to output the stream."
        }
      },
      "name": "SDI_Output"
    },
    "com.harmonicinc.vos.asset.acquisition.model.StorageStatistics": {
      "properties": {
        "internalStorageUsedInBytes": {
          "type": "integer",
          "format": "int64"
        },
        "localAssetStorageInBytes": {
          "type": "integer",
          "format": "int64"
        },
        "loopRecordStorageUsedInBytes": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "StorageStatistics"
    },
    "com.harmonicinc.vos.labwizard.rest.model.PnBasedScheme": {
      "required": [
        "addend",
        "pnFactor"
      ],
      "properties": {
        "addend": {
          "type": "integer",
          "format": "int32",
          "description": "addend"
        },
        "pnFactor": {
          "type": "integer",
          "format": "int32",
          "description": "Program Number factor"
        }
      },
      "name": "PnBasedScheme"
    },
    "com.harmonicinc.vos.labwizard.rest.model.CustomDescriptor": {
      "required": [
        "descriptorContent",
        "descriptorTag"
      ],
      "properties": {
        "descriptorContent": {
          "type": "string",
          "description": "Content of descriptor represented in HEX string"
        },
        "descriptorTag": {
          "type": "integer",
          "format": "int32",
          "description": "Tag of descriptor"
        }
      },
      "name": "CustomDescriptor"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.PreviewInfo": {
      "properties": {
        "format": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "name": "PreviewInfo"
    },
    "com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties$VideoStreamSelectionItem$HorizontalResolutionRange": {
      "properties": {
        "maxHorizontalResolution": {
          "type": "integer",
          "format": "int32"
        },
        "minHorizontalResolution": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "HorizontalResolutionRange"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequenceSinglePrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "eventType": {
          "type": "string",
          "description": "Event type, File (including recorded file) or Live",
          "enum": [
            "FILE",
            "LIVE",
            "COMMENT"
          ]
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "previousId": {
          "type": "string"
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        }
      },
      "name": "InsertSequenceSinglePrimaryProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings": {
      "properties": {
        "accessLogToLoki": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig"
        },
        "accessLogToS3": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToS3Config"
        },
        "additionalHeaderConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$AdditionalHeaderConfig"
        },
        "autoScaling": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AutoScalingConfig"
        },
        "cacheSettings": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$CacheSettings"
        },
        "cloudfrontHeader": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$CloudfrontHeader"
        },
        "connectionConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$ConnectionConfig"
        },
        "connectionDrainingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ConnectionDrainingConfig"
        },
        "defaultManifestFilteringSettings": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.DefaultManifestFilteringSettings"
        },
        "edgeAuthConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.EdgeAuthConfig"
        },
        "encryptionConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$EncryptionConfig"
        },
        "g2oAuthConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.G2OAuthConfig"
        },
        "headerAuthConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$HeaderAuthConfig"
        },
        "hideFromLiveContentConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.HideFromLiveContentConfig"
        },
        "httpConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$HttpConfig"
        },
        "llcuIndexingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.LlcuIndexingConfig"
        },
        "loggingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$LoggingConfig"
        },
        "mdsPropertiesConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$MdsPropertiesConfig"
        },
        "mdsProxySettings": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.MdsProxySettings"
        },
        "mdsSchedulingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.MdsSchedulingConfig"
        },
        "ottEgressProxyConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$OttEgressProxyConfig"
        },
        "potfServerConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PotfServerConfig"
        },
        "proxyBufferSettings": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$ProxyBufferSettings"
        },
        "proxyCacheLockSettings": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$ProxyCacheLockSettings"
        },
        "resourceConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ResourceConfig"
        },
        "statisticsReportingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$StatisticsReportingConfig"
        },
        "storageSettings": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.StorageSettings"
        }
      },
      "name": "OriginSettings"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalScte35Setting": {
      "properties": {
        "enableScte104Server": {
          "type": "boolean",
          "description": "Set to true/false to enable/disable the use of SCTE-104 server"
        },
        "enableScte35AdaptationFieldStuffing": {
          "type": "boolean",
          "description": "Set to true/false to enable/disable the use of adaptation field stuffing in SCTE35 output"
        },
        "scte104ServerSetting": {
          "description": "Settings for SCTE-104 server",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.Scte104ServerSetting"
        }
      },
      "name": "GlobalScte35Setting"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$ConnectionConfig": {
      "properties": {
        "workerConnections": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "ConnectionConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.model.DecisionTemplate": {
      "properties": {
        "aodTranscodingProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groomingProfileIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "string",
          "enum": [
            "URGENT",
            "RUSH",
            "NORMAL",
            "BACKLOG"
          ]
        },
        "transcodingProfiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transcodingProfilesMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        }
      },
      "name": "DecisionTemplate"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DVB_SubtitlingDescriptorData": {
      "required": [
        "ancillaryPageId",
        "compositionPageId",
        "language",
        "subtitlingType"
      ],
      "properties": {
        "ancillaryPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Ancillary PageId of DVB data stream"
        },
        "compositionPageId": {
          "type": "integer",
          "format": "int32",
          "description": "Composition PageId of DVB data stream"
        },
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "subtitlingType": {
          "type": "integer",
          "format": "int32",
          "description": "Subtitling Type of DVB data stream"
        }
      },
      "name": "DVB_SubtitlingDescriptorData"
    },
    "com.harmonicinc.vos.app.configure.model.service.SourceSwitchSetting": {
      "properties": {
        "esamSourceSwitchSetting": {
          "description": "The setting for ESAM source switch trigger mode",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.EsamSourceSwitchSetting"
        },
        "inactiveSourceHandling": {
          "type": "string",
          "description": "Specify the mode to stop decoding the inactive source for source redundancy service. Default is 'e_AUTO' - Fully decode both sources",
          "enum": [
            "e_AUTO",
            "e_FULLY_DECODE",
            "e_NO_RECEIVE"
          ]
        },
        "primaryStableTime": {
          "type": "integer",
          "format": "int32",
          "description": "Specify the time for primary source to be considered stable in seconds, range 60..86400, default 60s. Only applicable when sourceSwitchTrigger is e_PRIMARY_STABLE."
        },
        "sourceSwitchTrigger": {
          "type": "string",
          "description": "Specify the source switch trigger mode of service. ([‘e_SOURCE_FAILURE’, ‘e_ESAM’, ‘e_MANUAL’, ‘e_PRIMARY_STABLE’], default is 'e_SOURCE_FAILURE')",
          "enum": [
            "e_SOURCE_FAILURE",
            "e_ESAM",
            "e_MANUAL",
            "e_PRIMARY_STABLE"
          ]
        },
        "triggerSettings": {
          "description": "CC error trigger settings",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.TriggerSettings"
        }
      },
      "name": "SourceSwitchSetting"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceProperties": {
      "properties": {
        "duration": {
          "type": "string",
          "description": "Total duration of primary events in the sequence"
        },
        "enabled": {
          "type": "boolean",
          "description": "True if the sequence is enabled. A sequence enabled means that it can be inserted in the playlist manually or by a trigger"
        },
        "id": {
          "type": "string",
          "description": "Id of the sequence"
        },
        "name": {
          "type": "string",
          "description": "Name of the sequence"
        },
        "scheduleRef": {
          "type": "string",
          "description": "Start time of the schedule if the sequence has been created from an opc schedule"
        },
        "startTrigger": {
          "type": "string",
          "description": "Name of the trigger that can be used to insert the sequence into the playlist"
        },
        "stopTrigger": {
          "type": "string",
          "description": "Name of the trigger that can be used to stop a sequence"
        },
        "tcDuration": {
          "type": "string",
          "description": "Same to duration, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "type": {
          "type": "string",
          "description": "Type of the sequence: INLINE or OUTLINE",
          "enum": [
            "INLINE",
            "OUTLINE"
          ]
        }
      },
      "name": "SequenceProperties"
    },
    "com.harmonicinc.vos.mux.model.tslevel.TdtParameters": {
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "Input object id (UUID). Relevant for PASSTHROUGH"
        },
        "inputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Input PID number. Relevant for PASSTHROUGH"
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Table interval  (1000 - 30000 milliseconds). Relevant for GENERATE"
        },
        "tdtMode": {
          "type": "string",
          "description": "TDT Mode",
          "enum": [
            "GENERATE",
            "NONE",
            "PASSTHROUGH"
          ]
        }
      },
      "name": "TdtParameters"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HlsScte35GenericProperties": {
      "properties": {
        "scte35AnnotationTag": {
          "type": "array",
          "description": "Control the tag for annotating SCTE35 message on HLS playlist",
          "items": {
            "type": "string",
            "enum": [
              "e_SCTE35",
              "e_DATERANGE"
            ]
          }
        }
      },
      "name": "HlsScte35GenericProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.MdsSchedulingConfig": {
      "properties": {
        "spreadEvenlyAcrossAvailabilityZones": {
          "type": "boolean",
          "description": "Whether media delivery servers should be launch evenly across availability zones (Mesos/Marathon deployment only)"
        }
      },
      "name": "MdsSchedulingConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange$TsBitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "TsBitrateRange"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestDataTrack": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "skipProcessing": {
          "type": "boolean"
        }
      },
      "name": "RestDataTrack"
    },
    "com.harmonicinc.vos.app.configure.model.service.ProcessingParameters": {
      "properties": {
        "audioProperties": {
          "type": "array",
          "description": "Contains the override values for Audio properties that match on the profile for the given service.",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ProcessingParameters$AudioProperties"
          }
        },
        "dataProperties": {
          "description": "Sets the data information for ProcessingParameters",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ProcessingParameters$DataProperties"
        },
        "decoderSettings": {
          "description": "Sets the decoder settings for ProcessingParameters",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DecoderSettings"
        },
        "streamConditioning": {
          "type": "string",
          "description": "The setting for stream conditioning mode",
          "enum": [
            "AUTO",
            "ESAM_CONDITIONING_INFO",
            "NONE"
          ]
        },
        "videoProperties": {
          "description": "Contains override values for Video properties that match on the profile for the given service.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ProcessingParameters$VideoProperties"
        }
      },
      "name": "ProcessingParameters"
    },
    "com.harmonicinc.vos.app.monitor.model.VideoProfileStatus": {
      "required": [
        "framerateDenominator",
        "framerateNumerator",
        "interlaced",
        "resolutionHeight",
        "resolutionWidth"
      ],
      "properties": {
        "framerateDenominator": {
          "type": "integer",
          "format": "int32",
          "description": "The denominator of framerate"
        },
        "framerateNumerator": {
          "type": "integer",
          "format": "int32",
          "description": "The numerator of framerate"
        },
        "interlaced": {
          "type": "boolean",
          "description": "The interlace mode, true: interlaced, false: progressive"
        },
        "resolutionHeight": {
          "type": "integer",
          "format": "int32",
          "description": "The height of video frame"
        },
        "resolutionWidth": {
          "type": "integer",
          "format": "int32",
          "description": "The width of video frame"
        }
      },
      "name": "VideoProfileStatus"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutDvbSubtitlingTrack": {
      "required": [
        "ancillaryPageID",
        "compositionPageID",
        "language",
        "subtitlingType"
      ],
      "properties": {
        "ancillaryPageID": {
          "type": "integer",
          "format": "int32",
          "description": "Ancillary page ID of DVB subtitling track"
        },
        "compositionPageID": {
          "type": "integer",
          "format": "int32",
          "description": "Composition page ID of DVB subtitling track"
        },
        "conversionParams": {
          "description": "Conversion parameters",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutDvbSubtitlingTrackConversionParams"
        },
        "enableConversion": {
          "type": "boolean",
          "description": "Specifies if conversion parameters are enabled, default: false"
        },
        "language": {
          "type": "string",
          "description": "Language code of DVB subtitling track"
        },
        "subtitlingType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of DVB subtitling track"
        }
      },
      "name": "PlayoutDvbSubtitlingTrack"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.UplinkInput": {
      "required": [
        "id"
      ],
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Suggested bitrate to transfer content in bps"
        },
        "descramblingKey": {
          "type": "string",
          "description": "Descrambling key"
        },
        "descramblingRequired": {
          "type": "boolean",
          "description": "Whether input should be descrambled"
        },
        "enableEncryption": {
          "type": "boolean",
          "description": "Whether to enable encryption"
        },
        "id": {
          "type": "string",
          "description": "Id of the uplink input"
        },
        "ipAddress": {
          "type": "string",
          "description": "IPv4 or IPv6 address to receive the input at uplink"
        },
        "ipInputs": {
          "type": "array",
          "description": "List of IP inputs",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.uplink.hub.uplinkchannel.impl.IpInput"
          }
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port to receive the input at uplink"
        },
        "outputAddress": {
          "type": "string",
          "description": "Hostname or IPv4 or IPv6 address to send from uplink to destination"
        },
        "outputPort": {
          "type": "integer",
          "format": "int32",
          "description": "Output UDP port to send from uplink to destination"
        },
        "pidList": {
          "type": "array",
          "description": "List of PID numbers for MPTS-to-SPTS filtering",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "programIdList": {
          "type": "array",
          "description": "List of program IDs MPTS-to-SPTS filtering",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "resolution": {
          "type": "string",
          "description": "Video resolution",
          "enum": [
            "SD",
            "HD",
            "UHD",
            "DEFAULT"
          ]
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses at uplink",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "UplinkInput"
    },
    "com.harmonicinc.vos.app.configure.model.service.CamAddon$CamParameters": {
      "required": [
        "progNums",
        "slotId"
      ],
      "properties": {
        "progNums": {
          "type": "array",
          "description": "List containing the Program Numbers to descramble with this CAM",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "slotId": {
          "type": "integer",
          "format": "int32",
          "description": "CAM physical slot Id in DVB-CI card (Value 0 for CAM 1, 1 for CAM 2)"
        }
      },
      "name": "CamParameters"
    },
    "com.harmonicinc.vos.labwizard.rest.model.FileTranscodingProfileProperties": {
      "required": [
        "category",
        "outputs",
        "type"
      ],
      "properties": {
        "abrCommonSettings": {
          "description": "Variable bitrate settings",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.FtAbrCommonSettings"
        },
        "category": {
          "type": "string",
          "description": "Transcoding category - group of profile"
        },
        "outputs": {
          "type": "array",
          "description": "Output a/v or variable bitrate profiles",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.FtOutput"
          }
        },
        "type": {
          "type": "string",
          "description": "Transcoding Type - Output format",
          "enum": [
            "3gp",
            "advanced_dash",
            "advanced_hls",
            "advanced_mss",
            "android",
            "dnxhd",
            "dnxhd_mxf",
            "fl9",
            "flv",
            "fmp4_hls",
            "hds",
            "kindle_fire",
            "m4v",
            "mov",
            "mp4",
            "mpeg1",
            "mpeg2",
            "mpegts",
            "mpeg_dash",
            "muxer",
            "mxf",
            "ogg",
            "prores",
            "psp",
            "roku_1200",
            "roku_1800",
            "roku_2700",
            "roku_800",
            "roku_hls",
            "vp6_flix",
            "webm",
            "wmv",
            "zune",
            "eac3",
            "m4a",
            "mp3",
            "wav",
            "wma",
            "wrapper"
          ]
        }
      },
      "name": "FileTranscodingProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerGraphic": {
      "properties": {
        "fileServerId": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "name": "FileServerGraphic"
    },
    "com.harmonicinc.vos.app.monitor.model.DownlinkOutputStatus": {
      "required": [
        "downlinkOutputStatistic"
      ],
      "properties": {
        "downlinkOutputStatistic": {
          "type": "array",
          "description": "Downlink output bitrate statistics",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.DownlinkOutputStatistic"
          }
        }
      },
      "name": "DownlinkOutputStatus"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MpegProgram": {
      "properties": {
        "audioStreams": {
          "type": "array",
          "description": "Properties of Audio Streams",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AudioStream"
          }
        },
        "dataStreams": {
          "type": "array",
          "description": "Properties of Data Streams",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DataStream"
          }
        },
        "descriptors": {
          "type": "array",
          "description": "Descriptors of Mpeg program",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.Descriptor"
          }
        },
        "pcrPid": {
          "type": "integer",
          "format": "int32",
          "description": "Program clock Reference pid"
        },
        "pmtPid": {
          "type": "integer",
          "format": "int32",
          "description": "Program map table pid"
        },
        "programName": {
          "type": "string",
          "description": "Program name of mpeg program"
        },
        "programNameCodingTable": {
          "type": "string",
          "description": "Hex value of coding table of program name. Support range defined in Annex A of ETSI EN 300 468 V1.16.1 (e.g. will return \"0x14\" for Traditional Chinese)."
        },
        "programNameUTF8": {
          "type": "string",
          "description": "Program name of mpeg program in UTF-8"
        },
        "programNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the mpeg program"
        },
        "providerName": {
          "type": "string",
          "description": "Provider name of mpeg program"
        },
        "providerNameCodingTable": {
          "type": "string",
          "description": "Hex value of coding table of provider name. Support range defined in Annex A of ETSI EN 300 468 V1.16.1 (e.g. will return \"0x14\" for Traditional Chinese)."
        },
        "providerNameUTF8": {
          "type": "string",
          "description": "Provider name of mpeg program in UTF-8"
        },
        "serviceType": {
          "type": "integer",
          "format": "int32",
          "description": "Service type of the mpeg program"
        },
        "videoStream": {
          "description": "Properties of Video Stream",
          "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.VideoStream"
        },
        "videoStreamList": {
          "type": "array",
          "description": "Properties of Video Streams",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.VideoStream"
          }
        }
      },
      "name": "MpegProgram"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.TranscodeExporting": {
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "An index (from 1 to xx) for the size of the file to export. index '1' means the bigger file in size will be exported. To export all files, set this to null or remove it."
        },
        "prefix": {
          "type": "string"
        }
      },
      "name": "TranscodeExporting"
    },
    "com.harmonicinc.vos.app.uplink.hub.uplinkchannel.impl.IpInput": {
      "required": [
        "ipAddress",
        "ipPort",
        "rank"
      ],
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address of IP input"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "IP port of IP input"
        },
        "rank": {
          "type": "integer",
          "format": "int32",
          "description": "Rank of IP input"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "List of SSM IP addresses of IP input",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "IpInput"
    },
    "com.harmonicinc.vos.app.monitor.model.OutputPid": {
      "required": [
        "inputPids",
        "outputPid"
      ],
      "properties": {
        "inputPids": {
          "type": "array",
          "description": "List of input PIDs used to generate the output PID",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.InputPid"
          }
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID"
        }
      },
      "name": "OutputPid"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsEgressPointUpdateRequest": {
      "properties": {
        "customDnsName": {
          "type": "string"
        },
        "egressPointId": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxOutputConnections": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      },
      "name": "LrsEgressPointUpdateRequest"
    },
    "com.harmonicinc.vos.app.monitor.model.LogoState": {
      "properties": {
        "logoGroupStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogoGroupState"
          }
        },
        "logosListStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.LogosListState"
          }
        },
        "on": {
          "type": "boolean"
        }
      },
      "name": "LogoState"
    },
    "com.harmonicinc.vos.app.monitor.model.ProcessingStatus": {
      "required": [
        "enableScte104Oob",
        "outputAudioProfileStatus",
        "outputDataProfileStatus",
        "outputVideoCodec",
        "processingAudioLanguages",
        "processingStatistic"
      ],
      "properties": {
        "enableScte104Oob": {
          "type": "boolean",
          "description": "Enable SCTE-104 OOB or not"
        },
        "outputAudioProfileStatus": {
          "type": "object",
          "description": "Audio Profiles information used by each subservice",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "outputDataProfileStatus": {
          "type": "object",
          "description": "Data Profiles information used by each subservice",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "outputVideoCodec": {
          "type": "string",
          "description": "Output video codec, e.g. Multiscreen HEVC, IPTV AVC",
          "enum": [
            "MULTISCREEN_HEVC",
            "MULTISCREEN_AVC",
            "IPTV_HEVC",
            "IPTV_AVC"
          ]
        },
        "processingAudioLanguages": {
          "type": "array",
          "description": "Audio languages that are being processed. The audio language is in ISO639 format, e.g. eng, spa",
          "items": {
            "type": "string"
          }
        },
        "processingStatistic": {
          "type": "array",
          "description": "The processing statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.ProcessingStatisticEntry"
          }
        },
        "speechToTextStatus": {
          "description": "Speech to text information",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.SpeechToTextStatus"
        }
      },
      "name": "ProcessingStatus"
    },
    "com.harmonicinc.vos.app.configure.model.service.DrmAddon$DrmSetting": {
      "required": [
        "drmSystemId",
        "originOutputEndPointId",
        "resourceId"
      ],
      "properties": {
        "drmSystemId": {
          "type": "string",
          "description": "DRM System ID"
        },
        "originOutputEndPointId": {
          "type": "string",
          "description": "Origin Output EndPoint ID"
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        },
        "useFixedResource": {
          "type": "boolean",
          "description": "Use fixed DRM Resource or not"
        }
      },
      "name": "DrmSetting"
    },
    "com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsResponse": {
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "authorized_grant_types": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AUTHORIZATION_CODE",
              "REFRESH_TOKEN",
              "CLIENT_CREDENTIALS",
              "IMPLICIT",
              "PASSWORD"
            ]
          }
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string"
        },
        "lastUsedSourceIp": {
          "type": "string"
        },
        "lastUsedTime": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "redirect_uri": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string"
        }
      },
      "name": "ClientDetailsResponse"
    },
    "com.harmonicinc.vos.playout.zookeeper.access.instancestatus.Graphic": {
      "properties": {
        "eventId": {
          "type": "string",
          "description": "Secondary event id (UUID)"
        },
        "layer": {
          "type": "integer",
          "format": "int32",
          "description": "Layer used for the logo/graphics, 1 to 8"
        },
        "name": {
          "type": "string",
          "description": "Graphics file name"
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Graphics start time, milliseconds since January 1, 1970"
        }
      },
      "name": "Graphic"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.DefaultLiveSource": {
      "required": [
        "target"
      ],
      "properties": {
        "target": {
          "type": "string",
          "description": "The target default live source",
          "enum": [
            "PRIMARY",
            "SECONDARY"
          ]
        }
      },
      "name": "DefaultLiveSource"
    },
    "com.harmonicinc.vos.app.configure.model.source.RfInputV2": {
      "required": [
        "tuner",
        "type"
      ],
      "properties": {
        "atscTuner": {
          "description": "ATSC tuner configuration.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.AtscTuner"
        },
        "card": {
          "type": "integer",
          "format": "int32",
          "description": "Card number from 0 to 2(DVB-S2X) or 0 (ATSC)"
        },
        "dvbS2XPort": {
          "description": "DVB-S2X port configuration.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DvbS2XPort"
        },
        "dvbS2XTuner": {
          "description": "DVB-S2X tuner configuration.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.DvbS2XTuner"
        },
        "tsProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the number of programs in the input TS"
        },
        "tuner": {
          "type": "integer",
          "format": "int32",
          "description": "Tuner number from 1 to 4(DVB-S2X) or 1 to 12(ATSC)"
        },
        "type": {
          "type": "string",
          "description": "RF card type.",
          "enum": [
            "DVB_S2X",
            "ATSC"
          ]
        }
      },
      "name": "RfInputV2"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.MPEGAudioProperties": {
      "required": [
        "mpegAudioChannelMode",
        "sampleRate"
      ],
      "properties": {
        "mpegAudioChannelMode": {
          "type": "string",
          "description": "Channel Mode of mpeg audio stream",
          "enum": [
            "STEREO",
            "JOINT_STEREO",
            "DUAL_CHANNEL",
            "SINGLE_CHANNEL"
          ]
        },
        "mpegAudioType": {
          "type": "string",
          "description": "MPEG audio type of mpeg audio stream",
          "enum": [
            "MPEG",
            "MPEG_1",
            "MPEG_2"
          ]
        },
        "sampleRate": {
          "type": "integer",
          "format": "int32",
          "description": "Sample rate of Dolby Digital audio stream"
        }
      },
      "name": "MPEGAudioProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.FtVideoSettings": {
      "required": [
        "aspect_ratio",
        "bitrate",
        "cbr",
        "container",
        "force_interlaced",
        "framerate",
        "hard_cbr",
        "horizontal_resolution",
        "idr_period",
        "profile",
        "two_pass",
        "two_pass_decoding",
        "vertical_resolution",
        "video_codec"
      ],
      "properties": {
        "aspect_ratio": {
          "type": "string",
          "description": "Any non-zero integer or N:M where N and M are non-zero integers\n'source' - copy from source aspect ratio\n'original' - keep original aspect ratio"
        },
        "bitrate": {
          "type": "string",
          "description": "Video bit rate\nAll: N (where N is any non zero integer of Kbps)"
        },
        "cbr": {
          "type": "string",
          "description": "Whether to use CBR (Constant bitrate)",
          "enum": [
            "yes",
            "no"
          ]
        },
        "container": {
          "type": "string",
          "description": "Wrapper container type",
          "enum": [
            "",
            "mxfop1a"
          ]
        },
        "force_interlaced": {
          "type": "string",
          "description": "Interlaced encoding type. Only works with MPEG-TS\nmpegts: tff, bff, no\nmxf: tff, bff, source, no\nmov_prores: tff, bff, source, no",
          "enum": [
            "tff",
            "bff",
            "source",
            "no"
          ]
        },
        "framerate": {
          "type": "string",
          "description": "Any non-zero integer or N/M where N and M are non-zero integers\n'copy' - take source's framerate"
        },
        "hard_cbr": {
          "type": "string",
          "description": "Specify HRD information and pack the bitstream to the specified bitrate",
          "enum": [
            "yes",
            "no"
          ]
        },
        "horizontal_resolution": {
          "type": "string",
          "description": "Video Horizontal Resolution\nAll: WxH, where W and N are any even integers.\n3gp (h263): 128x96, 176x144, 352x288, 704x576, 1408x1152\nzune: 320x180, 320x240\nmxf: 720x480, 960x720, 1280x720, 1280x1080, 1440x1080, 1920x1080\nCustom: To match your source aspect ratio, set X value to zero and Y value to your desired height. For example, 0x360 or 0x480."
        },
        "idr_period": {
          "type": "string",
          "description": "IDR period: N (where N is integer \u003E=1 and \u003C= 15)"
        },
        "profile": {
          "type": "string",
          "description": "The standard defines various sets of capabilities, which are referred to as profiles, targeting specific classes of applications\nhigh, main, baseline\nmov_prores: hq, std, lt, proxy",
          "enum": [
            "high",
            "main",
            "baseline",
            "hq",
            "std",
            "lt",
            "proxy"
          ]
        },
        "two_pass": {
          "type": "string",
          "description": "2-pass encoding toggle",
          "enum": [
            "no",
            "yes"
          ]
        },
        "two_pass_decoding": {
          "type": "string",
          "description": "Decode to a lossless format prior to encoding to reduce errors",
          "enum": [
            "none",
            "1"
          ]
        },
        "vertical_resolution": {
          "type": "string",
          "description": "Video Vertical Resolution\nAll: WxH, where W and N are any even integers.\n3gp (h263): 128x96, 176x144, 352x288, 704x576, 1408x1152\nzune: 320x180, 320x240\nmxf: 720x480, 960x720, 1280x720, 1280x1080, 1440x1080, 1920x1080\nCustom: To match your source aspect ratio, set X value to zero and Y value to your desired height. For example, 0x360 or 0x480."
        },
        "video_codec": {
          "type": "string",
          "description": "flv: flv, libx264, copy\nfl9: libx264, copy\nwmv, zune: wmv2, msmpeg4, copy\n3gp, android: h263, mpeg4, libx264, copy\nm4v: mpeg4, copy\nipod, iphone, ipad, psp: mpeg4, libx264, copy\nfmp4_hls: libx264, hevc\nadvanced_hls: libx264\nadvanced_mss: libx264, libvpx-vp9\nadvanced_dash: libx264, libvpx-vp9, hevc\nmpeg_dash: mpeg4, libx264, hevc\nmp4: mpeg4, libx264, hevc, copy\nogg: libtheora, copy\nwebm: libvpx, libvpx-vp9, copy\nmp3, wma: none\nmpeg2: mpeg2video, copy\nmpeg1: mpeg1video, copy\nmov: mpeg4, libx264, xdcam, dvcpro, dvcpro50, dvcprohd, mjpeg, copy\nmpegts: libx264, mpeg2video\nmxf: dvcpro, dvcpro50, dvcprohd, xdcamhd422, imx30, copy\nkindle_fire: mpeg4, libx264, hevc, copy\ndnxhd, dnxhd_mxf: dnxhd, copy\nmov_prores: prores, copy\nNote: With 'copy' video codec video will be repacked to the new format without transcoding. All video settings would be ignored",
          "enum": [
            "none",
            "flv",
            "libx264",
            "wmv2",
            "msmpeg4",
            "h263",
            "mpeg4",
            "libvpx-vp9",
            "hevc",
            "libtheora",
            "libvpx",
            "mpeg1video",
            "mpeg2video",
            "xdcam",
            "dvcpro",
            "dvcpro50",
            "dvcprohd",
            "mjpeg",
            "xdcamhd422",
            "imx30",
            "dnxhd",
            "prores",
            "copy"
          ]
        }
      },
      "name": "FtVideoSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitle": {
      "properties": {
        "filepath": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      },
      "name": "RestSubtitle"
    },
    "com.harmonicinc.vos.labwizard.rest.model.FtCommonSettings": {
      "required": [
        "closed_caption",
        "loud_norm"
      ],
      "properties": {
        "closed_caption": {
          "type": "string",
          "description": "no — no closed caption\ntimed-text — Closed Captions would be muxed in video as 3GPP Timed Text track\ncea-608 — Closed Captions would be muxed in video as cea-608 track\ncea-708 — 608 closed captions would be up-converted to 708 closed captions. And both, cea-608 and cea-708 closed captions, would be muxed in video stream",
          "enum": [
            "no",
            "timed-text",
            "cea-608",
            "cea-708"
          ]
        },
        "cloudNorm": {
          "type": "string",
          "enum": [
            "no",
            "yes"
          ]
        },
        "loud_norm": {
          "type": "string",
          "description": "Audio loud normalization according to EBU standard R128. Does not apply to passthrough audio.",
          "enum": [
            "no",
            "yes"
          ]
        }
      },
      "name": "FtCommonSettings"
    },
    "com.harmonicinc.vos.app.configure.model.source.PtsSettings": {
      "required": [
        "mode"
      ],
      "properties": {
        "delayAdjustment": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the data delay in millisecond in order to synchronize with the video stream, range -1250ms to 15000ms, default 0. Applicable to each mode."
        },
        "mode": {
          "type": "string",
          "description": "e_PASSTHROUGH (default) or e_GENERATE. When e_GENERATE is selected, the input PTS is discarded, and the output PTS is automatically generated.",
          "enum": [
            "e_PASSTHROUGH",
            "e_GENERATE"
          ]
        }
      },
      "name": "PtsSettings"
    },
    "com.harmonicinc.vos.asset.acquisition.model.AssetIngestStatistics": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "ecu": {
          "type": "integer",
          "format": "int32"
        },
        "ingestDurationInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "llcu": {
          "type": "integer",
          "format": "int32"
        },
        "record": {
          "type": "integer",
          "format": "int32"
        },
        "sourcesSizeInBytes": {
          "type": "integer",
          "format": "int64"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "AssetIngestStatistics"
    },
    "com.harmonicinc.vos.app.monitor.model.InputStatus": {
      "required": [
        "id",
        "inputDeliveryStatus",
        "inputStatistic",
        "status"
      ],
      "properties": {
        "defaultInput": {
          "type": "boolean",
          "description": "Default Input Identification"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a input in UUID format"
        },
        "inputDeliveryStatus": {
          "type": "array",
          "description": "List of delivery status at input",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.InputDeliveryStatus"
          }
        },
        "inputStatistic": {
          "type": "array",
          "description": "The input statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.InputStatisticEntry"
          }
        },
        "resetDateStatistic": {
          "type": "string",
          "format": "date-time",
          "description": "last reset date of the counters  (SMPTE 2022-1 FEC or SRT), null if not used"
        },
        "status": {
          "type": "string",
          "description": "The status of the input of the source",
          "enum": [
            "ACTIVE",
            "STANDBY",
            "ERROR"
          ]
        }
      },
      "name": "InputStatus"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.connection.ConnectionInformation": {
      "properties": {
        "srtConnectionInfo": {
          "description": "Srt connection information details",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.connection.SrtConnectionInfo"
        }
      },
      "name": "ConnectionInformation"
    },
    "com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection": {
      "required": [
        "videoCodecSelection"
      ],
      "properties": {
        "bitrateRange": {
          "description": "Filtering bitrate - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$BitrateRange"
        },
        "frameRateRange": {
          "description": "Filtering frame rate - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$FrameRateRange"
        },
        "horizontalResolutionRange": {
          "description": "Filtering horizontal resolution - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$HorizontalResolutionRange"
        },
        "indexRanges": {
          "type": "array",
          "description": "Filtering index - min and max",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.IndexRange"
          }
        },
        "verticalResolutionRange": {
          "description": "Filtering vertical resolution - min and max",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.datatypes.VideoStreamSelection$VerticalResolutionRange"
        },
        "videoCodecSelection": {
          "type": "string",
          "description": "Settings of video codec selection",
          "enum": [
            "H_265",
            "H_264",
            "ALL"
          ]
        }
      },
      "name": "VideoStreamSelection"
    },
    "com.harmonicinc.vos.labwizard.rest.model.EncapsulationSettings": {
      "required": [
        "encapsulationMode"
      ],
      "properties": {
        "enableFEC": {
          "type": "boolean",
          "description": "Enable FEC"
        },
        "enablePipAudio": {
          "type": "boolean",
          "description": "Enable PIP Audio"
        },
        "enablePipData": {
          "type": "boolean",
          "description": "Enable PIP Data"
        },
        "encapsulationMode": {
          "type": "string",
          "description": "Encapsulation Mode.",
          "enum": [
            "e_UDP",
            "e_RTP"
          ]
        },
        "fecColumn": {
          "type": "integer",
          "format": "int32",
          "description": "FEC Column"
        },
        "fecMinimumTsBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "FEC required minimum TS bitrate"
        },
        "fecRow": {
          "type": "integer",
          "format": "int32",
          "description": "FEC Row"
        },
        "incrementMode": {
          "type": "string",
          "description": "Increment Mode.",
          "enum": [
            "e_PORT",
            "e_MULTICAST_ADDRESS"
          ]
        },
        "incrementValue": {
          "type": "integer",
          "format": "int32",
          "description": "The value that the port or multicast IP address increase by."
        },
        "isFecColumnOnly": {
          "type": "boolean",
          "description": "Enable FEC column only mode"
        }
      },
      "name": "EncapsulationSettings"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$Scte35Match": {
      "properties": {
        "asserts": {
          "type": "array",
          "description": "List of asserts used to match this messages, in XPath format",
          "items": {
            "type": "string"
          }
        },
        "match": {
          "type": "string",
          "description": "Determines how the match the asserts for this trigger (ALL, ANY, NONE)",
          "enum": [
            "ALL",
            "ANY",
            "NONE"
          ]
        }
      },
      "name": "Scte35Match"
    },
    "com.harmonicinc.vos.app.configure.model.destination.AuthorizationSettings": {
      "required": [
        "accessKey",
        "secretKey"
      ],
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "Access key for S3 bucket authorization"
        },
        "secretKey": {
          "type": "string",
          "description": "Secret key for S3 bucket authorization"
        }
      },
      "name": "AuthorizationSettings"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.PotfServerConfig": {
      "properties": {
        "chblBalanceFactor": {
          "type": "number",
          "format": "float"
        },
        "connectionDrainingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ConnectionDrainingConfig"
        },
        "enableIndependentPotfServers": {
          "type": "boolean"
        },
        "loadBalancingMode": {
          "type": "string",
          "enum": [
            "ROUND_ROBIN",
            "CONSISTENT_HASHING",
            "CONSISTENT_HASHING_WITH_BOUNDED_LOAD"
          ]
        },
        "scalingConfig": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PotfServerScalingConfig"
        }
      },
      "name": "PotfServerConfig"
    },
    "com.harmonicinc.vos.mux.monitor.model.sdi.SourceFormat": {
      "required": [
        "frameMode",
        "frameRate",
        "resolution"
      ],
      "properties": {
        "frameMode": {
          "type": "string",
          "description": "The frame-mode of the source",
          "enum": [
            "PROGRESSIVE",
            "INTERLACED"
          ]
        },
        "frameRate": {
          "description": "The frame-rate of the source",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.sdi.FrameRate"
        },
        "resolution": {
          "description": "The resolution of the source",
          "$ref": "#/definitions/com.harmonicinc.vos.mux.monitor.model.sdi.Resolution"
        }
      },
      "name": "SourceFormat"
    },
    "com.harmonicinc.vos.app.configure.model.service.ProcessingParameters$AudioProperties": {
      "properties": {
        "aacHeader": {
          "type": "string",
          "description": "By default, aacHeader of the profile is used, or ADTS if aacHeader is not defined in the profile",
          "enum": [
            "e_ADTS",
            "e_LATM"
          ]
        },
        "ac4IframeInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Range 12..1000 when video frame-rate is 25 or 50 fps, range=14..1000 when video frame-rate is 29.97 or 59.94 fps. By default, ac4IframeInterval of the profile is used"
        },
        "bitrate": {
          "type": "string",
          "description": "Audio bitrate in kbps. Valid values are dependent on the codec, number of channels and sample rate. By default, bitrate of the profile is used.",
          "enum": [
            "e_AUTO_SELECT",
            "e_12",
            "e_16",
            "e_18",
            "e_20",
            "e_24",
            "e_28",
            "e_30",
            "e_32",
            "e_38",
            "e_40",
            "e_48",
            "e_56",
            "e_64",
            "e_72",
            "e_80",
            "e_88",
            "e_96",
            "e_104",
            "e_112",
            "e_120",
            "e_128",
            "e_144",
            "e_160",
            "e_176",
            "e_192",
            "e_196",
            "e_200",
            "e_208",
            "e_216",
            "e_224",
            "e_232",
            "e_240",
            "e_248",
            "e_256",
            "e_264",
            "e_272",
            "e_288",
            "e_304",
            "e_320",
            "e_336",
            "e_352",
            "e_368",
            "e_384",
            "e_388",
            "e_400",
            "e_416",
            "e_448",
            "e_480",
            "e_512",
            "e_528",
            "e_544",
            "e_576",
            "e_640",
            "e_704",
            "e_720",
            "e_768",
            "e_800",
            "e_832",
            "e_896",
            "e_960",
            "e_1024"
          ]
        },
        "channels": {
          "type": "string",
          "description": "Valid values are Pass-through, Stereo (all codecs), Mono (all codecs except AAC-HEv2), 5.1 (AAC-LC, HE-AACv1, AC-3, EAC-3, AC-4), 5.1.4 (EAC-3, AC-4). By default, channels of the profile is used",
          "enum": [
            "e_PASSTHROUGH",
            "e_STEREO",
            "e_MONO",
            "e_DOLBY_5_1",
            "e_DUAL_MONO",
            "e_5_1_4"
          ]
        },
        "gain": {
          "type": "integer",
          "format": "int32",
          "description": "Static gain applied to the audio, in dB. Range -20..20. By default, gain of the profile is used."
        },
        "languageIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Applicable when profile is in match-by-language mode. This index will be used to match the language configured in the profile. The audioProperties will apply for the profile's audio track for the matching language index."
        },
        "sampleRate": {
          "type": "string",
          "description": "Audio sampling in kHz. Valid values are 16 (AAC-LC mono/stereo), 32 (AAC, MP1L2), 44 (AAC mono), 48 (all). By default, sampleRate of the profile is used.",
          "enum": [
            "e_16",
            "e_32",
            "e_44",
            "e_48"
          ]
        },
        "sourceLabel": {
          "type": "string",
          "description": "Applicable when the profile is in match-by-label mode. This label will be used to match the label configured in the profile. The audioProperties will apply for the profile's audio track for the matching label."
        },
        "targetlevel": {
          "type": "string",
          "description": "Applicable when HALC is used (i.e. audioLevelAlgorithm is e_HALC in the profile), or when target level mode is used (i.e. audioLevelAlgorithm is e_StaticGain and targetLevel is not e_None in the profile). In dBFS when audioLevelAlgorithm is e_StaticGain or when alcMode is e_A_WEIGHTING, in LKFS when alcMode is e_ATSC_A85 or e_EBU_R128. e_None, e_m15, e_m16 are not valid values. By default, targetlevel of the profile is used.",
          "enum": [
            "e_None",
            "e_m15",
            "e_m16",
            "e_m17",
            "e_m18",
            "e_m19",
            "e_m20",
            "e_m21",
            "e_m22",
            "e_m23",
            "e_m24",
            "e_m25",
            "e_m26",
            "e_m27",
            "e_m28",
            "e_m29",
            "e_m30",
            "e_m31"
          ]
        }
      },
      "name": "AudioProperties"
    },
    "com.harmonicinc.vos.app.atm.rest.model.AtmAutoScalingConfig": {
      "properties": {
        "cronTriggers": {
          "type": "array",
          "description": "Cron Triggers (KEDA Mode Only)",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmAutoScalingConfig$CronTrigger"
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether auto-scaling is enabled"
        },
        "maxNumInstances": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of instances to launch, unset numOfInstances field before using"
        },
        "minNumInstances": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of instances to launch, unset numOfInstances field before using"
        },
        "mode": {
          "type": "string",
          "description": "Use KEDA for autoscaling",
          "enum": [
            "KEDA"
          ]
        },
        "responseTimeThresholdForFullScaleUp": {
          "type": "number",
          "format": "double",
          "description": "Target response time for scaling to max number of instances when exceeded"
        },
        "scaleDownPolicy": {
          "description": "The policy to control the speed of scaling down.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.atm.rest.model.AtmAutoScalingConfig$ScaleDownPolicy"
        },
        "scaleDownStabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Duration of the time window that the autoscaler uses to calculate the high-water-mark of replicas, such that it never scales below the marking"
        },
        "scaleUpOnly": {
          "type": "boolean",
          "description": "Whether or not auto-scaling is limited to scale-up only"
        },
        "targetCpuPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Target CPU utilization percentage for calculating desired number of instances"
        },
        "targetRequestRate": {
          "type": "integer",
          "format": "int32",
          "description": "Target request rate for scaling the number of instances linearly"
        }
      },
      "name": "AtmAutoScalingConfig"
    },
    "com.harmonicinc.vos.app.configure.model.service.CamAddon": {
      "properties": {
        "camParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.CamAddon$CamParameters"
          }
        }
      },
      "name": "CamAddon"
    },
    "com.harmonicinc.vos.app.monitor.model.SrtInputStatisticsEntry": {
      "required": [
        "ackPacketCount",
        "bandwidth",
        "belatedPacketCount",
        "connectionAge",
        "nackPacketCount",
        "negociatedLatency",
        "receivedPacketTotal",
        "recoveredPacketTotal",
        "retransPacketCount",
        "rtt",
        "srtReconnectionCount",
        "unrecoveredPacketTotal"
      ],
      "properties": {
        "ackPacketCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of sent ACK packets, cumulated since last statistics reset"
        },
        "bandwidth": {
          "type": "number",
          "format": "double",
          "description": "Estimated bandwidth, in Mb/s"
        },
        "belatedPacketCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of received and ignored packets due to having come too late, cumulated since last statistics reset"
        },
        "connectionAge": {
          "type": "integer",
          "format": "int64",
          "description": "Time since the SRT connection is started, in milliseconds, reinitialized at each reconnection, frozen if connection is lost"
        },
        "nackPacketCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of sent NACK packets, cumulated since last statistics reset"
        },
        "negociatedLatency": {
          "type": "integer",
          "format": "int32",
          "description": "Negociated latency in ms"
        },
        "receivedPacketTotal": {
          "type": "integer",
          "format": "int64",
          "description": "Number of received packets, cumulated since last statistics reset"
        },
        "recoveredPacketTotal": {
          "type": "integer",
          "format": "int64",
          "description": "Number of recovered packets, cumulated since last statistics reset"
        },
        "retransPacketCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of retransmitted packets received, cumulated since last statistics reset"
        },
        "rtt": {
          "type": "number",
          "format": "double",
          "description": "Round trip time in ms"
        },
        "srtReconnectionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of SRT reconnections, cumulated since last statistics reset"
        },
        "unrecoveredPacketTotal": {
          "type": "integer",
          "format": "int64",
          "description": "Number of unrecovered packets, cumulated since last statistics reset"
        }
      },
      "name": "SrtInputStatisticsEntry"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.PotfServerLegacyScalingConfig": {
      "properties": {
        "coolDownPeriodSec": {
          "type": "integer",
          "format": "int32",
          "description": "The cool-down period after scale-up / scale-down where no further scaling will take place"
        },
        "scaleDownCondition": {
          "description": "Condition to trigger scale-down",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ScaleDownCondition"
        },
        "scaleDownStepPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of number of existing nodes to remove during scale-down"
        },
        "scaleUpCondition": {
          "description": "Condition to trigger scale-up",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.ScaleUpCondition"
        },
        "scaleUpStepPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of number of existing nodes to add during scale-up"
        }
      },
      "name": "PotfServerLegacyScalingConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.ConfigureServiceInfo": {
      "properties": {
        "configureServiceType": {
          "type": "string",
          "enum": [
            "LIVE_EVENT_RECORD",
            "LOOP_RECORD",
            "LIVE"
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operationalState": {
          "type": "string",
          "enum": [
            "OFFLINE",
            "INITIALIZING",
            "RUNNING"
          ]
        },
        "previewInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.PreviewInfo"
          }
        },
        "timeShiftBufferSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "ConfigureServiceInfo"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.billing.CloudAccountDetail": {
      "properties": {
        "azureCustomerServicePrincipalAccessKeys": {
          "type": "string",
          "description": "Azure Customer Service Principal AccessKeys"
        },
        "customerAWSRoleArn": {
          "type": "string",
          "description": "Customer AWS Role ARN"
        }
      },
      "name": "CloudAccountDetail"
    },
    "com.harmonicinc.rumba.clientapp.rest.model.ClientDetailsConfig": {
      "required": [
        "redirect_uri"
      ],
      "properties": {
        "authorized_grant_types": {
          "type": "array",
          "description": "Grant types ( by default: AUTHORIZATION_CODE, REFRESH_TOKEN )",
          "items": {
            "type": "string",
            "enum": [
              "AUTHORIZATION_CODE",
              "REFRESH_TOKEN",
              "CLIENT_CREDENTIALS",
              "IMPLICIT",
              "PASSWORD"
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "redirect_uri": {
          "type": "array",
          "description": "Redirect uri",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Role"
        }
      },
      "name": "ClientDetailsConfig"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PlaylistEventList": {
      "properties": {
        "firstEventRank": {
          "type": "integer",
          "format": "int32",
          "description": "The position of the first returned event in the playlist. The current on-air event has firstEventRank = 1"
        },
        "primaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.playlist.PrimaryElement"
          }
        }
      },
      "name": "PlaylistEventList"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DvbSubtitlingDescriptor": {
      "required": [
        "dvbSubtitlingDescriptorData"
      ],
      "properties": {
        "dvbSubtitlingDescriptorData": {
          "type": "array",
          "description": "Data of DVB Subtitling Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DvbSubtitlingDescriptorData"
          }
        }
      },
      "name": "DvbSubtitlingDescriptor"
    },
    "com.harmonicinc.vos.app.monitor.model.LogosListState": {
      "required": [
        "logoState",
        "uuid"
      ],
      "properties": {
        "logoState": {
          "type": "string",
          "description": "Logo status of the logo with corresponding uuid",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "uuid": {
          "type": "string",
          "description": "uuid of the logo to be inserted"
        }
      },
      "name": "LogosListState"
    },
    "com.harmonicinc.vos.app.monitor.model.RedundancyGroupState": {
      "properties": {
        "join": {
          "type": "boolean"
        }
      },
      "name": "RedundancyGroupState"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.AssetMetadata": {
      "properties": {
        "groomedMediaInfo": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestMediaInfo"
        },
        "originalMediaInfo": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.RestMediaInfo"
        },
        "outputsMediaInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.OutputsMediaInfo"
          }
        }
      },
      "name": "AssetMetadata"
    },
    "com.harmonicinc.vos.app.configure.model.service.ServiceTrackingSetting": {
      "properties": {
        "outputFollowInputPid": {
          "type": "boolean",
          "description": "Default to false where the output PID will follow the PID in source configuration or the PID in the labwizard encoding profile if it is defined. When set to true, the output PID will follow the PID in the input stream (ignoring the PID specified in source configuration and labwizard encoding profile). This parameter is ignored (same as false) when serviceTrackingMode is OFF."
        },
        "pidOffset": {
          "type": "integer",
          "format": "int32",
          "description": "Default to 0 and ignored if outputFollowInputPid = false. pidOffset will be applied to the output PID so output PID = input PID + pidOffset when outputFollowInputPid = true. A modulo is applied if input PID + pidOffset is outside the range of 32 to 8175 so if input PID = 8174 and pidOffset = 2, the output PID will be 33."
        }
      },
      "name": "ServiceTrackingSetting"
    },
    "com.harmonicinc.vos.app.configure.model.fullService.FullService": {
      "properties": {
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
          }
        },
        "service": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
          }
        }
      },
      "name": "FullService"
    },
    "com.harmonicinc.vos.labwizard.rest.model.CmafPackagingProperties": {
      "required": [
        "cmafEncryptionMethod",
        "dvrWindowSize",
        "enableKeyRotation",
        "enablePackageBasedKeyRotation",
        "indexFileNameForIFrameOnlyStreamForFlattenedMode",
        "indexFileNameForMediaStreamForFlattenedMode",
        "keyChangePeriod",
        "mpdFileName",
        "scte35SegmentationMode",
        "segmentLengthInMillisecond",
        "segmentRetentionPeriod",
        "urlOrderOfVariantPlaylist",
        "variantPlaylistFileName"
      ],
      "properties": {
        "adaptationSetIdPattern": {
          "type": "string",
          "description": "The pattern for generating the AdaptationSet ID in MPD document.The following patterns are supported:%mediaType - stream media type, %index - numbers in order"
        },
        "altWatermarkOutputPrefix": {
          "type": "string",
          "description": "Alternative watermark output prefix, which will be added to the beginning of all playlist, manifest and segment name."
        },
        "availabilityTimeOffset": {
          "type": "integer",
          "format": "int32",
          "description": "The availability time offset property (expressed in milliseconds) for chunked CMAF low-latency mode.\nWill be calculated automatically if -1 is set."
        },
        "ccHandling": {
          "type": "string",
          "description": "(Deprecated) Enable CC subtitle conversion",
          "enum": [
            "e_NONE",
            "e_TO_IMSC1"
          ]
        },
        "chunkDurationInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the CMAF chunk in milliseconds."
        },
        "cmafEncryptionMethod": {
          "type": "string",
          "description": "Specify which encryption method should be used when integrate with DRM.",
          "enum": [
            "e_CLEAR",
            "e_CENC"
          ]
        },
        "commonEncryptionScheme": {
          "type": "string",
          "description": "Common encryption scheme",
          "enum": [
            "CENC_CBCS",
            "CENC_CENC"
          ]
        },
        "customGroupingProfileId": {
          "type": "string",
          "description": "Specify the HLS Audio Grouping Profile to customize the HLS playlist audio and video grouping."
        },
        "dashAnnotationType": {
          "type": "string",
          "description": "DASH annotation type",
          "enum": [
            "e_NONE",
            "e_NBC",
            "e_GENERIC"
          ]
        },
        "dashCcHandling": {
          "type": "array",
          "description": "Enable CC subtitle conversion for DASH",
          "items": {
            "type": "string",
            "enum": [
              "e_NONE",
              "e_PASSTHROUGH",
              "e_TO_IMSC1",
              "e_TO_WEBVTT_FMP4",
              "e_TO_WEBVTT"
            ]
          }
        },
        "dashEnableFillGapNearPeriodStart": {
          "type": "boolean",
          "description": "Enable CMAF DASH period alignment"
        },
        "dashInsertAudioRole": {
          "type": "boolean",
          "description": "Include the AudioRole tag to the audio Adaption Set. Used only if mediaPresentationProfile is e_ISO_LIVE"
        },
        "dashInsertCustomStreamName": {
          "type": "boolean",
          "description": "Insert custom name as label in CMAF-DASH manifest."
        },
        "dashKeyRotationSignalling": {
          "type": "string",
          "description": "Configuration of DASH key rotation signalling:\n - MANIFEST_BASED_SINGLE_PERIOD (Manifest-based, Single Period) \n- IN_BAND (Segment-based, Single Period)\nDefault: MANIFEST_BASED_SINGLE_PERIOD",
          "enum": [
            "MANIFEST_BASED_SINGLE_PERIOD",
            "IN_BAND"
          ]
        },
        "dashScte35Carriage": {
          "type": "array",
          "description": "Obsolete",
          "items": {
            "type": "string",
            "enum": [
              "e_INBAND_SEGMENT_BINARY",
              "e_IN_MPD_BASE64"
            ]
          }
        },
        "dashScte35GenericProperties": {
          "description": "DASH SCTE-35 Generic Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Scte35GenericProperties"
        },
        "dashTeletextHandling": {
          "type": "array",
          "description": "Enable Teletext subtitle conversion for DASH",
          "items": {
            "type": "string",
            "enum": [
              "e_NONE",
              "e_TO_IMSC1",
              "e_TO_WEBVTT_FMP4",
              "e_TO_WEBVTT"
            ]
          }
        },
        "dashUsePtsAsPto": {
          "type": "boolean",
          "description": "Use PTS as PTO in DASH manifest"
        },
        "decodeTimeShiftToPlayTime": {
          "type": "boolean",
          "description": "Enable to shift decoding timeline to match the presentation timeline, resulting in same first DTS and PTS for each segment, as well as potential negative CTO in segment"
        },
        "disableHdrEssentialProperty": {
          "type": "boolean",
          "description": "Disable EssentialProperty from DASH Manifest"
        },
        "displayHResolutionRounding": {
          "type": "string",
          "description": "The function that will be used to round the display horizontal resolution.",
          "enum": [
            "e_TO_FLOOR",
            "e_TO_CLOSEST_EVEN"
          ]
        },
        "displayHdcpLevelAttribute": {
          "type": "boolean",
          "description": "Specify whether to show HDCP-LEVEL attribute for each stream on HLS master playlist."
        },
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control of the availability of media segment files most recently added to the Media Presentation Description (MPD) file (expressed in seconds)."
        },
        "enableChunkedCMAF": {
          "type": "boolean",
          "description": "Enable chunked CMAF to support low latency OTT delivery"
        },
        "enableCountryCode": {
          "type": "boolean",
          "description": "Use ISO Country Code in language identification"
        },
        "enableExtXGapTag": {
          "type": "boolean",
          "description": "Enable the insertion of HLS GAP tag in the playlist during periods of content loss. This helps indicate missing content segments in the HLS stream."
        },
        "enableKeyRotation": {
          "type": "boolean",
          "description": "Enable key rotation."
        },
        "enablePackageBasedKeyRotation": {
          "type": "boolean",
          "description": "Override the DRM global setting and enable customized per Package output key rotation setting"
        },
        "enablePackagingWatermarking": {
          "type": "boolean",
          "description": "Enable Synamedia Watermark feature"
        },
        "enableThumbnailGeneration": {
          "type": "boolean",
          "description": "Enable segment thumbnail generation"
        },
        "encryptSEI": {
          "type": "boolean",
          "description": "Enable SEI encryption for HLS fmp4 package output, if value is false, encryption of SEI entry will be skipped"
        },
        "hlsAnnotationType": {
          "type": "string",
          "description": "HLS annotation type",
          "enum": [
            "e_NONE",
            "e_NBC",
            "e_GENERIC"
          ]
        },
        "hlsCcHandling": {
          "type": "array",
          "description": "Enable CC subtitle conversion for HLs",
          "items": {
            "type": "string",
            "enum": [
              "e_NONE",
              "e_PASSTHROUGH",
              "e_TO_IMSC1",
              "e_TO_WEBVTT"
            ]
          }
        },
        "hlsInsertCustomStreamName": {
          "type": "boolean",
          "description": "Insert custom name as NAME attribute in CMAF-HLS manifest."
        },
        "hlsScte35GenericProperties": {
          "description": "SCTE-35 Generic Properties",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsScte35GenericProperties"
        },
        "hlsTeletextHandling": {
          "type": "array",
          "description": "Enable Teletext subtitle conversion for HLS",
          "items": {
            "type": "string",
            "enum": [
              "e_NONE",
              "e_TO_IMSC1",
              "e_TO_WEBVTT"
            ]
          }
        },
        "indexFileNameForIFrameOnlyStreamForFlattenedMode": {
          "type": "string",
          "description": "An index file is an ordered list of media URLs and informational tags. Each media URL refers to a media file which is a segment of a I-Frame Only stream. This setting specifies the file name of the index file for each variant stream excluding file extension (i.e. .m3u8).\r\n\r\nSupported escape pattern:\r\n%streamid Stream ID\r\n\r\nSample configuration: %streamid\r\nResultant file name: 01.m3u8"
        },
        "indexFileNameForMediaStreamForFlattenedMode": {
          "type": "string",
          "description": "An index file is an ordered list of media URLs and informational tags. Each media URL refers to a media file which is a segment of a single contiguous stream. This setting specifies the file name of the index file for each variant stream excluding file extension (i.e. .m3u8).\r\n\r\nSupported escape pattern:\r\n%streamid Stream ID\r\n%streamid:streamIdFormat=%0{number}llu Stream ID in some format, for example %01llu. %02llu is the default.\r\n\r\nSample configuration: %streamid\r\nResultant file name: 01.m3u8\r\nSample configuration: %streamid:streamIdFormat=%01llu\r\nResultant file name: 1.m3u8"
        },
        "insertAdaptationSetId": {
          "type": "boolean",
          "description": "Include the Id attribute to the AdaptionSet element in MPD document"
        },
        "insertAudioChannels": {
          "type": "boolean",
          "description": "Specify whether the CHANNEL value must be inserted in master playlist for each audio track."
        },
        "insertDefaultKIDToManifest": {
          "type": "boolean",
          "description": "Insert default Key ID to CMAF-DASH manifest. Default value is true."
        },
        "insertParAndSarAttributesInMpd": {
          "type": "boolean",
          "description": "Include AdaptationSet@par and Representation@sar attributes in DASH manifest."
        },
        "insertPrftToManifest": {
          "type": "boolean",
          "description": "Insert ProducerReferenceTime to manifest."
        },
        "keepOverlayPlcmtOppInClear": {
          "type": "boolean",
          "description": "Keep Overlay Placement Opportunity in Clear"
        },
        "keyChangePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The key change period for key rotation (expressed in seconds)."
        },
        "latencyMax": {
          "type": "integer",
          "format": "int32",
          "description": "Service Description: the service provider’s indication about the maximum presentation latency in milliseconds."
        },
        "latencyMin": {
          "type": "integer",
          "format": "int32",
          "description": "Service Description:: the service provider’s indication about the minimum presentation latency in milliseconds."
        },
        "latencyTarget": {
          "type": "integer",
          "format": "int32",
          "description": "Service Description: the service provider’s preferred presentation latency in milliseconds compared to the producer reference time."
        },
        "minBufferTimeInMs": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum buffer time of dash manifest."
        },
        "minimumUpdatePeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum update period of dash manifest."
        },
        "mpdAccessibilityComplianceMode": {
          "type": "string",
          "description": "Change the Accessibility tag compliance in the Media Presentation Description (MPD). Used to switch to DASH-IF compliance mode",
          "enum": [
            "e_DVB_DASH",
            "e_DASH_IF",
            "e_BYTEL"
          ]
        },
        "mpdFileName": {
          "type": "string",
          "description": "The name of Media Presentation Description (MPD) file which is used to describe a Media Presentation."
        },
        "nameAttribute": {
          "type": "string",
          "description": "Name attribute",
          "enum": [
            "DEFAULT",
            "IN_ENGLISH",
            "IN_NATIVE"
          ]
        },
        "numberBasedSegments": {
          "type": "boolean",
          "description": "Enable number based segment instead of time based segments"
        },
        "passThroughParameterSets": {
          "type": "string",
          "description": "Pass-through Parameter Sets. Video parameter sets can be stored in sample entry only (sample entry name is 'hvc1' for HEVC or 'avc1' for AVC) or video parameter sets can be stored in sample entry and samples (sample entry name is 'hev1' for HEVC or 'avc3' for AVC).",
          "enum": [
            "e_AVC1_HVC1",
            "e_AVC3_HEV1"
          ]
        },
        "playbackRateMax": {
          "type": "number",
          "format": "double",
          "description": "Service Description:: the maximum playback rate that the content provider indicates is appropriate for the purposes of automatically adjusting playback latency and buffer occupancy during normal playback, where 1.0 is normal playback speed."
        },
        "playbackRateMin": {
          "type": "number",
          "format": "double",
          "description": "Service Description:: the minimum playback rate that the content provider indicates is appropriate for the purposes of automatically adjusting playback latency and buffer occupancy during normal playback, where 1.0 is normal playback speed."
        },
        "scopeSchemeIdUri": {
          "type": "string",
          "description": "Service Description: Scope element SchemeIdUri"
        },
        "scopeValue": {
          "type": "string",
          "description": "Service Description: Scope element Value"
        },
        "scte35AnnotationTag": {
          "type": "string",
          "description": "Control the tag for annotating SCTE35 message on HLS playlist",
          "enum": [
            "e_SCTE35",
            "e_DATERANGE",
            "e_ALL_ANNOTATION"
          ]
        },
        "scte35CreateNewPeriodForNbcOverlayPlacement": {
          "type": "boolean",
          "description": "Creation of a new period for Overlay Placement SCTE-35 messages in NBC mode."
        },
        "scte35DaterangeTagsInMs": {
          "type": "boolean",
          "description": "Use milliseconds for SCTE-35 EXT-X-DATERANGE tag"
        },
        "scte35DefaultAutoReturnDuration": {
          "type": "integer",
          "format": "int32",
          "description": "SCTE-35 Default Auto-return Duration, for segmentation mode e_NBC only."
        },
        "scte35RetainProgramChapterStart": {
          "type": "boolean",
          "description": "Retain program/chapter start SCTE-35 messages in NBC mode"
        },
        "scte35SegmentationMode": {
          "type": "string",
          "description": "SCTE 35 segmentation mode",
          "enum": [
            "e_NONE",
            "e_NBC",
            "e_GENERIC"
          ]
        },
        "segmentFileExtension": {
          "type": "string",
          "description": "Segment file extension",
          "enum": [
            "e_M4V_M4A",
            "e_MP4"
          ]
        },
        "segmentLengthInMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The duration of the media segment files (in seconds)."
        },
        "segmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the media segment files actually retain in the publishing server (expressed in minutes)."
        },
        "segmentTemplateType": {
          "type": "string",
          "description": "The type of segment template for constructing segment URL. 'TIME_BASED' means time-based segment template; 'NUMBER_BASED' means number-based segment template. Default is 'TIME_BASED'",
          "enum": [
            "e_TIME_BASED",
            "e_NUMBER_BASED"
          ]
        },
        "serviceDescription": {
          "type": "boolean",
          "description": "Add Service Description in manifest. It allows to sync all the players (supporting low-latency) to a similar latency, based on the PRFT value."
        },
        "skipDuplicateExtXKeyTag": {
          "type": "boolean",
          "description": "Skip duplicate EXT-X-KEY tags"
        },
        "specifyStartingLivePoint": {
          "type": "boolean",
          "description": "Specify starting live point"
        },
        "startingLivePoint": {
          "type": "integer",
          "format": "int32",
          "description": "Starting live point in seconds. A positive number indicates a time offset from the beginning of the Playlist. A negative number indicates a negative time offset from the end of the last Media Segment in the Playlist."
        },
        "suggestedPresentationDelayMillisecond": {
          "type": "integer",
          "format": "int32",
          "description": "The suggested presentation delay is to let the player to play behind the live point (expressed in milliseconds) to encounter buffer issues.\nOptimal value will be used if -1 is set.\nDefault value is -1."
        },
        "targetDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Set the target duration in playlist (in seconds). 0 means follow segment duration"
        },
        "teletextHandling": {
          "type": "string",
          "description": "(Deprecated) Enable Teletext subtitle conversion",
          "enum": [
            "e_NONE",
            "e_TO_IMSC1"
          ]
        },
        "thumbnailHeight": {
          "type": "integer",
          "format": "int32",
          "description": "Segment thumbnail height"
        },
        "ttmlTemplate": {
          "type": "string",
          "description": "The TTML template. String in XML that allows to control how output TTML looks like."
        },
        "urlOrderOfVariantPlaylist": {
          "type": "string",
          "description": "Specify how the playlist URLs are arranged in the variant playlist.",
          "enum": [
            "e_BITRATE_ASCENDING",
            "e_BITRATE_DESCENDING"
          ]
        },
        "useISO6391LanguageCode": {
          "type": "boolean",
          "description": "Use ISO 639-1 language codes"
        },
        "useUnifiedSegmenter": {
          "type": "boolean",
          "description": "Use UnifiedSegmenter for new CMAF live data-path"
        },
        "utcTimingSchemeIdUri": {
          "type": "string",
          "description": "UTCTiming element SchemeIdUri, this element will be added in Dash manifest to help synchronize Dash client with the server",
          "enum": [
            "e_NONE",
            "e_HTTP_XSDATE",
            "e_HTTP_ISO",
            "e_HTTP_NTP",
            "e_NTP",
            "e_HTTP_HEAD"
          ]
        },
        "utcTimingValue": {
          "type": "string",
          "description": "UTCTiming element Value, available if UtcTimingSchemeIdUri is not 'None'"
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "The variant playlist lists the URLs of each variant stream to allow clients to switch between encodings dynamically. This setting specifies the file name of the variant playlist excluding file extension (i.e. .m3u8). For example, if this value is set to 'master' (excluding ''), the actual file name will be 'master.m3u8'."
        }
      },
      "name": "CmafPackagingProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$Teletext": {
      "properties": {
        "teletextInputSelection": {
          "type": "string",
          "description": "Configure Teletext Input Selection, e.g. DVB or VBI or any",
          "enum": [
            "e_ANY_TELETEXT",
            "e_DVB_TELETEXT_ONLY",
            "e_VBI_TELETEXT_ONLY"
          ]
        },
        "teletextOutputFormat": {
          "type": "string",
          "description": "Configure the output format of Teletext, e.g. none or follow the input",
          "enum": [
            "e_NONE",
            "e_FOLLOW_THE_INPUT"
          ]
        }
      },
      "name": "Teletext"
    },
    "com.harmonicinc.vos.app.configure.model.source.VideoGrooming": {
      "properties": {
        "afdFallback": {
          "type": "string",
          "description": "AFD Fallback",
          "enum": [
            "e_AFD_LAST_VALID_AFD",
            "e_AFD_16x9_FULL_FRAME_1000",
            "e_AFD_4x3_PILLARBOX_1001",
            "e_AFD_16x9_FULL_FRAME_PROTECTED_1010",
            "e_AFD_14x9_PILLARBOX_1011",
            "e_AFD_4x3_PILLARBOX_ALT_14x9_CENTER_1101",
            "e_AFD_16x9_FULL_FRAME_ALT_14x9_CENTER_1110",
            "e_AFD_16x9_FULL_FRAME_ALT_4x3_CENTER_1111"
          ]
        },
        "croppingSettings": {
          "description": "Specifies the region of the video to crop",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.CroppingSettings"
        },
        "enableRfd": {
          "type": "boolean",
          "description": "Enable/disable RFD - Repeat Field Detection"
        },
        "frameRate": {
          "description": "Discovered frameRate of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.FrameRate"
        },
        "hasAmolLine": {
          "type": "boolean",
          "description": "Specifies the removal of AMOL or WSS line from the source video"
        },
        "inputAspectRatio": {
          "type": "string",
          "description": "InputAspectRatio of video",
          "enum": [
            "e_AUTO",
            "e_AR_AUTO_FALLBACK_4_3",
            "e_AR_AUTO_FALLBACK_16_9",
            "e_AR_4_3",
            "e_AR_16_9"
          ]
        },
        "insertNullPidOnSignalLoss": {
          "type": "boolean",
          "description": "Indicate insertion of nulls when there is video signal loss"
        },
        "labels": {
          "type": "array",
          "description": "Labels identifier of the video stream",
          "items": {
            "type": "string"
          }
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of the video stream"
        },
        "resolution": {
          "description": "Discovered resolution of video",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Resolution"
        },
        "tracks": {
          "type": "array",
          "description": "Additonal list of essential metadata of video",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.VideoTrack"
          }
        },
        "videoNoiseReduction": {
          "type": "string",
          "description": "Specifies noise reduction and artifact repair option reqiured",
          "enum": [
            "DISABLED",
            "AUTO_DETECT",
            "MODERATE",
            "STRONG"
          ]
        },
        "videoStreamType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of the video stream; Stream Type defined at http://en.wikipedia.org/wiki/Program-specific_information#Elementary_stream_types"
        }
      },
      "name": "VideoGrooming"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.SubtitlesAssetFileServer$PacParams": {
      "properties": {
        "codePage": {
          "type": "string",
          "enum": [
            "LATIN",
            "TURKISH",
            "JAPANESE",
            "KOREAN",
            "CHS",
            "CHT",
            "CYRILLIC",
            "THAI",
            "HEBREW",
            "ARABIC",
            "CZECH",
            "GREEK"
          ]
        },
        "offset": {
          "type": "string"
        }
      },
      "name": "PacParams"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DVB_SubtitlingDescriptor": {
      "required": [
        "dvbSubtitlingDescriptorData"
      ],
      "properties": {
        "dvbSubtitlingDescriptorData": {
          "type": "array",
          "description": "Data of DVB Subtitling Descriptor",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DVB_SubtitlingDescriptorData"
          }
        }
      },
      "name": "DVB_SubtitlingDescriptor"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestSubtitleTrack": {
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "durationSec": {
          "type": "integer",
          "format": "int64"
        },
        "format": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "language": {
          "type": "string"
        },
        "pageNumber": {
          "type": "string"
        },
        "subtitleType": {
          "type": "string"
        }
      },
      "name": "RestSubtitleTrack"
    },
    "com.harmonicinc.vos.labwizard.rest.model.hlsCustomization.MasterPlaylistCustomization": {
      "properties": {
        "extXVersionTagValue": {
          "type": "integer",
          "format": "int32",
          "description": "EXT-X-VERSION tag value: \r\n\t-1: default, will set automatic \r\n\t0: do not insert EXT-X-VERSION tag to the playlist \r\n\t2 and more - version number"
        }
      },
      "name": "MasterPlaylistCustomization"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.InsertPrimaryProperties": {
      "properties": {
        "assetId": {
          "type": "string",
          "description": "Identifier for the asset to be played; a live source name, filename for file assets (the uri of the asset in asset library, with or without file path and extension), or asset title for recorded assets"
        },
        "assetTitle": {
          "type": "string",
          "description": "Text or additional information about the asset, usually the material title"
        },
        "audioProfileName": {
          "type": "string",
          "description": "The grooming profile to be used for file assets, to allow the audio tracks of the file to be selected. Grooming profiles are defined in the Asset Acquisition application. Not applicable to live events and recorded assets"
        },
        "description": {
          "type": "string",
          "description": "Descriptive text that may contain additional information about the event"
        },
        "duration": {
          "type": "string",
          "description": "Length of the event (hh:mm:ss.sss)"
        },
        "endMode": {
          "type": "string",
          "description": "Specifies how the event will end (Duration or Manual)",
          "enum": [
            "DURATION",
            "MANUAL"
          ]
        },
        "eventType": {
          "type": "string",
          "description": "Event type, File (including recorded file) or Live",
          "enum": [
            "FILE",
            "LIVE",
            "COMMENT"
          ]
        },
        "materialType": {
          "type": "string",
          "description": "Material type of the asset. Special values Program, Avail, and Commercial are used for SCTE-35 generation"
        },
        "previousId": {
          "type": "string"
        },
        "scte35WindowEnd": {
          "type": "string",
          "description": "End time of the SCTE-35 validity window (YYYY-MM-DDThh:mm:ss.sssZ), in UTC. This event and following events in the same ad pod (material type is COMMERCIAL or AVAIL, and start mode is FOLLOW) are skipped if we don't receive SCTE-35 trigger with splice-time before this time, or if we don't receive SCTE-35 trigger x seconds before this time (x is 2 seconds if the event after the ad-pod is a prepared live source, otherwise it can be up to 32 seconds). Used only when the startMode is EXTERNAL"
        },
        "scte35WindowStart": {
          "type": "string",
          "description": "Start time of the SCTE-35 validity window (YYYY-MM-DDThh:mm:ss.sssZ), in UTC. Any SCTE-35 trigger with a splice-time before this time is ignored. Used only when the startMode is EXTERNAL"
        },
        "sequenceId": {
          "type": "string",
          "description": "Sequence id (UUID)"
        },
        "som": {
          "type": "string",
          "description": "Indicates the position in the asset to start playback (hh:mm:ss.sss). When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, it is the timecode value for the starting position in the asset. An empty or blank value is treated as zero offset"
        },
        "somType": {
          "type": "string",
          "description": "The type of SOM, which determines how the SOM value is used. When the SomType is RELATIVE, the SOM value is the offset from the start of asset. When the SomType is ABSOLUTE, the Som value is the timecode value for the starting position in the asset",
          "enum": [
            "RELATIVE",
            "ABSOLUTE"
          ]
        },
        "startMode": {
          "type": "string",
          "description": "Specifies how the event will start (Fixed Time, Follow, Manual Take, or External SCTE-35 trigger)",
          "enum": [
            "FIXED",
            "FOLLOW",
            "MANUAL",
            "EXTERNAL"
          ]
        },
        "startTime": {
          "type": "string",
          "description": "Event start date/time in UTC (YYYY-MM-DDThh:mm:ss.sssZ). The start time will be automatically calculated for all events except those with Fixed start mode"
        },
        "startTrigger": {
          "type": "string",
          "description": "Start trigger name"
        },
        "tcDuration": {
          "type": "string",
          "description": "Equivalent to duration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcErrorDuration": {
          "type": "string",
          "description": "Equivalent to errorDuration, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcScte35WindowEnd": {
          "type": "string",
          "description": "Equivalent to scte35WindowEnd, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcScte35WindowStart": {
          "type": "string",
          "description": "Equivalent to scte35WindowStart, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "tcSom": {
          "type": "string",
          "description": "Equivalent to som, but in timecode format (hh:mm:ss[:;]ff)"
        },
        "tcStartTime": {
          "type": "string",
          "description": "Equivalent to startTime, but in timecode format (YYYY-MM-DD hh:mm:ss[:;]ff)"
        },
        "upid": {
          "type": "string",
          "description": "The uPid value is inserted in the segmentation_upid field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL. It is a hexadecimal string, e.g. \"0x000000002C11422B\" with or without the leading \"0x\""
        },
        "upidType": {
          "type": "integer",
          "format": "int32",
          "description": "The uPid type is inserted in the segmentation_upid_type field of the segmentation descriptor in generated SCTE-35 messages. SCTE-35 messages are generated for events with material type PROGRAM, AVAIL, or COMMERCIAL"
        }
      },
      "name": "InsertPrimaryProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.PlayoutAudioConfiguration": {
      "properties": {
        "tracks": {
          "type": "array",
          "description": "Essential metadata of audio tracks",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PlayoutAudioTrack"
          }
        }
      },
      "name": "PlayoutAudioConfiguration"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.LlcuAssetBase": {
      "properties": {
        "drmSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.api.java.llcu.drm.DrmSettings"
        },
        "id": {
          "type": "string"
        },
        "ingestEndTime": {
          "type": "string",
          "format": "date-time"
        },
        "ingestStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "sourceUri": {
          "type": "string"
        }
      },
      "name": "LlcuAssetBase"
    },
    "com.harmonicinc.vos.asset.acquisition.model.AudioGrooming": {
      "properties": {
        "audioTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingAudioTrack"
          }
        }
      },
      "name": "AudioGrooming"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.H265Properties": {
      "required": [
        "h265Level",
        "h265Profile",
        "h265Tier"
      ],
      "properties": {
        "h265Level": {
          "type": "string",
          "description": "Level of H265 stream",
          "enum": [
            "LEVEL_1_0",
            "LEVEL_2_0",
            "LEVEL_2_1",
            "LEVEL_3_0",
            "LEVEL_3_1",
            "LEVEL_4_0",
            "LEVEL_4_1",
            "LEVEL_5_0",
            "LEVEL_5_1",
            "LEVEL_5_2",
            "LEVEL_6_0",
            "LEVEL_6_1",
            "LEVEL_6_2"
          ]
        },
        "h265Profile": {
          "type": "string",
          "description": "Profile of H265 stream",
          "enum": [
            "MAIN",
            "MAIN_10",
            "MAIN_STILL_PICTURE",
            "MAIN_422_10"
          ]
        },
        "h265Tier": {
          "type": "string",
          "description": "Tier of H265 stream",
          "enum": [
            "MAIN",
            "HIGH"
          ]
        }
      },
      "name": "H265Properties"
    },
    "com.harmonicinc.vos.app.monitor.model.DestinationStatistics": {
      "required": [
        "outputStatIn12h",
        "outputStatIn1h",
        "outputStatIn24h"
      ],
      "properties": {
        "outputStatIn12h": {
          "description": "Statistic in 12 hours",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputStatsEntry"
        },
        "outputStatIn1h": {
          "description": "Statistic in 1 hour",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputStatsEntry"
        },
        "outputStatIn24h": {
          "description": "Statistic in 24 hours",
          "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OutputStatsEntry"
        }
      },
      "name": "DestinationStatistics"
    },
    "com.harmonicinc.vos.app.configure.model.source.RTMP_Input": {
      "properties": {
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "hspEndpoint": {
          "type": "string",
          "description": "(Deprecated)Internal Live ingest endpoint of the source"
        },
        "hspEndpointId": {
          "type": "string",
          "description": "(Deprecated)Live ingest endpoint Id of the source"
        },
        "ipNetworkAddress": {
          "type": "string",
          "description": "Network interface for RTMP input"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "TCP port to receive RTMP input (range:20300-20399)"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "publicRtmpEndpoint": {
          "type": "string",
          "description": "(Deprecated)Public Live ingest endpoint of the source"
        },
        "rtmpMode": {
          "type": "string",
          "description": "\"IP\" mode for XOS RTMP input transcoding",
          "enum": [
            "IP",
            "HSP"
          ]
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "(Deprecated)Playlist File Name of the source"
        }
      },
      "name": "RTMP_Input"
    },
    "com.harmonicinc.vos.app.configure.model.service.DpiTierSetting": {
      "properties": {
        "authorizedDpiTiers": {
          "type": "array",
          "description": "List of authorized/allowed dpi tiers. Incoming SCTE35 section will not be discarded if it contains one of these tiers. Range: 0-4094",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "blockScte35InputMessages": {
          "type": "boolean",
          "description": "if set to true, discard all SCTE35 messages, regardless of tier value, except 0xFFF (4095)"
        }
      },
      "name": "DpiTierSetting"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsPlayReadyResource$LeafLicense": {
      "properties": {
        "fixedKey": {
          "type": "string",
          "description": "The fixedKey of LeafLicense"
        },
        "fixedKeyId": {
          "type": "string",
          "description": "The fixedKeyId of LeafLicense"
        },
        "psshBox": {
          "type": "string",
          "description": "The psshBox of LeafLicense"
        },
        "systemId": {
          "type": "string",
          "description": "The systemId of LeafLicense"
        }
      },
      "name": "LeafLicense"
    },
    "com.harmonicinc.vos.mux.monitor.model.blackout.BlackoutOutputProgramState": {
      "required": [
        "outputProgramId",
        "state"
      ],
      "properties": {
        "outputProgramId": {
          "type": "string",
          "description": "UUID of the output program"
        },
        "state": {
          "type": "string",
          "description": "blackout state",
          "enum": [
            "e_ON",
            "e_OFF"
          ]
        }
      },
      "name": "BlackoutOutputProgramState"
    },
    "com.harmonicinc.vos.app.configure.model.source.HarmonicCloudlinkSetting": {
      "required": [
        "ipAddress"
      ],
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address used to receive the input. IPv4 and IPv6 are supported"
        },
        "ipPort": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port used to receive the input"
        },
        "ipPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "UDP port range end used to receive input"
        },
        "ssmIpAddresses": {
          "type": "array",
          "description": "Source-specific multicast IP addresses",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "ZIXI",
            "HSP"
          ]
        },
        "uplinkGroupId": {
          "type": "string",
          "description": "Unique identifier of the uplink Group"
        },
        "uplinkId": {
          "type": "string",
          "description": "[Obsoleted]Unique identifier of the uplink"
        }
      },
      "name": "HarmonicCloudlinkSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.AudioMixingProperties": {
      "properties": {
        "firstAudioTargetLevel": {
          "type": "string",
          "description": "Target intermediate loudness for the first mixing audio",
          "enum": [
            "e_None",
            "e_m15",
            "e_m16",
            "e_m17",
            "e_m18",
            "e_m19",
            "e_m20",
            "e_m21",
            "e_m22",
            "e_m23",
            "e_m24",
            "e_m25",
            "e_m26",
            "e_m27",
            "e_m28",
            "e_m29",
            "e_m30",
            "e_m31"
          ]
        },
        "secondAudioTargetLevel": {
          "type": "string",
          "description": "Target intermediate loudness for the second mixing audio",
          "enum": [
            "e_None",
            "e_m15",
            "e_m16",
            "e_m17",
            "e_m18",
            "e_m19",
            "e_m20",
            "e_m21",
            "e_m22",
            "e_m23",
            "e_m24",
            "e_m25",
            "e_m26",
            "e_m27",
            "e_m28",
            "e_m29",
            "e_m30",
            "e_m31"
          ]
        }
      },
      "name": "AudioMixingProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties": {
      "required": [
        "key"
      ],
      "properties": {
        "audioStreamSelections": {
          "type": "array",
          "description": "audioStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem"
          }
        },
        "key": {
          "type": "string",
          "description": "match key of the manipulation profile"
        },
        "preferredVideoStreamIndex": {
          "type": "integer",
          "format": "int32",
          "description": "preferred Video Stream Index"
        },
        "videoStreamSelections": {
          "type": "array",
          "description": "videoStreamSelections",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem"
          }
        }
      },
      "name": "ManipulationProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.DestinationProfileUpdateRequest": {
      "properties": {
        "destinationProfileId": {
          "type": "string"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.OutputDestinationProfileUpdate"
          }
        }
      },
      "name": "DestinationProfileUpdateRequest"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedLrsStatistics": {
      "properties": {
        "backupSelected": {
          "type": "boolean"
        },
        "egressStatistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedEgressStatistics"
        },
        "ingressStatistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedIngressStatistics"
        }
      },
      "name": "CombinedLrsStatistics"
    },
    "com.harmonicinc.vos.mux.model.common.Descriptor": {
      "required": [
        "hexaValue"
      ],
      "properties": {
        "hexaValue": {
          "type": "string",
          "description": "the buffer content of the descriptor in hexa value"
        }
      },
      "name": "Descriptor"
    },
    "com.harmonicinc.vos.app.configure.model.destination.ExternalKeyPublishingSettings": {
      "required": [
        "enable",
        "hostname",
        "path",
        "port",
        "protocol"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable publishing decryption key to external server"
        },
        "hostname": {
          "type": "string",
          "description": "External server hostname"
        },
        "keyUriPath": {
          "type": "string",
          "description": "Key Retrieval URI Path if useSpecifiedKeyUriPath is set to true"
        },
        "password": {
          "type": "string",
          "description": "Password for connecting to external server using basic authentication"
        },
        "path": {
          "type": "string",
          "description": "Publishing path"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "External server hostname"
        },
        "protocol": {
          "type": "string",
          "description": "Protocol for publishing decryption key",
          "enum": [
            "HTTP",
            "HTTPS",
            "RTMP",
            "RTMPS"
          ]
        },
        "username": {
          "type": "string",
          "description": "Username for connecting to external server using basic authentication"
        }
      },
      "name": "ExternalKeyPublishingSettings"
    },
    "com.harmonicinc.vos.mux.model.programlevel.InputIdentifier": {
      "required": [
        "inputObjectId",
        "inputType"
      ],
      "properties": {
        "inputObjectId": {
          "type": "string",
          "description": "The serviceId of the service for a transcoded service, sourceId for a passthrough service or the id of a primary program for a virtual program"
        },
        "inputProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Input Program number for a pass through service, MUST be null for a transcoded service and a virtual program"
        },
        "inputType": {
          "type": "string",
          "description": "Input Type : ENCODING_SERVICE, TS_SOURCE, VIRTUAL_PROGRAM",
          "enum": [
            "ENCODING_SERVICE",
            "TS_SOURCE",
            "VIRTUAL_PROGRAM",
            "LOCAL_PROGRAM"
          ]
        }
      },
      "name": "InputIdentifier"
    },
    "com.harmonicinc.vos.app.monitor.model.InputPid": {
      "required": [
        "inputPidConfigured",
        "inputPidUsed"
      ],
      "properties": {
        "inputPidConfigured": {
          "type": "integer",
          "format": "int32",
          "description": "Input PID configured at service creation"
        },
        "inputPidUsed": {
          "type": "integer",
          "format": "int32",
          "description": "Input PID currently in use"
        }
      },
      "name": "InputPid"
    },
    "com.harmonicinc.vos.app.monitor.model.OriginStatisticEntry": {
      "required": [
        "pullBitrate",
        "time"
      ],
      "properties": {
        "pullBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The pull bitrate (bps) of origin engine"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic"
        }
      },
      "name": "OriginStatisticEntry"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.Decision": {
      "required": [
        "assetIds",
        "priority",
        "transcodingProfiles"
      ],
      "properties": {
        "assetIds": {
          "type": "array",
          "description": "List of assets to transcode",
          "items": {
            "type": "string"
          }
        },
        "customGroomingProfile": {
          "description": "Profile for grooming",
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.GroomingProfile"
        },
        "groomingProfileIds": {
          "type": "array",
          "description": "List of grooming profiles to apply to assets",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "string",
          "description": "Job priority",
          "enum": [
            "URGENT",
            "RUSH",
            "NORMAL",
            "BACKLOG"
          ]
        },
        "transcodingProfiles": {
          "type": "array",
          "description": "List of transcoding profiles to apply to assets",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "Decision"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.checker.MissingAssetList": {
      "properties": {
        "channelId": {
          "type": "string"
        },
        "creationTime": {
          "type": "string"
        },
        "missingAssets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.checker.MissingAssetInfo"
          }
        }
      },
      "name": "MissingAssetList"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$LogEndpoint": {
      "properties": {
        "token": {
          "type": "string",
          "description": "Token of log aggregation system endpoint"
        },
        "url": {
          "type": "string",
          "description": "URL of log aggregation system endpoint"
        },
        "user": {
          "type": "string",
          "description": "User of log aggregation system endpoint"
        }
      },
      "name": "LogEndpoint"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.Job": {
      "properties": {
        "assetId": {
          "type": "string"
        },
        "completedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "completedTimestampUtc": {
          "type": "string"
        },
        "estimatedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "estimatedTimestampUtc": {
          "type": "string"
        },
        "fileTranscoder": {
          "type": "string",
          "enum": [
            "INTERNAL",
            "HARMONIC_CLOUD"
          ]
        },
        "groomingProfileId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "jobPriority": {
          "type": "string",
          "enum": [
            "RUSH",
            "NORMAL",
            "BACKLOG"
          ]
        },
        "jobStatus": {
          "type": "string",
          "enum": [
            "QUEUED",
            "PROCESSING",
            "FINISHED"
          ]
        },
        "jobType": {
          "type": "string",
          "enum": [
            "TRANSCODING",
            "PACKAGING",
            "VQ",
            "REINDEXING"
          ]
        },
        "sourceAsset": {
          "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.SourceAsset"
        },
        "sourceAssets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.SourceAsset"
          }
        },
        "startedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "startedTimestampUtc": {
          "type": "string"
        },
        "submittedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "submittedTimestampUtc": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.Task"
          }
        },
        "validationStatus": {
          "type": "string",
          "enum": [
            "VALIDATED",
            "REJECTED"
          ]
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.validation.ExternalValidation"
          }
        }
      },
      "name": "Job"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalPackagingSetting": {
      "properties": {
        "emptyDataUnitHoldBackInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Determines how far away from latest PCR will packager generate internal empty data units up to, 0 for automatic."
        }
      },
      "name": "GlobalPackagingSetting"
    },
    "com.harmonicinc.vos.labwizard.rest.model.LabWizardProfile": {
      "required": [
        "creationTime",
        "labels",
        "lastUpdatedTime",
        "name",
        "type"
      ],
      "properties": {
        "allowedAddon": {
          "description": "AllowedAddon of profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AllowedAddon"
        },
        "atsDestinationProfileProperties": {
          "description": "Properties of ATS destination profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ATSDestinationProfileProperties"
        },
        "attributeCustomizationProfileProperties": {
          "description": "Properties of HLS streams filtering",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.AttributeCustomizationProfileProperties"
        },
        "broadcastCBRProfileProperties": {
          "type": "object",
          "description": "not yet defined, will have a strong-typed profile"
        },
        "creationTime": {
          "type": "string",
          "description": "creation time of the profile"
        },
        "customerVersion": {
          "type": "string",
          "description": "The Customer Version of the profile"
        },
        "demuxProfileProperties": {
          "description": "Properties of DEMUX profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DemuxProfileProperties"
        },
        "destinationProfileProperties": {
          "description": "Properties of destination profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DestinationProfileProperties"
        },
        "drmTrackFilterProfileProperties": {
          "description": "Properties of DrmTrack Filter profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DrmTrackFilterProfileProperties"
        },
        "fileTranscodingProfileProperties": {
          "description": "Properties of File Transcoding profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.FileTranscodingProfileProperties"
        },
        "harmonicVersion": {
          "type": "string",
          "description": "The Harmonic Version of the profile"
        },
        "hlsGroupingProfileProperties": {
          "description": "Properties of HLS audio grouping profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties"
        },
        "id": {
          "type": "string",
          "description": "identifier of profile"
        },
        "information": {
          "description": "Information of  profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Information"
        },
        "inputStreamSelectionProfileProperties": {
          "description": "Properties of Input Stream Selection profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.InputStreamSelectionProfileProperties"
        },
        "iptvDestinationProfileProperties": {
          "description": "Properties of IPTV destination profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVDestinationProfileProperties"
        },
        "iptvProfileProperties": {
          "description": "Properties of iptv profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties"
        },
        "isCustomized": {
          "type": "boolean",
          "description": "If it is a customer created profile, it can be deleted in RT."
        },
        "isLiveEvent": {
          "type": "boolean"
        },
        "isReadonly": {
          "type": "boolean",
          "description": "If it is a readonly profile, no property can be modified"
        },
        "isTemplate": {
          "type": "boolean",
          "description": "If it is a template, it will not be allowed to be deleted, modified"
        },
        "labels": {
          "type": "array",
          "description": "Labels are used to specify identifying metadata",
          "items": {
            "type": "string"
          }
        },
        "lastUpdatedTime": {
          "type": "string",
          "description": "last update time of the profile"
        },
        "loopRecordProfileProperties": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.LoopRecordProfileProperties"
        },
        "manipulationProfileProperties": {
          "description": "Properties of Manipulation profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties"
        },
        "masterId": {
          "type": "string",
          "description": "The Master Id of the profile"
        },
        "minRequiredVosBundleVersion": {
          "type": "string"
        },
        "mmsTranscodeRequirements": {
          "type": "array",
          "description": "Optional field for defining the computing resource requirement on each transcode node. (only used for MMS)",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MmsTranscodeRequirement"
          }
        },
        "mptsDestinationProfileProperties": {
          "description": "Properties of MPTS destination profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MptsDestinationProfileProperties"
        },
        "mptsProfileProperties": {
          "description": "Properties of MPTS profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MptsProfileProperties"
        },
        "multiscreenProfileProperties": {
          "description": "Properties of multiscreen profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.MultiscreenProfileProperties"
        },
        "name": {
          "type": "string",
          "description": "Display name of profile"
        },
        "ottStbProfileProperties": {
          "description": "Properties of ott set top box profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties"
        },
        "processingRequirementProperties": {
          "description": "Optional field on defining the computing resource requirement on processing this profile. (only used for Transcoding profile)",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ProcessingRequirementProperties"
        },
        "pureOttPlayoutDestinationProfileProperties": {
          "description": "Properties of Pure OTT Playout destination profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutDestinationProfileProperties"
        },
        "pureOttPlayoutProfileProperties": {
          "description": "Properties of Pure OTT Playout profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutProfileProperties"
        },
        "stbProfileProperties": {
          "description": "Properties of set top box profile",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties"
        },
        "type": {
          "type": "string",
          "description": "The type of profiles",
          "enum": [
            "e_IPTV",
            "e_STB",
            "e_MULTISCREEN",
            "e_OTT_STB",
            "e_BOARDCAST_CBR",
            "e_MPTS",
            "e_DESTINATION",
            "e_IPTV_DESTINATION",
            "e_FILE_DESTINATION",
            "e_ATS_DESTINATION",
            "e_MULTISCREEN_PASSTHROUGH",
            "e_FILE_TRANSCODING",
            "e_MANIPULATION",
            "e_MPTS_DESTINATION",
            "e_PURE_OTT_PLAYOUT",
            "e_PURE_OTT_PLAYOUT_DESTINATION",
            "e_LOOP_RECORD",
            "e_IPTV_PASSTHROUGH",
            "e_DRMTRACK",
            "e_HLS_GROUPING",
            "e_DEMUX",
            "e_INPUT_STREAM_SELECTION",
            "e_HLS_ATTRIBUTE_CUSTOMIZATION"
          ]
        },
        "validateTime": {
          "type": "string",
          "description": "The Validate Time of the profile"
        },
        "validated": {
          "type": "boolean",
          "description": "Is profile valid?"
        },
        "version": {
          "type": "string",
          "description": "The minimal required VOS bundle version to use this profile"
        }
      },
      "name": "LabWizardProfile"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestNfsServerInstance": {
      "properties": {
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "RestNfsServerInstance"
    },
    "com.harmonicinc.vos.app.configure.model.SrtEncryptionParams": {
      "properties": {
        "encryptionKey": {
          "type": "string",
          "description": "Srt encryption key"
        },
        "encryptionType": {
          "type": "string",
          "description": "Srt encryption type",
          "enum": [
            "AES_128",
            "AES_192",
            "AES_256",
            "NO_ENCRYPTION"
          ]
        }
      },
      "name": "SrtEncryptionParams"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$MdsPropertiesConfig": {
      "properties": {
        "forceContentLength_HLS_SS_DASH": {
          "type": "boolean",
          "description": "Force Content-Length in HTTP response, i.e. deactivate Chunked Transfer Encoding"
        },
        "maxNumOfIndexFileCacheEntry": {
          "type": "integer",
          "format": "int32",
          "description": "Determine the cache limit for MDS to cache index files"
        }
      },
      "name": "MdsPropertiesConfig"
    },
    "com.harmonicinc.vos.labwizard.rest.model.IPTVProfileProperties$Data": {
      "properties": {
        "ccToDvbSubtitleConversionProperties": {
          "description": "properties related to CC to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.CcToDvbSubtitleConversionProperties"
        },
        "dataMaxBitrate": {
          "type": "integer",
          "format": "int32"
        },
        "descriptorMode": {
          "type": "string",
          "description": "Reserved",
          "enum": [
            "e_LEGACY",
            "e_MANUAL",
            "e_DYNAMIC_PASSTHROUGH"
          ]
        },
        "dpiProcessingProperties": {
          "description": "properties for SCTE35 processing options ",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DpiProcessingProperties"
        },
        "dvbSubtitleToDvbSubtitleConversionProperties": {
          "description": "properties related to DVB subtitle to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DvbSubtitleToDvbSubtitleConversionProperties"
        },
        "enableDvbSubtitleBurnIn": {
          "type": "boolean",
          "description": "Enable DVB Subtitle BurnIn"
        },
        "generateSmpte2038": {
          "type": "boolean",
          "description": "Generate Smpte2038 from VANC input"
        },
        "maxBitRate": {
          "type": "integer",
          "format": "int32",
          "description": "Max Bitrate of the data"
        },
        "outputBasePid": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecrated) Output base PID of the data"
        },
        "outputPid": {
          "type": "integer",
          "format": "int32",
          "description": "Output PID, normal range is 32..8190. If -1 is set, source grooming value (as set during discover process) will be used, or 582 (or higher) if not defined in source grooming (non-TS source for example). Any other value is not recommended and will behave as -1 in current version."
        },
        "outputPipPid": {
          "type": "integer",
          "format": "int32",
          "description": "PIP Output PID of the data"
        },
        "scte27ToDvbSubtitleConversionProperties": {
          "description": "properties related to SCTE27 to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Scte27ToDvbSubtitleConversionProperties"
        },
        "sourceLabel": {
          "type": "string",
          "description": "(Deprecrated) Label of the source stream to be processed"
        },
        "sourceLabels": {
          "type": "array",
          "description": "List of label of the source stream to be processed",
          "items": {
            "type": "string"
          }
        },
        "streamDescriptors": {
          "type": "array",
          "description": "Stream descriptor of data",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.StreamDescriptor"
          }
        },
        "teletextToDvbSubtitleConversionProperties": {
          "description": "properties related to teletext to DVB subtitle conversion",
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.TeletextToDvbSubtitleConversionProperties"
        }
      },
      "name": "Data"
    },
    "com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel": {
      "required": [
        "id",
        "indexerSegmentDurationInMinutes",
        "name",
        "segmentRetentionPeriodInMinutes",
        "timeshiftBuffer",
        "transcodingProfileId"
      ],
      "properties": {
        "cmafPreview": {
          "description": "CMAF (HLS) preview info",
          "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$PlaybackInfo"
        },
        "dashPreview": {
          "description": "Mpeg DASH preview info",
          "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$PlaybackInfo"
        },
        "hlsPreview": {
          "description": "HLS preview info",
          "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$PlaybackInfo"
        },
        "id": {
          "type": "string",
          "description": "ID of channel"
        },
        "indexerSegmentDurationInMinutes": {
          "type": "integer",
          "format": "int64",
          "description": "Segment duration in minutes"
        },
        "name": {
          "type": "string",
          "description": "Full name of channel"
        },
        "previewInfos": {
          "type": "array",
          "description": "Preview Info List",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$PlaybackInfo"
          }
        },
        "publishName": {
          "type": "string",
          "description": "Channel name in egress URL"
        },
        "segmentRetentionPeriodInMinutes": {
          "type": "integer",
          "format": "int64",
          "description": "Segment retention period in minutes"
        },
        "ssPreview": {
          "description": "Smooth Streaming preview info",
          "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$PlaybackInfo"
        },
        "timeshiftBuffer": {
          "description": "Status of the circular buffer for timeshift playback",
          "$ref": "#/definitions/com.harmonicinc.vos.app.unifiedoriginengine.channels.OriginChannel$TimeshiftBufferStatus"
        },
        "transcodingProfileId": {
          "type": "string",
          "description": "ID of transcoding profile"
        }
      },
      "name": "OriginChannel"
    },
    "com.harmonicinc.vos.mux.model.common.MuxFullService": {
      "required": [
        "destination",
        "muxSourcesToAdd",
        "outputProgramParameters",
        "service",
        "sources"
      ],
      "properties": {
        "controlState": {
          "type": "string",
          "enum": [
            "ON_AIR",
            "OFF_AIR"
          ]
        },
        "destination": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.Destination"
        },
        "muxSourcesToAdd": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputProgramParameters": {
          "$ref": "#/definitions/com.harmonicinc.vos.mux.model.programlevel.OutputProgramParameters"
        },
        "service": {
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.Service"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Source"
          }
        }
      },
      "name": "MuxFullService"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.request.LrsEgressPointCreateRequest": {
      "properties": {
        "backupPipeId": {
          "type": "string"
        },
        "cryptoSetting": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.CryptoSetting"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxOutputConnections": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pipeId": {
          "type": "string"
        },
        "platform": {
          "type": "string",
          "enum": [
            "AZURE_VM",
            "AWS",
            "GCP",
            "AKAMAI_LINODE"
          ]
        },
        "profileId": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "SRT",
            "RTMP"
          ]
        },
        "publicIpMode": {
          "type": "string",
          "enum": [
            "IPV4_ONLY",
            "IPV6_ONLY",
            "IPV4_IPV6"
          ]
        },
        "region": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "name": "LrsEgressPointCreateRequest"
    },
    "com.harmonicinc.vos.app.monitor.model.RtpInputStatisticsEntry": {
      "required": [
        "lostPackets",
        "orderErrors"
      ],
      "properties": {
        "lostPackets": {
          "type": "integer",
          "format": "int64",
          "description": "Number of lost RTP packets (based on RTP sequence number)"
        },
        "orderErrors": {
          "type": "integer",
          "format": "int64",
          "description": "Number or order errors "
        }
      },
      "name": "RtpInputStatisticsEntry"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ThumbnailPackagingProperties": {
      "required": [
        "dvrWindowSize",
        "imageSpriteInColumn",
        "imageSpriteInRow",
        "segmentRetentionPeriod",
        "thumbnailHeight",
        "thumbnailInterval"
      ],
      "properties": {
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control the availability of thumbnail segment files most recently added to the thumbnail index file (in seconds)."
        },
        "imageFormat": {
          "type": "string",
          "description": "The thumbnail format.",
          "enum": [
            "e_PNG",
            "e_JPG",
            "e_GIF"
          ]
        },
        "imageSpriteInColumn": {
          "type": "integer",
          "format": "int32",
          "description": "The image sprite per column for POTF."
        },
        "imageSpriteInRow": {
          "type": "integer",
          "format": "int32",
          "description": "The image sprite per row for POTF."
        },
        "playlistFileName": {
          "type": "string",
          "description": "The playlist file name."
        },
        "segmentRetentionPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The duration that the thumbnail segment files actually retain in the publishing server (in minutes)."
        },
        "thumbnailFileNamePattern": {
          "type": "string",
          "description": "The thumbnail file name pattern."
        },
        "thumbnailHeight": {
          "type": "integer",
          "format": "int32",
          "description": "The thumbnail height (expressed in pixels)."
        },
        "thumbnailInterval": {
          "type": "integer",
          "format": "int32",
          "description": "The thumbnail fragment duration (expressed in milliseconds)."
        },
        "webvttFileNamePattern": {
          "type": "string",
          "description": "The webvtt file name pattern."
        }
      },
      "name": "ThumbnailPackagingProperties"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsPipe": {
      "properties": {
        "backupCallerModeConfig": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.CallerModeConfig"
        },
        "backupIngress": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsIngress"
        },
        "callerModeConfig": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.CallerModeConfig"
        },
        "connectionMode": {
          "type": "string",
          "enum": [
            "LISTENER",
            "CALLER"
          ]
        },
        "customDnsName": {
          "type": "string"
        },
        "groomingEndpoint": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.GroomingEndpoint"
        },
        "ingress": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.LrsIngress"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxOutputConnections": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pendingRestart": {
          "type": "boolean"
        },
        "pipeId": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "publicIpMode": {
          "type": "string",
          "enum": [
            "IPV4_ONLY",
            "IPV6_ONLY",
            "IPV4_IPV6"
          ]
        },
        "redundancyMode": {
          "type": "string"
        },
        "resourceMode": {
          "type": "string",
          "enum": [
            "DEDICATED",
            "SHARED"
          ]
        },
        "state": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.statistics.CombinedLrsStatistics"
        },
        "streamConfig": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.pipe.StreamSetting"
          }
        },
        "version": {
          "type": "string"
        }
      },
      "name": "LrsPipe"
    },
    "com.harmonicinc.vos.playout.zookeeper.event.TemplateField": {
      "properties": {
        "boxNumber": {
          "type": "integer",
          "format": "int32",
          "description": "The number of the template box to be written"
        },
        "value": {
          "type": "string",
          "description": "The text to be written to the template box"
        }
      },
      "name": "TemplateField"
    },
    "com.harmonicinc.vos.app.atm.datatypes.SubtitleStreamSelection": {
      "properties": {
        "languageCodes": {
          "type": "array",
          "description": "Filtering subtitle with language codes, case intensive, match by same character number",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "SubtitleStreamSelection"
    },
    "com.harmonicinc.vos.app.configure.model.destination.OriginOutput": {
      "properties": {
        "ipNetworkAddress": {
          "type": "string",
          "description": "IP Network address"
        },
        "originOutputEndPoints": {
          "type": "array",
          "description": "List of end point mapped to packaging profile type",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.destination.OriginOutputEndPoint"
          }
        }
      },
      "name": "OriginOutput"
    },
    "com.harmonicinc.vos.app.configure.model.GlobalDailySyncTime": {
      "properties": {
        "dailySyncTime": {
          "type": "integer",
          "format": "int32",
          "example": "0",
          "description": "Daily sync time (UTC) for the timecode synchronization. Applicable mainly for 29.97/59.94 fps. Range 0..23, default is 0"
        }
      },
      "name": "GlobalDailySyncTime"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Trigger id for this trigger configuration"
        },
        "matchAny": {
          "type": "array",
          "description": "List of trigger properties for this trigger configuration",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.services.triggerManager.TriggerConf$TriggerProperties"
          }
        },
        "name": {
          "type": "string",
          "description": "Trigger name for this trigger configuration"
        }
      },
      "name": "TriggerConf"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.DolbyEAudioProperties": {
      "required": [
        "dolbyEFrameRate",
        "dolbyEProgramConfig"
      ],
      "properties": {
        "dolbyEFrameRate": {
          "type": "string",
          "description": "Dolby E Frame rate",
          "enum": [
            "DOLBYE_FR_23_98",
            "DOLBYE_FR_24",
            "DOLBYE_FR_25",
            "DOLBYE_FR_29_97",
            "DOLBYE_FR_30"
          ]
        },
        "dolbyEProgramConfig": {
          "type": "integer",
          "format": "int32",
          "description": "Number of programs at Dolby E audio stream"
        }
      },
      "name": "DolbyEAudioProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.OttStbProfileProperties$IndexPlaylistCustomization": {
      "properties": {
        "drmKeyUriParametersPattern": {
          "type": "string",
          "description": "DRM Key URI parameters pattern: Possible values: \r\n%r \r\n%t \r\n%p \r\nEmpty by default. \r\nExample: '%r%t%p'"
        }
      },
      "name": "IndexPlaylistCustomization"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.AvsProperties": {
      "required": [
        "avsLevel",
        "avsProfile"
      ],
      "properties": {
        "avsLevel": {
          "type": "string",
          "description": "Level of AVS stream",
          "enum": [
            "LEVEL_1_0_0_08_07",
            "LEVEL_1_0_0_08_15",
            "LEVEL_1_0_0_08_30",
            "LEVEL_2_0",
            "LEVEL_2_1_0_08_15",
            "LEVEL_2_1_0_08_30",
            "LEVEL_4_0",
            "LEVEL_4_2",
            "LEVEL_4_0_0_10_30",
            "LEVEL_4_0_0_12_30",
            "LEVEL_4_0_2_08_60",
            "LEVEL_6_0",
            "LEVEL_6_0_1_08_60",
            "LEVEL_6_2",
            "LEVEL_6_0_3_08_60",
            "LEVEL_6_0_5_08_60"
          ]
        },
        "avsProfile": {
          "type": "string",
          "description": "Profile of AVS stream",
          "enum": [
            "PROFILE_JIZHUN",
            "PROFILE_SHENZHAN",
            "PROFILE_YIDONG",
            "PROFILE_JIAQIANG",
            "PROFILE_GUANGBO"
          ]
        }
      },
      "name": "AvsProperties"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DolbyPlusAdvanceProperties": {
      "properties": {
        "bitstreamMode": {
          "type": "string",
          "description": "Audio Service Type within the Bit Stream",
          "enum": [
            "e_CompleteMain",
            "e_MusicAndEffects",
            "e_VisuallyImpaired",
            "e_HearingImpaired",
            "e_Dialog",
            "e_Commentary",
            "e_Emergency",
            "e_KaraokeVoiceOver"
          ]
        },
        "dcHighpassFilter": {
          "type": "boolean",
          "description": "DC high pass filter. If not specified, it means auto"
        },
        "dialogueNormalization": {
          "type": "integer",
          "format": "int32",
          "description": "Dialogue normalization. If not specified, it means auto. it should be negative"
        },
        "digitalDeEmphasis": {
          "type": "boolean",
          "description": "Digital de-emphasis. If not specified, it means auto"
        },
        "dolbySurroundExMode": {
          "type": "string",
          "description": "Dolby Surround EX mode. If not specified, it means auto",
          "enum": [
            "e_NotIndicated",
            "e_Disabled",
            "e_Enabled"
          ]
        },
        "dolbySurroundMode": {
          "type": "string",
          "description": "Dolby Surround mode. If not specified, it means auto",
          "enum": [
            "e_NotIndicated",
            "e_Disabled",
            "e_Enabled"
          ]
        },
        "fallbackBitstreamMode": {
          "type": "string",
          "description": "Fallback Audio Service Type within the Bit Stream",
          "enum": [
            "e_CompleteMain",
            "e_MusicAndEffects",
            "e_VisuallyImpaired",
            "e_HearingImpaired",
            "e_Dialog",
            "e_Commentary",
            "e_Emergency",
            "e_KaraokeVoiceOver"
          ]
        },
        "fallbackDialogueNormalization": {
          "type": "integer",
          "format": "int32",
          "description": "Fallback Dialogue normalization. If not specified, device default value will be used as fallback"
        },
        "fallbackLineModeDrc": {
          "type": "string",
          "description": "Fallback Line mode DRC. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "fallbackLoRoCenterMixLevel": {
          "type": "string",
          "description": "Fallback Lo/Ro Center mix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackLoRoSurroundMixLevel": {
          "type": "string",
          "description": "Fallback Lo/Ro surround mix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackLtRtCenterMixLevel": {
          "type": "string",
          "description": "Fallback Lt/Rt Center mix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackLtRtSurroundMixLevel": {
          "type": "string",
          "description": "Fallback Lt/Rt surround mix level. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "fallbackPhaseShift": {
          "type": "boolean",
          "description": "Fallback 90-degree phase shift. If not specified, device default value will be used as fallback"
        },
        "fallbackRfModeDrc": {
          "type": "string",
          "description": "Fallback RF mode DRC. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "fallbackStereoDownmixPreference": {
          "type": "string",
          "description": "Fallback Stereo downmix preference. If not specified, device default value will be used as fallback",
          "enum": [
            "e_Auto",
            "e_NotIndicated",
            "e_ProLogic",
            "e_Stereo",
            "e_ProLogicII"
          ]
        },
        "fallbackSurroundAttenuation": {
          "type": "boolean",
          "description": "Fallback 3 dB attenuation. If not specified, device default value will be used as fallback"
        },
        "followInputAudioCodingMode": {
          "type": "boolean"
        },
        "heightTrim": {
          "type": "string",
          "description": "heightTrim is E-AC3 metadata in the E-AC3 stream. This metadata supports -3db to -12db in 3db steps. Default: -3db.",
          "enum": [
            "e_Auto",
            "e_Neg_3",
            "e_Neg_6",
            "e_Neg_9",
            "e_Neg_12"
          ]
        },
        "lfeChannel": {
          "type": "boolean",
          "description": "Specify whether to enable Lfe channel"
        },
        "lfeLowPassFilter": {
          "type": "boolean",
          "description": "Lfe low pass filter. If not specified, it means auto"
        },
        "lineModeDrc": {
          "type": "string",
          "description": "Line mode DRC. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "loRoCenterMixLevel": {
          "type": "string",
          "description": "Lo/Ro Center mix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "loRoSurroundMixLevel": {
          "type": "string",
          "description": "Lo/Ro surround mix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "ltRtCenterMixLevel": {
          "type": "string",
          "description": "Lt/Rt Center mix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_30",
            "e_MixLevel_15",
            "e_MixLevel_00",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "ltRtSurroundMixLevel": {
          "type": "string",
          "description": "Lt/Rt surround mix level. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_MixLevel_M15",
            "e_MixLevel_M30",
            "e_MixLevel_M45",
            "e_MixLevel_M60",
            "e_MixLevel_MINF"
          ]
        },
        "objectBasedAudio": {
          "type": "boolean",
          "description": "Flag for deciding when channel mode is Passthrough, whether E-AC3 output should support 5.1.4 or not, i.e. whether to enable DDP-JOC encoder.  Default: false"
        },
        "phaseShift": {
          "type": "boolean",
          "description": "90-degree phase shift. If not specified, it means auto"
        },
        "rfModeDrc": {
          "type": "string",
          "description": "RF mode DRC. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_None",
            "e_FilmStandard",
            "e_FilmLight",
            "e_MusicStandard",
            "e_MusicLight",
            "e_Speech"
          ]
        },
        "stereoDownmixPreference": {
          "type": "string",
          "description": "Stereo downmix preference. If not specified, it means auto",
          "enum": [
            "e_Auto",
            "e_NotIndicated",
            "e_ProLogic",
            "e_Stereo",
            "e_ProLogicII"
          ]
        },
        "surroundAttenuation": {
          "type": "boolean",
          "description": "3 dB attenuation. If not specified, it means auto"
        },
        "surroundTrim": {
          "type": "string",
          "description": "surroundTrim is E-AC3 metadata in the E-AC3 stream. This metadata supports 0db to -9db in 3db steps. Default: -3db",
          "enum": [
            "e_Auto",
            "e_Zero",
            "e_Neg_3",
            "e_Neg_6",
            "e_Neg_9"
          ]
        },
        "tSMultiplexingMode": {
          "type": "string",
          "description": "TS Mux Standard",
          "enum": [
            "e_ATSC",
            "e_DVB"
          ]
        }
      },
      "name": "DolbyPlusAdvanceProperties"
    },
    "com.harmonicinc.vos.app.configure.model.fullService.FullServiceIds": {
      "properties": {
        "destinationsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceId": {
          "type": "string"
        },
        "sourcesIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "name": "FullServiceIds"
    },
    "com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$AudioStreamSelectionItem$AudiobitrateRange": {
      "properties": {
        "maxBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "maxBitrateInbps"
        },
        "minBitrateInbps": {
          "type": "integer",
          "format": "int32",
          "description": "minBitrateInbps"
        }
      },
      "name": "AudiobitrateRange"
    },
    "com.harmonicinc.vos.labwizard.rest.model.PureOttPlayoutDestinationProfileProperties$HlsPackagingProperties": {
      "required": [
        "dvrWindowSize",
        "variantPlaylistFileName"
      ],
      "properties": {
        "dvrWindowSize": {
          "type": "integer",
          "format": "int32",
          "description": "Control the availability of media segment files most recently added to the index file (in seconds)."
        },
        "scte35Signaling": {
          "type": "string",
          "description": "The way of handling SCTE35 messages. 'NONE' means ignoring the messages; 'BASE64' means writing the SCTE35 data to playlist in base64 format.; 'STANDARD' means writing the SCTE35 data to playlist in SCTE35 Standard format; 'GOOGLE DOUBLE CLICK' means writing the SCTE35 data to playlist in Google Double Click format; 'UK 1 means writing the SCTE35 data to playlist in UK 1 format; Default is 'NONE'",
          "enum": [
            "e_NONE",
            "e_STANDARD"
          ]
        },
        "variantPlaylistFileName": {
          "type": "string",
          "description": "The variant playlist lists the URLs of each variant stream to allow clients to switch between encodings dynamically. This setting specifies the file name of the variant playlist excluding file extension (i.e. .m3u8). For example, if this value is set to 'master' (excluding ''), the actual file name will be 'master.m3u8'."
        }
      },
      "name": "HlsPackagingProperties"
    },
    "com.harmonicinc.vos.app.sourcemonitor.model.ZixiSource": {
      "properties": {
        "harmonicUplinkSetting": {
          "description": "Basic setting of harmonic uplink",
          "$ref": "#/definitions/com.harmonicinc.vos.app.sourcemonitor.model.HarmonicUplinkSetting"
        }
      },
      "name": "ZixiSource"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.LlcuIndexingConfig": {
      "properties": {
        "dropInvalidDataStreamUnits": {
          "type": "boolean"
        },
        "enableDebugLog": {
          "type": "boolean"
        },
        "enableVelocimeterActivityDump": {
          "type": "boolean"
        },
        "exactFrameExtraction": {
          "type": "boolean"
        },
        "indexingSpeedInKBps": {
          "type": "integer",
          "format": "int32"
        },
        "maxConcurrentIndexingJobs": {
          "type": "integer",
          "format": "int32"
        },
        "maxIndexingJobsPerNode": {
          "type": "integer",
          "format": "int32"
        },
        "runnableNodeTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timestampJumpThresholdToStop": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "LlcuIndexingConfig"
    },
    "java.net.URL": {
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "name": "URL"
    },
    "com.harmonicinc.vos.labwizard.rest.model.SignalingTables": {
      "properties": {
        "tables": {
          "type": "array",
          "description": "Signaling Tables",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.SignalingTable"
          }
        }
      },
      "name": "SignalingTables"
    },
    "com.harmonicinc.vos.asset.acquisition.model.fileserver.FileServerInputAssetDetails": {
      "properties": {
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "DOWNLOADING",
            "FAILED",
            "COMPLETED"
          ]
        }
      },
      "name": "FileServerInputAssetDetails"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.ToggleSourceInput": {
      "required": [
        "inputRankIndex",
        "serviceId",
        "sourceId"
      ],
      "properties": {
        "inputRankIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Input rank to switch to. Value 1 or 2."
        },
        "serviceId": {
          "type": "string",
          "description": "Id of the service this command applies to."
        },
        "sourceId": {
          "type": "string",
          "description": "Id of the source this command applies to. This source shall contain 2 inputs."
        }
      },
      "name": "ToggleSourceInput"
    },
    "com.harmonicinc.vos.labwizard.rest.model.TeletextToTtmlConversionProperties": {
      "required": [
        "enable",
        "language",
        "subtitlePurpose"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable teletext to ttml conversion"
        },
        "language": {
          "type": "string",
          "description": "ISO 639 language code"
        },
        "subtitlePurpose": {
          "type": "integer",
          "format": "int32",
          "description": "Subtitle purpose"
        }
      },
      "name": "TeletextToTtmlConversionProperties"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$LogShipper": {
      "properties": {
        "resource": {
          "description": "The resources for log shipper",
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.AccessLogToLokiConfig$LogShipperResource"
        }
      },
      "name": "LogShipper"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsPlayReadyResource": {
      "properties": {
        "leafLicense": {
          "type": "array",
          "description": "The leafLicense of DrmFixedSsPlayReadyResource",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsPlayReadyResource$LeafLicense"
          }
        },
        "resourceId": {
          "type": "string",
          "description": "The resourceId of DrmFixedSsPlayReadyResource"
        },
        "rootLicense": {
          "description": "The rootLicense of DrmFixedSsPlayReadyResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsPlayReadyResource$RootLicense"
        }
      },
      "name": "DrmFixedSsPlayReadyResource"
    },
    "com.harmonicinc.vos.app.configure.model.service.SubService": {
      "required": [
        "profileId"
      ],
      "properties": {
        "addons": {
          "description": "Add-ons to a service; e.g. Logo",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ProfileAddons"
        },
        "destinationsId": {
          "type": "array",
          "description": "List of destination connected to a service",
          "items": {
            "type": "string"
          }
        },
        "dynamicProgramMode": {
          "type": "string",
          "description": "Specify the dynamic program mode of a service",
          "enum": [
            "ON",
            "OFF"
          ]
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a service in UUID format"
        },
        "labels": {
          "type": "array",
          "description": "Labels attached to service for identification",
          "items": {
            "type": "string"
          }
        },
        "profileId": {
          "type": "string",
          "description": "Id of profile used by a service"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of a service"
        }
      },
      "name": "SubService"
    },
    "com.harmonicinc.vos.mux.monitor.model.sdi.Resolution": {
      "required": [
        "height",
        "width"
      ],
      "properties": {
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "Resolution"
    },
    "com.harmonicinc.vos.app.monitor.model.OriginStatistic": {
      "required": [
        "originStatisticEntryList",
        "packagingFormat"
      ],
      "properties": {
        "originStatisticEntryList": {
          "type": "array",
          "description": "The origin statistic",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.monitor.model.OriginStatisticEntry"
          }
        },
        "packagingFormat": {
          "type": "string",
          "description": "Packaging format of the origin request"
        }
      },
      "name": "OriginStatistic"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsResource": {
      "properties": {
        "fixedIv": {
          "type": "string",
          "description": "The fixedIv of DrmFixedSsResource"
        },
        "fixedKey": {
          "type": "string",
          "description": "The fixedKey of DrmFixedSsResource"
        },
        "fixedKeyId": {
          "type": "string",
          "description": "The fixedKeyId of DrmFixedSsResource"
        },
        "resourceId": {
          "type": "string",
          "description": "The resourceId of DrmFixedSsResource"
        },
        "ssDrm": {
          "description": "The ssDrm of DrmFixedSsResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsResource$SsDrm"
        },
        "ssDrms": {
          "type": "array",
          "description": "The SsDrms list of DrmFixedSsResource",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsResource$SsDrm"
          }
        }
      },
      "name": "DrmFixedSsResource"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.datamodel.PreWarmScheduleResponse": {
      "properties": {
        "hasNext": {
          "type": "boolean"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "schedule": {
          "$ref": "#/definitions/com.harmonicinc.unifiedoriginenginelibrary.settings.PreWarmScheduleInternal"
        }
      },
      "name": "PreWarmScheduleResponse"
    },
    "com.harmonicinc.vos.labwizard.rest.model.DrmTrackFilterProfileProperties": {
      "required": [
        "drmTrackFilterProperties",
        "name"
      ],
      "properties": {
        "drmTrackFilterProperties": {
          "type": "array",
          "description": "List of drm track filter properties",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.DrmTrackFilterProperty"
          }
        },
        "name": {
          "type": "string",
          "description": "DRM track filter name"
        }
      },
      "name": "DrmTrackFilterProfileProperties"
    },
    "com.harmonicinc.vos.asset.acquisition.model.OverallJobStatistics": {
      "properties": {
        "averageQueueTimeInSec": {
          "type": "integer",
          "format": "int64"
        },
        "errors": {
          "type": "integer",
          "format": "int64"
        },
        "jobsInQueue": {
          "type": "integer",
          "format": "int32"
        },
        "jobsNeedDecision": {
          "type": "integer",
          "format": "int32"
        },
        "jobsProcessing": {
          "type": "integer",
          "format": "int32"
        },
        "overallJobs": {
          "type": "integer",
          "format": "int64"
        },
        "titlesInLibrary": {
          "type": "integer",
          "format": "int64"
        },
        "transcodedHours": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "OverallJobStatistics"
    },
    "com.harmonicinc.vos.asset.acquisition.model.GroomingAudioTrack": {
      "properties": {
        "audioChannels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.model.AudioChannel"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "streamName": {
          "type": "string"
        },
        "trackId": {
          "type": "integer",
          "format": "int32"
        },
        "trackType": {
          "type": "string",
          "enum": [
            "PCM",
            "DOLBY_E",
            "DOLBY_AC3",
            "AAC",
            "MPEG1"
          ]
        }
      },
      "name": "GroomingAudioTrack"
    },
    "com.harmonicinc.vos.app.configure.model.service.VideoInsertionAddon": {
      "properties": {
        "dpiTierSetting": {
          "description": "DPI tier setting, to configure allowing incoming SCTE35 messages only from the specified list of tier values",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.DpiTierSetting"
        },
        "esamServiceSetting": {
          "description": "ESAM service setting",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.service.ESAM_ServiceSetting"
        }
      },
      "name": "VideoInsertionAddon"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestGeneralTrack": {
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "durationMs": {
          "type": "integer",
          "format": "int64"
        },
        "durationTimecode": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "RestGeneralTrack"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.RestCuePointsInfo": {
      "properties": {
        "data": {
          "type": "string"
        },
        "timeOffset": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "OUT"
          ]
        }
      },
      "name": "RestCuePointsInfo"
    },
    "com.harmonicinc.vos.app.configure.model.IrdetoLicense": {
      "required": [
        "operatorId",
        "url"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of an image file"
        },
        "labels": {
          "type": "array",
          "description": "Labels are used to specify identifying metadata",
          "items": {
            "type": "string"
          }
        },
        "lastModified": {
          "type": "integer",
          "format": "int64",
          "description": "Date of image last modification on remote server"
        },
        "operatorId": {
          "type": "integer",
          "format": "int32",
          "description": "Operator ID provided by Irdeto (must match the one specified in the license file)"
        },
        "password": {
          "type": "string",
          "description": "Password to use with the file server"
        },
        "url": {
          "type": "string",
          "description": "URL to download the image"
        },
        "username": {
          "type": "string",
          "description": "Username to use with the file server"
        }
      },
      "name": "IrdetoLicense"
    },
    "com.harmonicinc.vos.app.configure.model.source.AsiInput": {
      "required": [
        "asiCard",
        "asiPort"
      ],
      "properties": {
        "asiCard": {
          "type": "integer",
          "format": "int32",
          "description": "Specify which ASI card to receive the input (value 0 for card 1, and so on)."
        },
        "asiPort": {
          "type": "integer",
          "format": "int32",
          "description": "Specify which port of the ASI card to receive the input (value 0 for port 1, and so on)."
        },
        "automaticGrooming": {
          "type": "boolean",
          "description": "Enable automatic grooming. Might not be supported by all input types."
        },
        "grooming": {
          "description": "Essential metadata for the system to intelligently route the input",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.InputGrooming"
        },
        "pcrConstraints": {
          "description": "Customize the PCR constraints for TS inputs (like IP/SRT/CLOUD). Once set, the system will use customized constraints to check the PCR values and end-to-end latency could be increased.",
          "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.PcrConstraints"
        },
        "programNum": {
          "type": "integer",
          "format": "int32",
          "description": "Program number of the input stream. Only required in MPTS input."
        },
        "sporadicVideoFrames": {
          "type": "boolean",
          "description": "Specify that sporadic video frames input. Video frames can come in bursts or at random intervals. Typical use case is music streams with still video content."
        },
        "tsProgramNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the maximum number of programs that can be transcoded from this input."
        }
      },
      "name": "AsiInput"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.OriginOutput": {
      "properties": {
        "packageInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.asset.acquisition.rest.model.PackageInfo"
          }
        }
      },
      "name": "OriginOutput"
    },
    "com.harmonicinc.vos.mux.monitor.model.sdi.FrameRate": {
      "required": [
        "denominator",
        "numerator"
      ],
      "properties": {
        "denominator": {
          "type": "integer",
          "format": "int32"
        },
        "numerator": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "FrameRate"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedResource": {
      "properties": {
        "dashResource": {
          "description": "The dashResource of DrmFixedResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedDashResource"
        },
        "hlsResource": {
          "description": "The hlsResource of DrmFixedResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedHlsResource"
        },
        "id": {
          "type": "string",
          "description": "The id of DrmFixedResource"
        },
        "packagingType": {
          "type": "string",
          "description": "The packagingType of DrmFixedResource",
          "enum": [
            "e_HLS",
            "e_DASH",
            "e_SS",
            "e_SS_PLAYREADY"
          ]
        },
        "ssPlayReadyResource": {
          "description": "The ssPlayReadyResource of DrmFixedResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsPlayReadyResource"
        },
        "ssResource": {
          "description": "The ssResource of DrmFixedResource",
          "$ref": "#/definitions/com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedSsResource"
        }
      },
      "name": "DrmFixedResource"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.ScaleDownCondition": {
      "required": [
        "numConsecutiveCycles",
        "responseLatencyThreshold"
      ],
      "properties": {
        "numConsecutiveCycles": {
          "type": "integer",
          "format": "int32",
          "description": "The number of consecutive sample periods with response latency under threshold that will actually trigger a scale-down"
        },
        "responseLatencyThreshold": {
          "type": "number",
          "format": "double",
          "description": "The value of the server response latency (Time to first response byte) to consider a scale-down"
        }
      },
      "name": "ScaleDownCondition"
    },
    "com.harmonicinc.vos.labwizard.rest.model.STBProfileProperties$DPI": {
      "properties": {
        "filterMode": {
          "type": "string",
          "description": "Filter Mode of DPI, pass all or drop all",
          "enum": [
            "e_PASS_ALL",
            "e_DROP_ALL"
          ]
        },
        "handleSplicing": {
          "type": "boolean",
          "description": "Should the transcoder handle splicing"
        },
        "handleStreamConditioning": {
          "type": "boolean",
          "description": "Should the transcoder handle stream conditioning at splice point to prepare for destination device"
        }
      },
      "name": "DPI"
    },
    "com.harmonicinc.vos.app.scrambling.drm.model.DrmFixedHlsResource$KeyAttribute": {
      "properties": {
        "attributeName": {
          "type": "string",
          "description": "The attributeName of DrmFixedHlsResource"
        },
        "attributeValue": {
          "type": "string",
          "description": "The attributeValue of DrmFixedHlsResource"
        }
      },
      "name": "KeyAttribute"
    },
    "com.harmonicinc.vos.syndicate.cloud.hms.model.billing.CloudSubscriptionAccountLocationMapping": {
      "properties": {
        "cloudAccount": {
          "type": "string",
          "description": "Cloud Account"
        },
        "cloudAccountDetail": {
          "description": "Cloud Account Detail",
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.billing.CloudAccountDetail"
        },
        "cloudPlatform": {
          "type": "string",
          "description": "Cloud Platform"
        },
        "displayName": {
          "type": "string",
          "description": "Display Name"
        },
        "profileId": {
          "type": "string",
          "description": "Profile ID"
        },
        "saasService": {
          "type": "string",
          "description": "SaaS Service"
        },
        "saasServiceDetail": {
          "description": "Saas Service Detail",
          "$ref": "#/definitions/com.harmonicinc.vos.syndicate.cloud.hms.model.billing.SaasServiceDetail"
        }
      },
      "name": "CloudSubscriptionAccountLocationMapping"
    },
    "com.harmonicinc.vos.app.uplink.hub.benchmark.TestReceiver": {
      "properties": {
        "id": {
          "type": "string"
        },
        "privateIp": {
          "type": "string"
        },
        "privatePort": {
          "type": "integer",
          "format": "int32"
        },
        "publicIp": {
          "type": "string"
        },
        "publicPort": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "CONFIGURED",
            "ERROR"
          ]
        }
      },
      "name": "TestReceiver"
    },
    "com.harmonicinc.vos.app.configure.model.source.DvbS2XPort": {
      "required": [
        "lnbType",
        "oscillatorFrequency"
      ],
      "properties": {
        "frequencySpectrum": {
          "type": "string",
          "description": "22 kHz Tone. Applicable only when lnbType is UNIVERSAL or UNIVERSAL_WIDE.",
          "enum": [
            "LOW_BAND",
            "HIGH_BAND"
          ]
        },
        "lnbType": {
          "type": "string",
          "description": "LNB Type.",
          "enum": [
            "C_BAND",
            "KU_BAND",
            "UNIVERSAL",
            "UNIVERSAL_WIDE"
          ]
        },
        "oscillatorFrequency": {
          "type": "number",
          "format": "double",
          "description": "Local oscillator frequency in GHz. Decimal range depends on LNB Type. For C_BAND, range from 5Ghz to 6Ghz. For KU_BAND range from 8.5Ghz to 13Ghz. Not applicable for UNIVERSAL and UNIVERSAL_WIDE."
        }
      },
      "name": "DvbS2XPort"
    },
    "com.harmonicinc.vos.app.configure.model.source.AudioTrackLocator": {
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Specify how to locate an audio track"
        },
        "channelList": {
          "type": "array",
          "description": "For SMPTE302M Audio channel selection on audio stream and audio channels",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.configure.model.source.Smpte302mChannelList"
          }
        },
        "pid": {
          "type": "integer",
          "format": "int32",
          "description": "Pid of the audio stream"
        }
      },
      "name": "AudioTrackLocator"
    },
    "com.harmonicinc.vos.app.configure.model.source.SrtCloudSourceSettings": {
      "properties": {
        "latency": {
          "type": "integer",
          "format": "int32",
          "description": "Latency"
        }
      },
      "name": "SrtCloudSourceSettings"
    },
    "com.harmonicinc.vos.app.configure.model.service.ServiceSdtConfig": {
      "name": "ServiceSdtConfig"
    },
    "com.harmonicinc.vos.app.configure.model.source.DelayLine_Input": {
      "required": [
        "delay",
        "recordId"
      ],
      "properties": {
        "delay": {
          "type": "integer",
          "format": "int64",
          "description": "Delay in milliseconds. Minimum value is 180000 (ie 3 minutes). It shall be lower than the recording buffer size of the corresponding Loop Record service."
        },
        "delayUpdate": {
          "type": "boolean",
          "description": "Enables a scheduled update of the delay, for example for next daylight saving time transition. nextDelay and nextDelayActivationDate shall be configured."
        },
        "nextDelay": {
          "type": "integer",
          "format": "int64",
          "description": "Next delay value in milliseconds"
        },
        "nextDelayActivationDate": {
          "type": "string",
          "description": "UTC date when the next delay will be applied. It is expressed by a string with the following format \"yyyy-mm-dd hh:mm:ss\" ( ex: 2024-11-20 04:00:00 )."
        },
        "recordId": {
          "type": "string",
          "description": "Id of the Loop Record service that is recording the stream to play with a delay."
        }
      },
      "name": "DelayLine_Input"
    },
    "com.harmonicinc.vos.app.configure.model.source.DvbS2XTuner": {
      "required": [
        "carrierFrequency",
        "plsCode",
        "polarization",
        "symbolRate"
      ],
      "properties": {
        "carrierFrequency": {
          "type": "number",
          "format": "double",
          "description": "Carrier frequency. Decimal range. Minimum : 3. Maximum : 4.2. Steps : 0.000001."
        },
        "inversion": {
          "type": "string",
          "enum": [
            "AUTO",
            "INVERTED",
            "NORMAL"
          ]
        },
        "modulationAndFec": {
          "type": "string",
          "enum": [
            "QPSK_1_2",
            "QPSK_1_4",
            "QPSK_1_3",
            "QPSK_2_5",
            "QPSK_3_5",
            "QPSK_2_3",
            "QPSK_3_4",
            "QPSK_4_5",
            "QPSK_5_6",
            "QPSK_7_8",
            "QPSK_8_9",
            "QPSK_9_10",
            "QPSK_13_45",
            "QPSK_9_20",
            "QPSK_11_20",
            "QPSK_11_45",
            "QPSK_4_15",
            "QPSK_14_45",
            "QPSK_7_15",
            "QPSK_8_15",
            "QPSK_32_45",
            "_8PSK_3_5",
            "_8PSK_2_3",
            "_8PSK_3_4",
            "_8PSK_5_6",
            "_8PSK_8_9",
            "_8PSK_9_10",
            "_8PSK_23_36",
            "_8PSK_25_36",
            "_8PSK_13_18",
            "_8PSKL_5_9",
            "_8PSKL_26_45",
            "_8PSK_7_15",
            "_8PSK_8_15",
            "_8PSK_26_45",
            "_8PSK_32_45",
            "_16APSK_2_3",
            "_16APSK_3_4",
            "_16APSK_4_5",
            "_16APSK_5_6",
            "_16APSK_8_9",
            "_16APSK_9_10",
            "_16APSK_26_45",
            "_16APSK_3_5",
            "_16APSK_28_45",
            "_16APSK_23_36",
            "_16APSK_25_36",
            "_16APSK_13_18",
            "_16APSK_7_9",
            "_16APSK_77_90",
            "_16APSKL_5_9",
            "_16APSKL_8_15",
            "_16APSKL_1_2",
            "_16APSKL_3_5",
            "_16APSKL_2_3",
            "_16APSK_7_15",
            "_16APSK_8_15",
            "_16APSK_32_45",
            "_32APSK_32_45",
            "_32APSK_3_4",
            "_32APSK_4_5",
            "_32APSK_5_6",
            "_32APSK_8_9",
            "_32APSK_9_10",
            "_32APSK_11_15",
            "_32APSK_7_9",
            "_32APSKL_2_3",
            "_32APSK_2_3"
          ]
        },
        "pilots": {
          "type": "string",
          "enum": [
            "AUTO",
            "ON",
            "OFF"
          ]
        },
        "plsCode": {
          "type": "integer",
          "format": "int32",
          "description": "Physical Layer Scrambling Seed. Integer range. Minimum : 0. Maximum : 262141. Steps : 1."
        },
        "polarization": {
          "type": "string",
          "description": "Polarization. Possible values : VERTICAL (input #1) or HORIZONTAL (input #3).",
          "enum": [
            "HORIZONTAL",
            "VERTICAL"
          ]
        },
        "rollOff": {
          "type": "string",
          "enum": [
            "AUTO",
            "RO_0_05",
            "RO_0_10",
            "RO_0_15",
            "RO_0_20",
            "RO_0_25",
            "RO_0_35"
          ]
        },
        "symbolRate": {
          "type": "number",
          "format": "double",
          "description": "Symbol rate. Decimal range. Minimum : 1. Maximum : 64. Steps : 0.000001."
        }
      },
      "name": "DvbS2XTuner"
    },
    "com.harmonicinc.vos.app.configure.model.source.AudioPreferredProperty": {
      "properties": {
        "iso639AudioType": {
          "type": "string",
          "description": "Preferred audio ISO639 type. Set to null to match any type",
          "enum": [
            "UNDEFINED",
            "CLEAN_EFFECTS",
            "HEARING_IMPAIRED",
            "VISUAL_IMPAIRED_COMMENTARY",
            "PRIMARY",
            "NATIVE"
          ]
        },
        "language": {
          "type": "string",
          "description": "Preferred audio track language. Expects 3 letter abbreviation based on ISO639 (e.g. ENG, FRA) and set to null to match any language"
        }
      },
      "name": "AudioPreferredProperty"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceSecondaryElement": {
      "properties": {
        "secondaryData": {
          "description": "sequence secondary event properties",
          "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.SequenceSecondaryProperties"
        }
      },
      "name": "SequenceSecondaryElement"
    },
    "com.harmonicinc.vos.app.configure.model.service.ProfileAddons": {
      "name": "ProfileAddons"
    },
    "com.harmonicinc.vos.backuprestore.rest.StartScheduledBackupRequest": {
      "properties": {
        "initialDelayMs": {
          "type": "integer",
          "format": "int64"
        },
        "periodMs": {
          "type": "integer",
          "format": "int64"
        }
      },
      "name": "StartScheduledBackupRequest"
    },
    "com.harmonicinc.vos.app.configure.model.source.CspCoreProperties": {
      "properties": {
        "insertionPeriodMs": {
          "type": "integer",
          "format": "int32",
          "description": "insertion Period Ms"
        },
        "segmentationEventId": {
          "type": "integer",
          "format": "int64",
          "description": "segmentation Event Id String"
        },
        "segmentationUpid": {
          "type": "string",
          "description": "segmentation Upid"
        },
        "segmentationUpidType": {
          "type": "integer",
          "format": "int32",
          "description": "segmentation Upid Type"
        }
      },
      "name": "CspCoreProperties"
    },
    "com.harmonicinc.vos.app.configure.model.source.TeletextDescriptorData": {
      "required": [
        "language",
        "teletextMagazineNumber",
        "teletextPageNumber",
        "teletextType"
      ],
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "Optional Country Code to append to the Language Code"
        },
        "defaultSubtitle": {
          "type": "boolean",
          "description": "Whether or not the teletext stream is the stream for default subtitle"
        },
        "language": {
          "type": "string",
          "description": "Language code of data stream"
        },
        "skipProcessing": {
          "type": "boolean",
          "description": "Indicate this teletext stream will not be processed and will not be mux."
        },
        "streamName": {
          "type": "string",
          "description": "Custom stream name for Teletext"
        },
        "teletextHexPageNum": {
          "type": "string",
          "description": "Verbatim hexadecimal page number of teletext stream - should be used if not null"
        },
        "teletextMagazineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Magazine number of teletext stream in the range 1..8"
        },
        "teletextPageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Obsolete decimal page number of teletext stream - does not support pages in the range [A-F]"
        },
        "teletextType": {
          "type": "integer",
          "format": "int32",
          "description": "Type of teletext"
        }
      },
      "name": "TeletextDescriptorData"
    },
    "com.harmonicinc.vos.app.atm.rest.model.AtmAutoScalingConfig$ScaleDownPolicy": {
      "required": [
        "periodSeconds",
        "value"
      ],
      "properties": {
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The time in seconds for which the policy should hold true."
        },
        "type": {
          "type": "string",
          "description": "Allowed change in either number of pods or percentage of current replicas.",
          "enum": [
            "Pods",
            "Percent"
          ]
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "The value for the policy."
        }
      },
      "name": "ScaleDownPolicy"
    },
    "com.harmonicinc.vos.labwizard.rest.model.Information": {
      "properties": {
        "createUser": {
          "type": "string",
          "description": "The create user of the profile version"
        },
        "createUserEmail": {
          "type": "string",
          "description": "The create user email of the profile version"
        },
        "description": {
          "type": "array",
          "description": "List of properties changes",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.Information$ProfileChanges"
          }
        },
        "note": {
          "type": "string",
          "description": "The descriptive note user enter when saving a new profile version"
        },
        "supercede": {
          "type": "string",
          "description": "The profile version which is replaced by current version"
        },
        "validateUser": {
          "type": "string",
          "description": "The validate user of the profile version"
        },
        "validateUserEmail": {
          "type": "string",
          "description": "The validate user email of the profile version"
        }
      },
      "name": "Information"
    },
    "com.harmonicinc.vos.labwizard.rest.model.CaptionServiceDescriptor": {
      "properties": {
        "captionServiceDescriptorData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.CaptionServiceDescriptorData"
          }
        }
      },
      "name": "CaptionServiceDescriptor"
    },
    "com.harmonicinc.vos.labwizard.rest.model.HlsGroupingProfileProperties$VideoStreamSelectionItem$BitrateRange": {
      "properties": {
        "esBitrateRange": {
          "$ref": "#/definitions/com.harmonicinc.vos.labwizard.rest.model.ManipulationProfileProperties$VideoStreamSelectionItem$BitrateRange$EsBitrateRange"
        }
      },
      "name": "BitrateRange"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.Graphic": {
      "properties": {
        "creationDate": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "durationMs": {
          "type": "integer",
          "format": "int64"
        },
        "fileFormat": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileServerId": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "frameRate": {
          "type": "number",
          "format": "double"
        },
        "graphicType": {
          "type": "string",
          "enum": [
            "GRAPHIC",
            "LOGO",
            "AUDIO",
            "HTML_GRAPHIC"
          ]
        },
        "id": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localCopyStatus": {
          "type": "string",
          "enum": [
            "MISSING",
            "SUBMITTED",
            "LOADING",
            "FAILED",
            "READY"
          ]
        },
        "location": {
          "type": "string",
          "enum": [
            "LOCAL",
            "S3",
            "LLCU",
            "ECU",
            "EXTERNAL",
            "BLOB",
            "GCS",
            "LIVE_EVENT_RECORD",
            "LOOP_RECORD",
            "AKAMAI_S3"
          ]
        },
        "resolution": {
          "type": "string"
        },
        "s3Url": {
          "type": "string"
        },
        "sourceLocalCopyFilePath": {
          "type": "string"
        },
        "thumbnailPath": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "name": "Graphic"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.EdgeAuthConfig": {
      "required": [
        "algorithm",
        "enabled",
        "key",
        "urlPrefix"
      ],
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Indicates the encryption format of edge auth",
          "enum": [
            "MD5",
            "SHA1_HMAC",
            "SHA256_HMAC"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether edge auth is enabled"
        },
        "key": {
          "type": "string",
          "description": "Key of encryption"
        },
        "urlPrefix": {
          "type": "string",
          "description": "Custom url prefix"
        }
      },
      "name": "EdgeAuthConfig"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.JpegxsProperties": {
      "required": [
        "jpegxsLevel",
        "jpegxsProfile"
      ],
      "properties": {
        "jpegxsLevel": {
          "type": "string",
          "description": "Level of JPEG-XS stream",
          "enum": [
            "LEVEL_UNRESTRICTED",
            "LEVEL_1_K_1",
            "LEVEL_2_K_1",
            "LEVEL_4_K_1",
            "LEVEL_4_K_2",
            "LEVEL_4_K_3",
            "LEVEL_8_K_1",
            "LEVEL_8_K_2",
            "LEVEL_8_K_3",
            "LEVEL_10_K_1"
          ]
        },
        "jpegxsProfile": {
          "type": "string",
          "description": "Profile of JPEG-XS stream",
          "enum": [
            "PROFILE_UNRESTRICTED",
            "PROFILE_LIGHT_422_10",
            "PROFILE_LIGHT_444_12",
            "PROFILE_LIGHT_SUBLINE_422_10",
            "PROFILE_MAIN_420_12",
            "PROFILE_MAIN_422_10",
            "PROFILE_MAIN_444_12",
            "PROFILE_MAIN_4444_12",
            "PROFILE_HIGH_444_12",
            "PROFILE_HIGH_4444_12",
            "PROFILE_MLS_12",
            "PROFILE_LIGHT_BAYER",
            "PROFILE_MAIN_BAYER",
            "PROFILE_HIGH_BAYER"
          ]
        }
      },
      "name": "JpegxsProperties"
    },
    "com.harmonicinc.externalassetpotf.model.rest.settings.ContainerResourceConfig": {
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double",
          "description": "Number of CPU cores or units of virtual CPU"
        },
        "cpuLimitRatio": {
          "type": "number",
          "format": "double",
          "description": "Ratio of CPU usage limit to allocated amount"
        },
        "mallocArenaMax": {
          "type": "integer",
          "format": "int32",
          "description": "Number of malloc arena for C/C++ application inside container"
        },
        "memInMB": {
          "type": "number",
          "format": "double",
          "description": "Memory in MiB, this value should include the size of cache if memory-backed cache is enabled"
        }
      },
      "name": "ContainerResourceConfig"
    },
    "com.harmonicinc.vos.datapath.sourcemonitor.probe.result.model.CustomDescriptor": {
      "required": [
        "descriptorContent",
        "descriptorTag"
      ],
      "properties": {
        "descriptorContent": {
          "type": "string",
          "description": "Content of descriptor represented in base64 encoded string"
        },
        "descriptorTag": {
          "type": "integer",
          "format": "int32",
          "description": "Tag of descriptor"
        }
      },
      "name": "CustomDescriptor"
    },
    "com.harmonicinc.unifiedoriginenginelibrary.settings.OriginSettings$LoggingConfig": {
      "properties": {
        "collectAccessLogs": {
          "type": "boolean"
        },
        "maxSizeForErrorLogInMB": {
          "type": "integer",
          "format": "int32"
        },
        "maxSizeInMB": {
          "type": "integer",
          "format": "int32"
        },
        "nginxErrorLogLevel": {
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "NOTICE",
            "WARN",
            "ERROR",
            "CRIT",
            "ALERT",
            "EMERG"
          ]
        },
        "retentionPeriodInDays": {
          "type": "integer",
          "format": "int32"
        }
      },
      "name": "LoggingConfig"
    },
    "com.harmonicinc.vos.asset.acquisition.rest.model.OutputDestinationProfileDetails": {
      "properties": {
        "destinationProfileId": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        }
      },
      "name": "OutputDestinationProfileDetails"
    },
    "com.harmonicinc.vos.app.uplink.hub.rest.model.uplink.DownlinkInputStatisticEntry": {
      "required": [
        "inputBitrate",
        "time"
      ],
      "properties": {
        "inputBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The bitrate (bps) of input"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time information for statistic, e.g. 2015-11-04T09:11:33Z"
        }
      },
      "name": "DownlinkInputStatisticEntry"
    },
    "com.harmonicinc.vos.asset.acquisition.model.GeoLocation": {
      "properties": {
        "country": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "name": "GeoLocation"
    },
    "com.harmonicinc.vos.app.configure.model.source.HspInputBufferSettings": {
      "required": [
        "sizeSec"
      ],
      "properties": {
        "sizeSec": {
          "type": "integer",
          "format": "int32",
          "description": "Target size of input buffer in seconds"
        }
      },
      "name": "HspInputBufferSettings"
    },
    "com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.CreateSequenceProperties": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True if the sequence is enabled. A sequence enabled means that it can be inserted in the playlist manually or by a trigger"
        },
        "id": {
          "type": "string",
          "description": "Id of the sequence"
        },
        "name": {
          "type": "string",
          "description": "Name of the sequence"
        },
        "primaries": {
          "type": "array",
          "description": "List of sequence primary events",
          "items": {
            "$ref": "#/definitions/com.harmonicinc.vos.app.playoutcontrolbackend.rest.model.sequence.InsertSequencePrimaryElement"
          }
        },
        "startTrigger": {
          "type": "string",
          "description": "Name of the trigger that can be used to insert the sequence into the playlist"
        },
        "stopTrigger": {
          "type": "string",
          "description": "Name of the trigger that can be used to stop a sequence"
        }
      },
      "name": "CreateSequenceProperties"
    }
  }
}
